Component: Arm Compiler for Embedded 6.19 Tool: armlink [5e73cb00]

==============================================================================

Section Cross References

    main.o(.text.main) refers to myfunctions.o(.text.clockInit) for clockInit
    main.o(.text.main) refers to usart.o(.text.serial_open) for serial_open
    main.o(.text.main) refers to timer.o(.text.updateTimer) for updateTimer
    main.o(.text.main) refers to staticstructure.o(.text.displaySetup) for displaySetup
    main.o(.text.main) refers to timer.o(.text.interruptPC13setup) for interruptPC13setup
    main.o(.text.main) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    main.o(.text.main) refers to main.o(.bss.xCommandQueue) for xCommandQueue
    main.o(.text.main) refers to main.o(.bss.xDrawQueue) for xDrawQueue
    main.o(.text.main) refers to tasking.o(.text.TaskHandleUserInput) for TaskHandleUserInput
    main.o(.text.main) refers to tasks_1.o(.text.xTaskCreate) for xTaskCreate
    main.o(.text.main) refers to main.o(.rodata.str1.1) for .L.str.2
    main.o(.text.main) refers to tasking.o(.text.timeElapsed) for timeElapsed
    main.o(.text.main) refers to tasking.o(.text.floorStatus) for floorStatus
    main.o(.text.main) refers to main.o(.data.statusMessage) for statusMessage
    main.o(.text.main) refers to tasking.o(.text.status) for status
    main.o(.text.main) refers to tasking.o(.text.TaskProcessCommand) for TaskProcessCommand
    main.o(.text.main) refers to tasking.o(.text.draw) for draw
    main.o(.text.main) refers to tasks_1.o(.text.vTaskStartScheduler) for vTaskStartScheduler
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    main.o(.data.statusMessage) refers to main.o(.rodata.str1.1) for [Anonymous Symbol]
    cli.o(.text) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    cli.o(.text) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    cli.o(.text) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    cli.o(.text.CLI_Transmit) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    cli.o(.text.CLI_Transmit) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    cli.o(.text.CLI_Transmit) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    cli.o(.text.CLI_Transmit) refers to usart.o(.text.sendbyte) for sendbyte
    cli.o(.ARM.exidx.text.CLI_Transmit) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    cli.o(.ARM.exidx.text.CLI_Transmit) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    cli.o(.ARM.exidx.text.CLI_Transmit) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    cli.o(.ARM.exidx.text.CLI_Transmit) refers to cli.o(.text.CLI_Transmit) for [Anonymous Symbol]
    cli.o(.text.CLI_Receive) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    cli.o(.text.CLI_Receive) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    cli.o(.text.CLI_Receive) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    cli.o(.text.CLI_Receive) refers to usart.o(.text.sendbyte) for sendbyte
    cli.o(.text.CLI_Receive) refers to usart.o(.text.getbyte) for getbyte
    cli.o(.ARM.exidx.text.CLI_Receive) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    cli.o(.ARM.exidx.text.CLI_Receive) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    cli.o(.ARM.exidx.text.CLI_Receive) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    cli.o(.ARM.exidx.text.CLI_Receive) refers to cli.o(.text.CLI_Receive) for [Anonymous Symbol]
    cli.o(.text.display) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    cli.o(.text.display) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    cli.o(.text.display) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    cli.o(.text.display) refers to cli.o(.rodata.str1.1) for .L.str
    cli.o(.text.display) refers to noretval__2sprintf.o(.text) for __2sprintf
    cli.o(.text.display) refers to strlen.o(.text) for strlen
    cli.o(.text.display) refers to usart.o(.text.sendbyte) for sendbyte
    cli.o(.ARM.exidx.text.display) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    cli.o(.ARM.exidx.text.display) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    cli.o(.ARM.exidx.text.display) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    cli.o(.ARM.exidx.text.display) refers to cli.o(.text.display) for [Anonymous Symbol]
    cli.o(.text.setCursorPosition) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    cli.o(.text.setCursorPosition) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    cli.o(.text.setCursorPosition) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    cli.o(.text.setCursorPosition) refers to cli.o(.rodata.str1.1) for .L.str
    cli.o(.text.setCursorPosition) refers to noretval__2sprintf.o(.text) for __2sprintf
    cli.o(.text.setCursorPosition) refers to strlen.o(.text) for strlen
    cli.o(.text.setCursorPosition) refers to usart.o(.text.sendbyte) for sendbyte
    cli.o(.ARM.exidx.text.setCursorPosition) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    cli.o(.ARM.exidx.text.setCursorPosition) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    cli.o(.ARM.exidx.text.setCursorPosition) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    cli.o(.ARM.exidx.text.setCursorPosition) refers to cli.o(.text.setCursorPosition) for [Anonymous Symbol]
    cli.o(.text.convertToString) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    cli.o(.text.convertToString) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    cli.o(.text.convertToString) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    cli.o(.text.convertToString) refers to noretval__2sprintf.o(.text) for __2sprintf
    cli.o(.text.convertToString) refers to cli.o(.text.display) for display
    cli.o(.ARM.exidx.text.convertToString) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    cli.o(.ARM.exidx.text.convertToString) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    cli.o(.ARM.exidx.text.convertToString) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    cli.o(.ARM.exidx.text.convertToString) refers to cli.o(.text.convertToString) for [Anonymous Symbol]
    cli.o(.text.message) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    cli.o(.text.message) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    cli.o(.text.message) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    cli.o(.text.message) refers to strlen.o(.text) for strlen
    cli.o(.text.message) refers to usart.o(.text.sendbyte) for sendbyte
    cli.o(.ARM.exidx.text.message) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    cli.o(.ARM.exidx.text.message) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    cli.o(.ARM.exidx.text.message) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    cli.o(.ARM.exidx.text.message) refers to cli.o(.text.message) for [Anonymous Symbol]
    cli.o(.text.saveCursorPosition) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    cli.o(.text.saveCursorPosition) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    cli.o(.text.saveCursorPosition) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    cli.o(.text.saveCursorPosition) refers to cli.o(.rodata.str1.1) for .L.str.2
    cli.o(.text.saveCursorPosition) refers to usart.o(.text.sendbyte) for sendbyte
    cli.o(.ARM.exidx.text.saveCursorPosition) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    cli.o(.ARM.exidx.text.saveCursorPosition) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    cli.o(.ARM.exidx.text.saveCursorPosition) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    cli.o(.ARM.exidx.text.saveCursorPosition) refers to cli.o(.text.saveCursorPosition) for [Anonymous Symbol]
    cli.o(.text.getCursorPosition) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    cli.o(.text.getCursorPosition) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    cli.o(.text.getCursorPosition) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    cli.o(.text.getCursorPosition) refers to usart.o(.text.sendbyte) for sendbyte
    cli.o(.ARM.exidx.text.getCursorPosition) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    cli.o(.ARM.exidx.text.getCursorPosition) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    cli.o(.ARM.exidx.text.getCursorPosition) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    cli.o(.ARM.exidx.text.getCursorPosition) refers to cli.o(.text.getCursorPosition) for [Anonymous Symbol]
    cli.o(.text.sendPromptArrows) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    cli.o(.text.sendPromptArrows) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    cli.o(.text.sendPromptArrows) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    cli.o(.text.sendPromptArrows) refers to main.o(.data.currentRow) for currentRow
    cli.o(.text.sendPromptArrows) refers to main.o(.bss.currentColumn) for currentColumn
    cli.o(.text.sendPromptArrows) refers to cli.o(.text.display) for display
    cli.o(.text.sendPromptArrows) refers to cli.o(.rodata.str1.1) for .L.str.2
    cli.o(.text.sendPromptArrows) refers to usart.o(.text.sendbyte) for sendbyte
    cli.o(.ARM.exidx.text.sendPromptArrows) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    cli.o(.ARM.exidx.text.sendPromptArrows) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    cli.o(.ARM.exidx.text.sendPromptArrows) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    cli.o(.ARM.exidx.text.sendPromptArrows) refers to cli.o(.text.sendPromptArrows) for [Anonymous Symbol]
    cli.o(.text.clearScreenFromRow) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    cli.o(.text.clearScreenFromRow) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    cli.o(.text.clearScreenFromRow) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    cli.o(.text.clearScreenFromRow) refers to aeabi_memset4.o(.text) for __aeabi_memset4
    cli.o(.text.clearScreenFromRow) refers to main.o(.bss.currentColumn) for currentColumn
    cli.o(.text.clearScreenFromRow) refers to main.o(.data.currentRow) for currentRow
    cli.o(.text.clearScreenFromRow) refers to cli.o(.text.display) for display
    cli.o(.text.clearScreenFromRow) refers to cli.o(.rodata.str1.1) for .L.str
    cli.o(.text.clearScreenFromRow) refers to noretval__2sprintf.o(.text) for __2sprintf
    cli.o(.text.clearScreenFromRow) refers to strlen.o(.text) for strlen
    cli.o(.text.clearScreenFromRow) refers to usart.o(.text.sendbyte) for sendbyte
    cli.o(.ARM.exidx.text.clearScreenFromRow) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    cli.o(.ARM.exidx.text.clearScreenFromRow) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    cli.o(.ARM.exidx.text.clearScreenFromRow) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    cli.o(.ARM.exidx.text.clearScreenFromRow) refers to cli.o(.text.clearScreenFromRow) for [Anonymous Symbol]
    cli.o(.rodata.str1.1) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    cli.o(.rodata.str1.1) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    cli.o(.rodata.str1.1) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    usart.o(.text.serial_open) refers to myfunctions.o(.text.RCC_EnableUSARTClock) for RCC_EnableUSARTClock
    usart.o(.text.serial_open) refers to myfunctions.o(.text.RCC_SetGPIOClock) for RCC_SetGPIOClock
    usart.o(.text.serial_open) refers to myfunctions.o(.text.GPIO_ConfigurePin) for GPIO_ConfigurePin
    usart.o(.text.serial_open) refers to myfunctions.o(.text.RCC_EnableTimerClock) for RCC_EnableTimerClock
    usart.o(.ARM.exidx.text.serial_open) refers to usart.o(.text.serial_open) for [Anonymous Symbol]
    usart.o(.text.usartTimer) refers to myfunctions.o(.text.RCC_EnableTimerClock) for RCC_EnableTimerClock
    usart.o(.ARM.exidx.text.usartTimer) refers to usart.o(.text.usartTimer) for [Anonymous Symbol]
    usart.o(.ARM.exidx.text.serial_close) refers to usart.o(.text.serial_close) for [Anonymous Symbol]
    usart.o(.ARM.exidx.text.sendbyte) refers to usart.o(.text.sendbyte) for [Anonymous Symbol]
    usart.o(.ARM.exidx.text.getbyte) refers to usart.o(.text.getbyte) for [Anonymous Symbol]
    usart.o(.text.USART2_IRQHandler) refers to main.o(.bss.characterReceived) for characterReceived
    usart.o(.text.USART2_IRQHandler) refers to main.o(.bss.characterFlag) for characterFlag
    usart.o(.ARM.exidx.text.USART2_IRQHandler) refers to usart.o(.text.USART2_IRQHandler) for [Anonymous Symbol]
    myfunctions.o(.ARM.exidx.text.clockInit) refers to myfunctions.o(.text.clockInit) for [Anonymous Symbol]
    myfunctions.o(.ARM.exidx.text.RCC_SetGPIOClock) refers to myfunctions.o(.text.RCC_SetGPIOClock) for [Anonymous Symbol]
    myfunctions.o(.ARM.exidx.text.RCC_EnableAFIOClock) refers to myfunctions.o(.text.RCC_EnableAFIOClock) for [Anonymous Symbol]
    myfunctions.o(.ARM.exidx.text.RCC_EnableADCClock) refers to myfunctions.o(.text.RCC_EnableADCClock) for [Anonymous Symbol]
    myfunctions.o(.ARM.exidx.text.RCC_EnableUSARTClock) refers to myfunctions.o(.text.RCC_EnableUSARTClock) for [Anonymous Symbol]
    myfunctions.o(.ARM.exidx.text.RCC_EnableTimerClock) refers to myfunctions.o(.text.RCC_EnableTimerClock) for [Anonymous Symbol]
    myfunctions.o(.ARM.exidx.text.GPIO_ConfigurePin) refers to myfunctions.o(.text.GPIO_ConfigurePin) for [Anonymous Symbol]
    myfunctions.o(.ARM.exidx.text.delay) refers to myfunctions.o(.text.delay) for [Anonymous Symbol]
    myfunctions.o(.ARM.exidx.text.ledFlash) refers to myfunctions.o(.text.ledFlash) for [Anonymous Symbol]
    myfunctions.o(.ARM.exidx.text.userLedOn) refers to myfunctions.o(.text.userLedOn) for [Anonymous Symbol]
    myfunctions.o(.ARM.exidx.text.userLedOff) refers to myfunctions.o(.text.userLedOff) for [Anonymous Symbol]
    myfunctions.o(.ARM.exidx.text.my_abs) refers to myfunctions.o(.text.my_abs) for [Anonymous Symbol]
    myfunctions.o(.ARM.exidx.text.characterToInt) refers to myfunctions.o(.text.characterToInt) for [Anonymous Symbol]
    myfunctions.o(.text.newMemory) refers to strlen.o(.text) for strlen
    myfunctions.o(.text.newMemory) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    myfunctions.o(.text.newMemory) refers to strcpy.o(.text) for strcpy
    myfunctions.o(.ARM.exidx.text.newMemory) refers to myfunctions.o(.text.newMemory) for [Anonymous Symbol]
    timer.o(.text.updateTimer) refers to myfunctions.o(.text.RCC_EnableTimerClock) for RCC_EnableTimerClock
    timer.o(.ARM.exidx.text.updateTimer) refers to timer.o(.text.updateTimer) for [Anonymous Symbol]
    timer.o(.text.initTimerForTIM3) refers to myfunctions.o(.text.RCC_EnableTimerClock) for RCC_EnableTimerClock
    timer.o(.ARM.exidx.text.initTimerForTIM3) refers to timer.o(.text.initTimerForTIM3) for [Anonymous Symbol]
    timer.o(.text.TIM3_IRQHandler) refers to main.o(.bss.timeCounter) for timeCounter
    timer.o(.ARM.exidx.text.TIM3_IRQHandler) refers to timer.o(.text.TIM3_IRQHandler) for [Anonymous Symbol]
    timer.o(.text.interruptPC13setup) refers to myfunctions.o(.text.RCC_SetGPIOClock) for RCC_SetGPIOClock
    timer.o(.text.interruptPC13setup) refers to myfunctions.o(.text.RCC_EnableAFIOClock) for RCC_EnableAFIOClock
    timer.o(.ARM.exidx.text.interruptPC13setup) refers to timer.o(.text.interruptPC13setup) for [Anonymous Symbol]
    timer.o(.text.EXTI15_10_IRQHandler) refers to main.o(.bss.buttonPressed) for buttonPressed
    timer.o(.text.EXTI15_10_IRQHandler) refers to usart.o(.text.serial_open) for serial_open
    timer.o(.text.EXTI15_10_IRQHandler) refers to timer.o(.rodata.str1.1) for .L.str
    timer.o(.text.EXTI15_10_IRQHandler) refers to cli.o(.text.display) for display
    timer.o(.text.EXTI15_10_IRQHandler) refers to usart.o(.text.serial_close) for serial_close
    timer.o(.ARM.exidx.text.EXTI15_10_IRQHandler) refers to timer.o(.text.EXTI15_10_IRQHandler) for [Anonymous Symbol]
    tasking.o(.text) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    tasking.o(.text) refers (Special) to _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) for _printf_s
    tasking.o(.text) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    tasking.o(.text) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    tasking.o(.text) refers (Special) to _printf_str.o(.text) for _printf_str
    tasking.o(.text.status) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    tasking.o(.text.status) refers (Special) to _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) for _printf_s
    tasking.o(.text.status) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    tasking.o(.text.status) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    tasking.o(.text.status) refers (Special) to _printf_str.o(.text) for _printf_str
    tasking.o(.text.status) refers to main.o(.data.statusMessage) for statusMessage
    tasking.o(.text.status) refers to tasking.o(.rodata.str1.1) for .L.str.1
    tasking.o(.text.status) refers to staticstructure.o(.text.setTextColor) for setTextColor
    tasking.o(.text.status) refers to noretval__2sprintf.o(.text) for __2sprintf
    tasking.o(.text.status) refers to strlen.o(.text) for strlen
    tasking.o(.text.status) refers to cli.o(.text.CLI_Transmit) for CLI_Transmit
    tasking.o(.text.status) refers to cli.o(.text.message) for message
    tasking.o(.text.status) refers to tasks_1.o(.text.vTaskDelay) for vTaskDelay
    tasking.o(.ARM.exidx.text.status) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    tasking.o(.ARM.exidx.text.status) refers (Special) to _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) for _printf_s
    tasking.o(.ARM.exidx.text.status) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    tasking.o(.ARM.exidx.text.status) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    tasking.o(.ARM.exidx.text.status) refers (Special) to _printf_str.o(.text) for _printf_str
    tasking.o(.ARM.exidx.text.status) refers to tasking.o(.text.status) for [Anonymous Symbol]
    tasking.o(.text.floorStatus) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    tasking.o(.text.floorStatus) refers (Special) to _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) for _printf_s
    tasking.o(.text.floorStatus) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    tasking.o(.text.floorStatus) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    tasking.o(.text.floorStatus) refers (Special) to _printf_str.o(.text) for _printf_str
    tasking.o(.text.floorStatus) refers to main.o(.data.floorNumber) for floorNumber
    tasking.o(.text.floorStatus) refers to tasking.o(.rodata.str1.1) for .L.str.1
    tasking.o(.text.floorStatus) refers to staticstructure.o(.text.setTextColor) for setTextColor
    tasking.o(.text.floorStatus) refers to noretval__2sprintf.o(.text) for __2sprintf
    tasking.o(.text.floorStatus) refers to strlen.o(.text) for strlen
    tasking.o(.text.floorStatus) refers to cli.o(.text.CLI_Transmit) for CLI_Transmit
    tasking.o(.text.floorStatus) refers to cli.o(.text.message) for message
    tasking.o(.text.floorStatus) refers to tasks_1.o(.text.vTaskDelay) for vTaskDelay
    tasking.o(.ARM.exidx.text.floorStatus) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    tasking.o(.ARM.exidx.text.floorStatus) refers (Special) to _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) for _printf_s
    tasking.o(.ARM.exidx.text.floorStatus) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    tasking.o(.ARM.exidx.text.floorStatus) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    tasking.o(.ARM.exidx.text.floorStatus) refers (Special) to _printf_str.o(.text) for _printf_str
    tasking.o(.ARM.exidx.text.floorStatus) refers to tasking.o(.text.floorStatus) for [Anonymous Symbol]
    tasking.o(.text.timeElapsed) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    tasking.o(.text.timeElapsed) refers (Special) to _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) for _printf_s
    tasking.o(.text.timeElapsed) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    tasking.o(.text.timeElapsed) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    tasking.o(.text.timeElapsed) refers (Special) to _printf_str.o(.text) for _printf_str
    tasking.o(.text.timeElapsed) refers to main.o(.bss.timeCounter) for timeCounter
    tasking.o(.text.timeElapsed) refers to tasking.o(.rodata.str1.1) for .L.str.1
    tasking.o(.text.timeElapsed) refers to staticstructure.o(.text.setTextColor) for setTextColor
    tasking.o(.text.timeElapsed) refers to noretval__2sprintf.o(.text) for __2sprintf
    tasking.o(.text.timeElapsed) refers to strlen.o(.text) for strlen
    tasking.o(.text.timeElapsed) refers to cli.o(.text.CLI_Transmit) for CLI_Transmit
    tasking.o(.text.timeElapsed) refers to cli.o(.text.message) for message
    tasking.o(.text.timeElapsed) refers to tasks_1.o(.text.vTaskDelay) for vTaskDelay
    tasking.o(.ARM.exidx.text.timeElapsed) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    tasking.o(.ARM.exidx.text.timeElapsed) refers (Special) to _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) for _printf_s
    tasking.o(.ARM.exidx.text.timeElapsed) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    tasking.o(.ARM.exidx.text.timeElapsed) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    tasking.o(.ARM.exidx.text.timeElapsed) refers (Special) to _printf_str.o(.text) for _printf_str
    tasking.o(.ARM.exidx.text.timeElapsed) refers to tasking.o(.text.timeElapsed) for [Anonymous Symbol]
    tasking.o(.text.TaskHandleUserInput) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    tasking.o(.text.TaskHandleUserInput) refers (Special) to _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) for _printf_s
    tasking.o(.text.TaskHandleUserInput) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    tasking.o(.text.TaskHandleUserInput) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    tasking.o(.text.TaskHandleUserInput) refers (Special) to _printf_str.o(.text) for _printf_str
    tasking.o(.text.TaskHandleUserInput) refers to cli.o(.text.sendPromptArrows) for sendPromptArrows
    tasking.o(.text.TaskHandleUserInput) refers to tasking.o(.rodata.str1.1) for .L.str.4
    tasking.o(.text.TaskHandleUserInput) refers to cli.o(.text.message) for message
    tasking.o(.text.TaskHandleUserInput) refers to main.o(.bss.characterFlag) for characterFlag
    tasking.o(.text.TaskHandleUserInput) refers to main.o(.bss.characterReceived) for characterReceived
    tasking.o(.text.TaskHandleUserInput) refers to main.o(.data.currentRow) for currentRow
    tasking.o(.text.TaskHandleUserInput) refers to tasking.o(.bss.cmdIndex) for cmdIndex
    tasking.o(.text.TaskHandleUserInput) refers to tasking.o(.bss.cmdBuffer) for cmdBuffer
    tasking.o(.text.TaskHandleUserInput) refers to tasks_1.o(.text.vTaskDelay) for vTaskDelay
    tasking.o(.text.TaskHandleUserInput) refers to cli.o(.text.clearScreenFromRow) for clearScreenFromRow
    tasking.o(.text.TaskHandleUserInput) refers to cli.o(.text.setCursorPosition) for setCursorPosition
    tasking.o(.text.TaskHandleUserInput) refers to myfunctions.o(.text.newMemory) for newMemory
    tasking.o(.text.TaskHandleUserInput) refers to main.o(.bss.xCommandQueue) for xCommandQueue
    tasking.o(.text.TaskHandleUserInput) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    tasking.o(.ARM.exidx.text.TaskHandleUserInput) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    tasking.o(.ARM.exidx.text.TaskHandleUserInput) refers (Special) to _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) for _printf_s
    tasking.o(.ARM.exidx.text.TaskHandleUserInput) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    tasking.o(.ARM.exidx.text.TaskHandleUserInput) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    tasking.o(.ARM.exidx.text.TaskHandleUserInput) refers (Special) to _printf_str.o(.text) for _printf_str
    tasking.o(.ARM.exidx.text.TaskHandleUserInput) refers to tasking.o(.text.TaskHandleUserInput) for [Anonymous Symbol]
    tasking.o(.text.draw) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    tasking.o(.text.draw) refers (Special) to _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) for _printf_s
    tasking.o(.text.draw) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    tasking.o(.text.draw) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    tasking.o(.text.draw) refers (Special) to _printf_str.o(.text) for _printf_str
    tasking.o(.text.draw) refers to main.o(.bss.xDrawQueue) for xDrawQueue
    tasking.o(.text.draw) refers to tasks_1.o(.text.vTaskDelay) for vTaskDelay
    tasking.o(.text.draw) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    tasking.o(.text.draw) refers to staticstructure.o(.text.drawFirst) for drawFirst
    tasking.o(.text.draw) refers to staticstructure.o(.text.drawSecond) for drawSecond
    tasking.o(.text.draw) refers to staticstructure.o(.text.drawThird) for drawThird
    tasking.o(.text.draw) refers to staticstructure.o(.text.drawForth) for drawForth
    tasking.o(.text.draw) refers to staticstructure.o(.text.drawFifth) for drawFifth
    tasking.o(.ARM.exidx.text.draw) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    tasking.o(.ARM.exidx.text.draw) refers (Special) to _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) for _printf_s
    tasking.o(.ARM.exidx.text.draw) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    tasking.o(.ARM.exidx.text.draw) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    tasking.o(.ARM.exidx.text.draw) refers (Special) to _printf_str.o(.text) for _printf_str
    tasking.o(.ARM.exidx.text.draw) refers to tasking.o(.text.draw) for [Anonymous Symbol]
    tasking.o(.text.TaskProcessCommand) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    tasking.o(.text.TaskProcessCommand) refers (Special) to _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) for _printf_s
    tasking.o(.text.TaskProcessCommand) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    tasking.o(.text.TaskProcessCommand) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    tasking.o(.text.TaskProcessCommand) refers (Special) to _printf_str.o(.text) for _printf_str
    tasking.o(.text.TaskProcessCommand) refers to main.o(.bss.xCommandQueue) for xCommandQueue
    tasking.o(.text.TaskProcessCommand) refers to tasks_1.o(.text.vTaskDelay) for vTaskDelay
    tasking.o(.text.TaskProcessCommand) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    tasking.o(.text.TaskProcessCommand) refers to tasking.o(.text.processCommand) for processCommand
    tasking.o(.text.TaskProcessCommand) refers to heap_4.o(.text.vPortFree) for vPortFree
    tasking.o(.ARM.exidx.text.TaskProcessCommand) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    tasking.o(.ARM.exidx.text.TaskProcessCommand) refers (Special) to _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) for _printf_s
    tasking.o(.ARM.exidx.text.TaskProcessCommand) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    tasking.o(.ARM.exidx.text.TaskProcessCommand) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    tasking.o(.ARM.exidx.text.TaskProcessCommand) refers (Special) to _printf_str.o(.text) for _printf_str
    tasking.o(.ARM.exidx.text.TaskProcessCommand) refers to tasking.o(.text.TaskProcessCommand) for [Anonymous Symbol]
    tasking.o(.text.processCommand) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    tasking.o(.text.processCommand) refers (Special) to _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) for _printf_s
    tasking.o(.text.processCommand) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    tasking.o(.text.processCommand) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    tasking.o(.text.processCommand) refers (Special) to _printf_str.o(.text) for _printf_str
    tasking.o(.text.processCommand) refers to strcmpv7m.o(.text) for strcmp
    tasking.o(.text.processCommand) refers to myfunctions.o(.text.characterToInt) for characterToInt
    tasking.o(.text.processCommand) refers to tasking.o(.text.moveElevatorToFloor) for moveElevatorToFloor
    tasking.o(.text.processCommand) refers to myfunctions.o(.text.delay) for delay
    tasking.o(.text.processCommand) refers to main.o(.data.statusMessage) for statusMessage
    tasking.o(.ARM.exidx.text.processCommand) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    tasking.o(.ARM.exidx.text.processCommand) refers (Special) to _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) for _printf_s
    tasking.o(.ARM.exidx.text.processCommand) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    tasking.o(.ARM.exidx.text.processCommand) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    tasking.o(.ARM.exidx.text.processCommand) refers (Special) to _printf_str.o(.text) for _printf_str
    tasking.o(.ARM.exidx.text.processCommand) refers to tasking.o(.text.processCommand) for [Anonymous Symbol]
    tasking.o(.text.moveElevatorToFloor) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    tasking.o(.text.moveElevatorToFloor) refers (Special) to _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) for _printf_s
    tasking.o(.text.moveElevatorToFloor) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    tasking.o(.text.moveElevatorToFloor) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    tasking.o(.text.moveElevatorToFloor) refers (Special) to _printf_str.o(.text) for _printf_str
    tasking.o(.text.moveElevatorToFloor) refers to main.o(.data.floorNumber) for floorNumber
    tasking.o(.text.moveElevatorToFloor) refers to main.o(.data.statusMessage) for statusMessage
    tasking.o(.text.moveElevatorToFloor) refers to tasking.o(.rodata.str1.1) for .L.str.5
    tasking.o(.text.moveElevatorToFloor) refers to myfunctions.o(.text.delay) for delay
    tasking.o(.text.moveElevatorToFloor) refers to noretval__2sprintf.o(.text) for __2sprintf
    tasking.o(.text.moveElevatorToFloor) refers to main.o(.bss.xDrawQueue) for xDrawQueue
    tasking.o(.text.moveElevatorToFloor) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    tasking.o(.ARM.exidx.text.moveElevatorToFloor) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    tasking.o(.ARM.exidx.text.moveElevatorToFloor) refers (Special) to _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) for _printf_s
    tasking.o(.ARM.exidx.text.moveElevatorToFloor) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    tasking.o(.ARM.exidx.text.moveElevatorToFloor) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    tasking.o(.ARM.exidx.text.moveElevatorToFloor) refers (Special) to _printf_str.o(.text) for _printf_str
    tasking.o(.ARM.exidx.text.moveElevatorToFloor) refers to tasking.o(.text.moveElevatorToFloor) for [Anonymous Symbol]
    tasking.o(.rodata.str1.1) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    tasking.o(.rodata.str1.1) refers (Special) to _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) for _printf_s
    tasking.o(.rodata.str1.1) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    tasking.o(.rodata.str1.1) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    tasking.o(.rodata.str1.1) refers (Special) to _printf_str.o(.text) for _printf_str
    tasking.o(.bss.cmdBuffer) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    tasking.o(.bss.cmdBuffer) refers (Special) to _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) for _printf_s
    tasking.o(.bss.cmdBuffer) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    tasking.o(.bss.cmdBuffer) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    tasking.o(.bss.cmdBuffer) refers (Special) to _printf_str.o(.text) for _printf_str
    tasking.o(.bss.cmdIndex) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    tasking.o(.bss.cmdIndex) refers (Special) to _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) for _printf_s
    tasking.o(.bss.cmdIndex) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    tasking.o(.bss.cmdIndex) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    tasking.o(.bss.cmdIndex) refers (Special) to _printf_str.o(.text) for _printf_str
    staticstructure.o(.text) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    staticstructure.o(.text) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    staticstructure.o(.text) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    staticstructure.o(.text.setTextColor) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    staticstructure.o(.text.setTextColor) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    staticstructure.o(.text.setTextColor) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    staticstructure.o(.text.setTextColor) refers to staticstructure.o(.rodata.str1.1) for .L.str
    staticstructure.o(.text.setTextColor) refers to noretval__2sprintf.o(.text) for __2sprintf
    staticstructure.o(.text.setTextColor) refers to strlen.o(.text) for strlen
    staticstructure.o(.text.setTextColor) refers to cli.o(.text.CLI_Transmit) for CLI_Transmit
    staticstructure.o(.ARM.exidx.text.setTextColor) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    staticstructure.o(.ARM.exidx.text.setTextColor) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    staticstructure.o(.ARM.exidx.text.setTextColor) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    staticstructure.o(.ARM.exidx.text.setTextColor) refers to staticstructure.o(.text.setTextColor) for [Anonymous Symbol]
    staticstructure.o(.text.displayBox) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    staticstructure.o(.text.displayBox) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    staticstructure.o(.text.displayBox) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    staticstructure.o(.text.displayBox) refers to staticstructure.o(.rodata.str1.1) for .L.str
    staticstructure.o(.text.displayBox) refers to noretval__2sprintf.o(.text) for __2sprintf
    staticstructure.o(.text.displayBox) refers to strlen.o(.text) for strlen
    staticstructure.o(.text.displayBox) refers to cli.o(.text.CLI_Transmit) for CLI_Transmit
    staticstructure.o(.text.displayBox) refers to cli.o(.text.setCursorPosition) for setCursorPosition
    staticstructure.o(.ARM.exidx.text.displayBox) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    staticstructure.o(.ARM.exidx.text.displayBox) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    staticstructure.o(.ARM.exidx.text.displayBox) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    staticstructure.o(.ARM.exidx.text.displayBox) refers to staticstructure.o(.text.displayBox) for [Anonymous Symbol]
    staticstructure.o(.text.drawHorizontal) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    staticstructure.o(.text.drawHorizontal) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    staticstructure.o(.text.drawHorizontal) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    staticstructure.o(.text.drawHorizontal) refers to staticstructure.o(.rodata.str1.1) for .L.str
    staticstructure.o(.text.drawHorizontal) refers to noretval__2sprintf.o(.text) for __2sprintf
    staticstructure.o(.text.drawHorizontal) refers to strlen.o(.text) for strlen
    staticstructure.o(.text.drawHorizontal) refers to cli.o(.text.CLI_Transmit) for CLI_Transmit
    staticstructure.o(.text.drawHorizontal) refers to cli.o(.text.setCursorPosition) for setCursorPosition
    staticstructure.o(.ARM.exidx.text.drawHorizontal) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    staticstructure.o(.ARM.exidx.text.drawHorizontal) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    staticstructure.o(.ARM.exidx.text.drawHorizontal) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    staticstructure.o(.ARM.exidx.text.drawHorizontal) refers to staticstructure.o(.text.drawHorizontal) for [Anonymous Symbol]
    staticstructure.o(.text.drawVertical) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    staticstructure.o(.text.drawVertical) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    staticstructure.o(.text.drawVertical) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    staticstructure.o(.text.drawVertical) refers to staticstructure.o(.rodata.str1.1) for .L.str
    staticstructure.o(.text.drawVertical) refers to noretval__2sprintf.o(.text) for __2sprintf
    staticstructure.o(.text.drawVertical) refers to strlen.o(.text) for strlen
    staticstructure.o(.text.drawVertical) refers to cli.o(.text.CLI_Transmit) for CLI_Transmit
    staticstructure.o(.text.drawVertical) refers to cli.o(.text.setCursorPosition) for setCursorPosition
    staticstructure.o(.ARM.exidx.text.drawVertical) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    staticstructure.o(.ARM.exidx.text.drawVertical) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    staticstructure.o(.ARM.exidx.text.drawVertical) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    staticstructure.o(.ARM.exidx.text.drawVertical) refers to staticstructure.o(.text.drawVertical) for [Anonymous Symbol]
    staticstructure.o(.text.drawFifth) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    staticstructure.o(.text.drawFifth) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    staticstructure.o(.text.drawFifth) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    staticstructure.o(.text.drawFifth) refers to staticstructure.o(.text.displayBox) for displayBox
    staticstructure.o(.text.drawFifth) refers to staticstructure.o(.rodata.str1.1) for .L.str
    staticstructure.o(.text.drawFifth) refers to noretval__2sprintf.o(.text) for __2sprintf
    staticstructure.o(.text.drawFifth) refers to strlen.o(.text) for strlen
    staticstructure.o(.text.drawFifth) refers to cli.o(.text.CLI_Transmit) for CLI_Transmit
    staticstructure.o(.text.drawFifth) refers to cli.o(.text.setCursorPosition) for setCursorPosition
    staticstructure.o(.text.drawFifth) refers to cli.o(.text.convertToString) for convertToString
    staticstructure.o(.ARM.exidx.text.drawFifth) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    staticstructure.o(.ARM.exidx.text.drawFifth) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    staticstructure.o(.ARM.exidx.text.drawFifth) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    staticstructure.o(.ARM.exidx.text.drawFifth) refers to staticstructure.o(.text.drawFifth) for [Anonymous Symbol]
    staticstructure.o(.text.drawForth) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    staticstructure.o(.text.drawForth) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    staticstructure.o(.text.drawForth) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    staticstructure.o(.text.drawForth) refers to staticstructure.o(.text.displayBox) for displayBox
    staticstructure.o(.text.drawForth) refers to staticstructure.o(.rodata.str1.1) for .L.str
    staticstructure.o(.text.drawForth) refers to noretval__2sprintf.o(.text) for __2sprintf
    staticstructure.o(.text.drawForth) refers to strlen.o(.text) for strlen
    staticstructure.o(.text.drawForth) refers to cli.o(.text.CLI_Transmit) for CLI_Transmit
    staticstructure.o(.text.drawForth) refers to cli.o(.text.setCursorPosition) for setCursorPosition
    staticstructure.o(.text.drawForth) refers to cli.o(.text.convertToString) for convertToString
    staticstructure.o(.ARM.exidx.text.drawForth) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    staticstructure.o(.ARM.exidx.text.drawForth) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    staticstructure.o(.ARM.exidx.text.drawForth) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    staticstructure.o(.ARM.exidx.text.drawForth) refers to staticstructure.o(.text.drawForth) for [Anonymous Symbol]
    staticstructure.o(.text.drawThird) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    staticstructure.o(.text.drawThird) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    staticstructure.o(.text.drawThird) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    staticstructure.o(.text.drawThird) refers to staticstructure.o(.text.displayBox) for displayBox
    staticstructure.o(.text.drawThird) refers to staticstructure.o(.rodata.str1.1) for .L.str
    staticstructure.o(.text.drawThird) refers to noretval__2sprintf.o(.text) for __2sprintf
    staticstructure.o(.text.drawThird) refers to strlen.o(.text) for strlen
    staticstructure.o(.text.drawThird) refers to cli.o(.text.CLI_Transmit) for CLI_Transmit
    staticstructure.o(.text.drawThird) refers to cli.o(.text.setCursorPosition) for setCursorPosition
    staticstructure.o(.text.drawThird) refers to cli.o(.text.convertToString) for convertToString
    staticstructure.o(.ARM.exidx.text.drawThird) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    staticstructure.o(.ARM.exidx.text.drawThird) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    staticstructure.o(.ARM.exidx.text.drawThird) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    staticstructure.o(.ARM.exidx.text.drawThird) refers to staticstructure.o(.text.drawThird) for [Anonymous Symbol]
    staticstructure.o(.text.drawSecond) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    staticstructure.o(.text.drawSecond) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    staticstructure.o(.text.drawSecond) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    staticstructure.o(.text.drawSecond) refers to staticstructure.o(.text.displayBox) for displayBox
    staticstructure.o(.text.drawSecond) refers to staticstructure.o(.rodata.str1.1) for .L.str
    staticstructure.o(.text.drawSecond) refers to noretval__2sprintf.o(.text) for __2sprintf
    staticstructure.o(.text.drawSecond) refers to strlen.o(.text) for strlen
    staticstructure.o(.text.drawSecond) refers to cli.o(.text.CLI_Transmit) for CLI_Transmit
    staticstructure.o(.text.drawSecond) refers to cli.o(.text.setCursorPosition) for setCursorPosition
    staticstructure.o(.text.drawSecond) refers to cli.o(.text.convertToString) for convertToString
    staticstructure.o(.ARM.exidx.text.drawSecond) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    staticstructure.o(.ARM.exidx.text.drawSecond) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    staticstructure.o(.ARM.exidx.text.drawSecond) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    staticstructure.o(.ARM.exidx.text.drawSecond) refers to staticstructure.o(.text.drawSecond) for [Anonymous Symbol]
    staticstructure.o(.text.drawFirst) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    staticstructure.o(.text.drawFirst) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    staticstructure.o(.text.drawFirst) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    staticstructure.o(.text.drawFirst) refers to staticstructure.o(.text.displayBox) for displayBox
    staticstructure.o(.text.drawFirst) refers to staticstructure.o(.rodata.str1.1) for .L.str
    staticstructure.o(.text.drawFirst) refers to noretval__2sprintf.o(.text) for __2sprintf
    staticstructure.o(.text.drawFirst) refers to strlen.o(.text) for strlen
    staticstructure.o(.text.drawFirst) refers to cli.o(.text.CLI_Transmit) for CLI_Transmit
    staticstructure.o(.text.drawFirst) refers to cli.o(.text.setCursorPosition) for setCursorPosition
    staticstructure.o(.text.drawFirst) refers to cli.o(.text.convertToString) for convertToString
    staticstructure.o(.ARM.exidx.text.drawFirst) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    staticstructure.o(.ARM.exidx.text.drawFirst) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    staticstructure.o(.ARM.exidx.text.drawFirst) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    staticstructure.o(.ARM.exidx.text.drawFirst) refers to staticstructure.o(.text.drawFirst) for [Anonymous Symbol]
    staticstructure.o(.text.instructions) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    staticstructure.o(.text.instructions) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    staticstructure.o(.text.instructions) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    staticstructure.o(.text.instructions) refers to staticstructure.o(.rodata.str1.1) for .L.str
    staticstructure.o(.text.instructions) refers to noretval__2sprintf.o(.text) for __2sprintf
    staticstructure.o(.text.instructions) refers to strlen.o(.text) for strlen
    staticstructure.o(.text.instructions) refers to cli.o(.text.CLI_Transmit) for CLI_Transmit
    staticstructure.o(.text.instructions) refers to cli.o(.text.display) for display
    staticstructure.o(.ARM.exidx.text.instructions) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    staticstructure.o(.ARM.exidx.text.instructions) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    staticstructure.o(.ARM.exidx.text.instructions) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    staticstructure.o(.ARM.exidx.text.instructions) refers to staticstructure.o(.text.instructions) for [Anonymous Symbol]
    staticstructure.o(.text.statusDisplay) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    staticstructure.o(.text.statusDisplay) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    staticstructure.o(.text.statusDisplay) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    staticstructure.o(.text.statusDisplay) refers to staticstructure.o(.rodata.str1.1) for .L.str
    staticstructure.o(.text.statusDisplay) refers to noretval__2sprintf.o(.text) for __2sprintf
    staticstructure.o(.text.statusDisplay) refers to strlen.o(.text) for strlen
    staticstructure.o(.text.statusDisplay) refers to cli.o(.text.CLI_Transmit) for CLI_Transmit
    staticstructure.o(.text.statusDisplay) refers to staticstructure.o(.text.displayBox) for displayBox
    staticstructure.o(.text.statusDisplay) refers to cli.o(.text.display) for display
    staticstructure.o(.ARM.exidx.text.statusDisplay) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    staticstructure.o(.ARM.exidx.text.statusDisplay) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    staticstructure.o(.ARM.exidx.text.statusDisplay) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    staticstructure.o(.ARM.exidx.text.statusDisplay) refers to staticstructure.o(.text.statusDisplay) for [Anonymous Symbol]
    staticstructure.o(.text.displayBreaker) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    staticstructure.o(.text.displayBreaker) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    staticstructure.o(.text.displayBreaker) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    staticstructure.o(.text.displayBreaker) refers to staticstructure.o(.rodata.str1.1) for .L.str
    staticstructure.o(.text.displayBreaker) refers to noretval__2sprintf.o(.text) for __2sprintf
    staticstructure.o(.text.displayBreaker) refers to strlen.o(.text) for strlen
    staticstructure.o(.text.displayBreaker) refers to cli.o(.text.CLI_Transmit) for CLI_Transmit
    staticstructure.o(.text.displayBreaker) refers to cli.o(.text.display) for display
    staticstructure.o(.ARM.exidx.text.displayBreaker) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    staticstructure.o(.ARM.exidx.text.displayBreaker) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    staticstructure.o(.ARM.exidx.text.displayBreaker) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    staticstructure.o(.ARM.exidx.text.displayBreaker) refers to staticstructure.o(.text.displayBreaker) for [Anonymous Symbol]
    staticstructure.o(.text.displaySetup) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    staticstructure.o(.text.displaySetup) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    staticstructure.o(.text.displaySetup) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    staticstructure.o(.text.displaySetup) refers to cli.o(.text.display) for display
    staticstructure.o(.text.displaySetup) refers to staticstructure.o(.text.drawFirst) for drawFirst
    staticstructure.o(.text.displaySetup) refers to staticstructure.o(.text.drawSecond) for drawSecond
    staticstructure.o(.text.displaySetup) refers to staticstructure.o(.text.drawThird) for drawThird
    staticstructure.o(.text.displaySetup) refers to staticstructure.o(.text.drawForth) for drawForth
    staticstructure.o(.text.displaySetup) refers to staticstructure.o(.text.drawFifth) for drawFifth
    staticstructure.o(.text.displaySetup) refers to staticstructure.o(.rodata.str1.1) for .L.str
    staticstructure.o(.text.displaySetup) refers to noretval__2sprintf.o(.text) for __2sprintf
    staticstructure.o(.text.displaySetup) refers to strlen.o(.text) for strlen
    staticstructure.o(.text.displaySetup) refers to cli.o(.text.CLI_Transmit) for CLI_Transmit
    staticstructure.o(.text.displaySetup) refers to staticstructure.o(.text.instructions) for instructions
    staticstructure.o(.text.displaySetup) refers to staticstructure.o(.text.displayBox) for displayBox
    staticstructure.o(.ARM.exidx.text.displaySetup) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    staticstructure.o(.ARM.exidx.text.displaySetup) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    staticstructure.o(.ARM.exidx.text.displaySetup) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    staticstructure.o(.ARM.exidx.text.displaySetup) refers to staticstructure.o(.text.displaySetup) for [Anonymous Symbol]
    staticstructure.o(.rodata.str1.1) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    staticstructure.o(.rodata.str1.1) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    staticstructure.o(.rodata.str1.1) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    clib_arm.o(.ARM.exidx.text._platform_post_stackheap_init) refers to clib_arm.o(.text._platform_post_stackheap_init) for [Anonymous Symbol]
    clib_arm.o(.text.__user_perthread_libspace) refers to tasks_1.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    clib_arm.o(.text.__user_perthread_libspace) refers to clib_arm.o(.bss.os_libspace) for os_libspace
    clib_arm.o(.text.__user_perthread_libspace) refers to tasks_1.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    clib_arm.o(.text.__user_perthread_libspace) refers to clib_arm.o(.bss.os_libspace_id) for os_libspace_id
    clib_arm.o(.ARM.exidx.text.__user_perthread_libspace) refers to clib_arm.o(.text.__user_perthread_libspace) for [Anonymous Symbol]
    clib_arm.o(.text._mutex_initialize) refers to clib_arm.o(.bss.clib_mutex_cb) for clib_mutex_cb
    clib_arm.o(.text._mutex_initialize) refers to clib_arm.o(.bss.clib_mutex_id) for clib_mutex_id
    clib_arm.o(.text._mutex_initialize) refers to queue.o(.text.xQueueCreateMutexStatic) for xQueueCreateMutexStatic
    clib_arm.o(.text._mutex_initialize) refers to tasks_1.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    clib_arm.o(.text._mutex_initialize) refers to queue.o(.text.xQueueCreateMutex) for xQueueCreateMutex
    clib_arm.o(.ARM.exidx.text._mutex_initialize) refers to clib_arm.o(.text._mutex_initialize) for [Anonymous Symbol]
    clib_arm.o(.text._mutex_acquire) refers to tasks_1.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    clib_arm.o(.text._mutex_acquire) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    clib_arm.o(.ARM.exidx.text._mutex_acquire) refers to clib_arm.o(.text._mutex_acquire) for [Anonymous Symbol]
    clib_arm.o(.text._mutex_release) refers to tasks_1.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    clib_arm.o(.text._mutex_release) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    clib_arm.o(.ARM.exidx.text._mutex_release) refers to clib_arm.o(.text._mutex_release) for [Anonymous Symbol]
    clib_arm.o(.text._mutex_free) refers to queue.o(.text.vQueueDelete) for vQueueDelete
    clib_arm.o(.text._mutex_free) refers to clib_arm.o(.bss.clib_mutex_id) for clib_mutex_id
    clib_arm.o(.ARM.exidx.text._mutex_free) refers to clib_arm.o(.text._mutex_free) for [Anonymous Symbol]
    cmsis_os1.o(.text.osThreadCreate) refers to cmsis_os2.o(.text.osThreadNew) for osThreadNew
    cmsis_os1.o(.ARM.exidx.text.osThreadCreate) refers to cmsis_os1.o(.text.osThreadCreate) for [Anonymous Symbol]
    cmsis_os1.o(.text.osSignalSet) refers to cmsis_os2.o(.text.osThreadFlagsSet) for osThreadFlagsSet
    cmsis_os1.o(.ARM.exidx.text.osSignalSet) refers to cmsis_os1.o(.text.osSignalSet) for [Anonymous Symbol]
    cmsis_os1.o(.text.osSignalClear) refers to cmsis_os2.o(.text.osThreadGetId) for osThreadGetId
    cmsis_os1.o(.text.osSignalClear) refers to cmsis_os2.o(.text.osThreadFlagsClear) for osThreadFlagsClear
    cmsis_os1.o(.ARM.exidx.text.osSignalClear) refers to cmsis_os1.o(.text.osSignalClear) for [Anonymous Symbol]
    cmsis_os1.o(.text.osSignalWait) refers to cmsis_os2.o(.text.osThreadFlagsWait) for osThreadFlagsWait
    cmsis_os1.o(.ARM.exidx.text.osSignalWait) refers to cmsis_os1.o(.text.osSignalWait) for [Anonymous Symbol]
    cmsis_os1.o(.text.osTimerCreate) refers to cmsis_os2.o(.text.osTimerNew) for osTimerNew
    cmsis_os1.o(.ARM.exidx.text.osTimerCreate) refers to cmsis_os1.o(.text.osTimerCreate) for [Anonymous Symbol]
    cmsis_os1.o(.text.osMutexCreate) refers to cmsis_os2.o(.text.osMutexNew) for osMutexNew
    cmsis_os1.o(.ARM.exidx.text.osMutexCreate) refers to cmsis_os1.o(.text.osMutexCreate) for [Anonymous Symbol]
    cmsis_os1.o(.text.osSemaphoreCreate) refers to cmsis_os2.o(.text.osSemaphoreNew) for osSemaphoreNew
    cmsis_os1.o(.ARM.exidx.text.osSemaphoreCreate) refers to cmsis_os1.o(.text.osSemaphoreCreate) for [Anonymous Symbol]
    cmsis_os1.o(.text.osSemaphoreWait) refers to cmsis_os2.o(.text.osSemaphoreAcquire) for osSemaphoreAcquire
    cmsis_os1.o(.text.osSemaphoreWait) refers to cmsis_os2.o(.text.osSemaphoreGetCount) for osSemaphoreGetCount
    cmsis_os1.o(.ARM.exidx.text.osSemaphoreWait) refers to cmsis_os1.o(.text.osSemaphoreWait) for [Anonymous Symbol]
    cmsis_os1.o(.text.osMessageCreate) refers to cmsis_os2.o(.text.osMessageQueueNew) for osMessageQueueNew
    cmsis_os1.o(.ARM.exidx.text.osMessageCreate) refers to cmsis_os1.o(.text.osMessageCreate) for [Anonymous Symbol]
    cmsis_os1.o(.text.osMessagePut) refers to cmsis_os2.o(.text.osMessageQueuePut) for osMessageQueuePut
    cmsis_os1.o(.ARM.exidx.text.osMessagePut) refers to cmsis_os1.o(.text.osMessagePut) for [Anonymous Symbol]
    cmsis_os1.o(.text.osMessageGet) refers to cmsis_os2.o(.text.osMessageQueueGet) for osMessageQueueGet
    cmsis_os1.o(.ARM.exidx.text.osMessageGet) refers to cmsis_os1.o(.text.osMessageGet) for [Anonymous Symbol]
    cmsis_os2.o(.text.SysTick_Handler) refers to tasks_1.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.SysTick_Handler) refers to port_1.o(.text.xPortSysTickHandler) for xPortSysTickHandler
    cmsis_os2.o(.ARM.exidx.text.SysTick_Handler) refers to cmsis_os2.o(.text.SysTick_Handler) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelInitialize) refers to tasks_1.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osKernelInitialize) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.ARM.exidx.text.osKernelInitialize) refers to cmsis_os2.o(.text.osKernelInitialize) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelGetInfo) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    cmsis_os2.o(.ARM.exidx.text.osKernelGetInfo) refers to cmsis_os2.o(.text.osKernelGetInfo) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelGetState) refers to tasks_1.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osKernelGetState) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.ARM.exidx.text.osKernelGetState) refers to cmsis_os2.o(.text.osKernelGetState) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelStart) refers to tasks_1.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osKernelStart) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osKernelStart) refers to tasks_1.o(.text.vTaskStartScheduler) for vTaskStartScheduler
    cmsis_os2.o(.ARM.exidx.text.osKernelStart) refers to cmsis_os2.o(.text.osKernelStart) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelLock) refers to tasks_1.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osKernelLock) refers to tasks_1.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    cmsis_os2.o(.ARM.exidx.text.osKernelLock) refers to cmsis_os2.o(.text.osKernelLock) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelUnlock) refers to tasks_1.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osKernelUnlock) refers to tasks_1.o(.text.xTaskResumeAll) for xTaskResumeAll
    cmsis_os2.o(.ARM.exidx.text.osKernelUnlock) refers to cmsis_os2.o(.text.osKernelUnlock) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelRestoreLock) refers to tasks_1.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osKernelRestoreLock) refers to tasks_1.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    cmsis_os2.o(.text.osKernelRestoreLock) refers to tasks_1.o(.text.xTaskResumeAll) for xTaskResumeAll
    cmsis_os2.o(.ARM.exidx.text.osKernelRestoreLock) refers to cmsis_os2.o(.text.osKernelRestoreLock) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelGetTickCount) refers to tasks_1.o(.text.xTaskGetTickCountFromISR) for xTaskGetTickCountFromISR
    cmsis_os2.o(.text.osKernelGetTickCount) refers to tasks_1.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osKernelGetTickCount) refers to tasks_1.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    cmsis_os2.o(.ARM.exidx.text.osKernelGetTickCount) refers to cmsis_os2.o(.text.osKernelGetTickCount) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.osKernelGetTickFreq) refers to cmsis_os2.o(.text.osKernelGetTickFreq) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelGetSysTimerCount) refers to tasks_1.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    cmsis_os2.o(.text.osKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetCount) for OS_Tick_GetCount
    cmsis_os2.o(.text.osKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetOverflow) for OS_Tick_GetOverflow
    cmsis_os2.o(.text.osKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetInterval) for OS_Tick_GetInterval
    cmsis_os2.o(.ARM.exidx.text.osKernelGetSysTimerCount) refers to cmsis_os2.o(.text.osKernelGetSysTimerCount) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelGetSysTimerFreq) refers to system_stm32f10x.o(.data.SystemCoreClock) for SystemCoreClock
    cmsis_os2.o(.ARM.exidx.text.osKernelGetSysTimerFreq) refers to cmsis_os2.o(.text.osKernelGetSysTimerFreq) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadNew) refers to tasks_1.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osThreadNew) refers to tasks_1.o(.text.xTaskCreate) for xTaskCreate
    cmsis_os2.o(.text.osThreadNew) refers to tasks_1.o(.text.xTaskCreateStatic) for xTaskCreateStatic
    cmsis_os2.o(.ARM.exidx.text.osThreadNew) refers to cmsis_os2.o(.text.osThreadNew) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadGetName) refers to tasks_1.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osThreadGetName) refers to tasks_1.o(.text.pcTaskGetName) for pcTaskGetName
    cmsis_os2.o(.ARM.exidx.text.osThreadGetName) refers to cmsis_os2.o(.text.osThreadGetName) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadGetId) refers to tasks_1.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    cmsis_os2.o(.ARM.exidx.text.osThreadGetId) refers to cmsis_os2.o(.text.osThreadGetId) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadGetState) refers to tasks_1.o(.text.eTaskGetState) for eTaskGetState
    cmsis_os2.o(.text.osThreadGetState) refers to tasks_1.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.ARM.exidx.text.osThreadGetState) refers to cmsis_os2.o(.text.osThreadGetState) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadGetStackSpace) refers to tasks_1.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osThreadGetStackSpace) refers to tasks_1.o(.text.uxTaskGetStackHighWaterMark) for uxTaskGetStackHighWaterMark
    cmsis_os2.o(.ARM.exidx.text.osThreadGetStackSpace) refers to cmsis_os2.o(.text.osThreadGetStackSpace) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadSetPriority) refers to tasks_1.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osThreadSetPriority) refers to tasks_1.o(.text.vTaskPrioritySet) for vTaskPrioritySet
    cmsis_os2.o(.ARM.exidx.text.osThreadSetPriority) refers to cmsis_os2.o(.text.osThreadSetPriority) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadGetPriority) refers to tasks_1.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osThreadGetPriority) refers to tasks_1.o(.text.uxTaskPriorityGet) for uxTaskPriorityGet
    cmsis_os2.o(.ARM.exidx.text.osThreadGetPriority) refers to cmsis_os2.o(.text.osThreadGetPriority) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadYield) refers to tasks_1.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.ARM.exidx.text.osThreadYield) refers to cmsis_os2.o(.text.osThreadYield) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadSuspend) refers to tasks_1.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osThreadSuspend) refers to tasks_1.o(.text.vTaskSuspend) for vTaskSuspend
    cmsis_os2.o(.ARM.exidx.text.osThreadSuspend) refers to cmsis_os2.o(.text.osThreadSuspend) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadResume) refers to tasks_1.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osThreadResume) refers to tasks_1.o(.text.vTaskResume) for vTaskResume
    cmsis_os2.o(.ARM.exidx.text.osThreadResume) refers to cmsis_os2.o(.text.osThreadResume) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadExit) refers to tasks_1.o(.text.vTaskDelete) for vTaskDelete
    cmsis_os2.o(.ARM.exidx.text.osThreadExit) refers to cmsis_os2.o(.text.osThreadExit) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadTerminate) refers to tasks_1.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osThreadTerminate) refers to tasks_1.o(.text.eTaskGetState) for eTaskGetState
    cmsis_os2.o(.text.osThreadTerminate) refers to tasks_1.o(.text.vTaskDelete) for vTaskDelete
    cmsis_os2.o(.ARM.exidx.text.osThreadTerminate) refers to cmsis_os2.o(.text.osThreadTerminate) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadGetCount) refers to tasks_1.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osThreadGetCount) refers to tasks_1.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    cmsis_os2.o(.ARM.exidx.text.osThreadGetCount) refers to cmsis_os2.o(.text.osThreadGetCount) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadEnumerate) refers to tasks_1.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osThreadEnumerate) refers to tasks_1.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    cmsis_os2.o(.text.osThreadEnumerate) refers to tasks_1.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    cmsis_os2.o(.text.osThreadEnumerate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    cmsis_os2.o(.text.osThreadEnumerate) refers to tasks_1.o(.text.uxTaskGetSystemState) for uxTaskGetSystemState
    cmsis_os2.o(.text.osThreadEnumerate) refers to tasks_1.o(.text.xTaskResumeAll) for xTaskResumeAll
    cmsis_os2.o(.text.osThreadEnumerate) refers to heap_4.o(.text.vPortFree) for vPortFree
    cmsis_os2.o(.ARM.exidx.text.osThreadEnumerate) refers to cmsis_os2.o(.text.osThreadEnumerate) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadFlagsSet) refers to tasks_1.o(.text.xTaskGenericNotifyFromISR) for xTaskGenericNotifyFromISR
    cmsis_os2.o(.text.osThreadFlagsSet) refers to tasks_1.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osThreadFlagsSet) refers to tasks_1.o(.text.xTaskGenericNotify) for xTaskGenericNotify
    cmsis_os2.o(.ARM.exidx.text.osThreadFlagsSet) refers to cmsis_os2.o(.text.osThreadFlagsSet) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadFlagsClear) refers to tasks_1.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osThreadFlagsClear) refers to tasks_1.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    cmsis_os2.o(.text.osThreadFlagsClear) refers to tasks_1.o(.text.xTaskGenericNotify) for xTaskGenericNotify
    cmsis_os2.o(.ARM.exidx.text.osThreadFlagsClear) refers to cmsis_os2.o(.text.osThreadFlagsClear) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadFlagsGet) refers to tasks_1.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osThreadFlagsGet) refers to tasks_1.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    cmsis_os2.o(.text.osThreadFlagsGet) refers to tasks_1.o(.text.xTaskGenericNotify) for xTaskGenericNotify
    cmsis_os2.o(.ARM.exidx.text.osThreadFlagsGet) refers to cmsis_os2.o(.text.osThreadFlagsGet) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadFlagsWait) refers to tasks_1.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osThreadFlagsWait) refers to tasks_1.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    cmsis_os2.o(.text.osThreadFlagsWait) refers to tasks_1.o(.text.xTaskGenericNotifyWait) for xTaskGenericNotifyWait
    cmsis_os2.o(.ARM.exidx.text.osThreadFlagsWait) refers to cmsis_os2.o(.text.osThreadFlagsWait) for [Anonymous Symbol]
    cmsis_os2.o(.text.osDelay) refers to tasks_1.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osDelay) refers to tasks_1.o(.text.vTaskDelay) for vTaskDelay
    cmsis_os2.o(.ARM.exidx.text.osDelay) refers to cmsis_os2.o(.text.osDelay) for [Anonymous Symbol]
    cmsis_os2.o(.text.osDelayUntil) refers to tasks_1.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osDelayUntil) refers to tasks_1.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    cmsis_os2.o(.text.osDelayUntil) refers to tasks_1.o(.text.xTaskDelayUntil) for xTaskDelayUntil
    cmsis_os2.o(.ARM.exidx.text.osDelayUntil) refers to cmsis_os2.o(.text.osDelayUntil) for [Anonymous Symbol]
    cmsis_os2.o(.text.osTimerNew) refers to tasks_1.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osTimerNew) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    cmsis_os2.o(.text.osTimerNew) refers to cmsis_os2.o(.text.TimerCallback) for TimerCallback
    cmsis_os2.o(.text.osTimerNew) refers to timers.o(.text.xTimerCreateStatic) for xTimerCreateStatic
    cmsis_os2.o(.text.osTimerNew) refers to timers.o(.text.xTimerCreate) for xTimerCreate
    cmsis_os2.o(.text.osTimerNew) refers to heap_4.o(.text.vPortFree) for vPortFree
    cmsis_os2.o(.ARM.exidx.text.osTimerNew) refers to cmsis_os2.o(.text.osTimerNew) for [Anonymous Symbol]
    cmsis_os2.o(.text.TimerCallback) refers to timers.o(.text.pvTimerGetTimerID) for pvTimerGetTimerID
    cmsis_os2.o(.ARM.exidx.text.TimerCallback) refers to cmsis_os2.o(.text.TimerCallback) for [Anonymous Symbol]
    cmsis_os2.o(.text.osTimerGetName) refers to tasks_1.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osTimerGetName) refers to timers.o(.text.pcTimerGetName) for pcTimerGetName
    cmsis_os2.o(.ARM.exidx.text.osTimerGetName) refers to cmsis_os2.o(.text.osTimerGetName) for [Anonymous Symbol]
    cmsis_os2.o(.text.osTimerStart) refers to tasks_1.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osTimerStart) refers to timers.o(.text.xTimerGenericCommand) for xTimerGenericCommand
    cmsis_os2.o(.ARM.exidx.text.osTimerStart) refers to cmsis_os2.o(.text.osTimerStart) for [Anonymous Symbol]
    cmsis_os2.o(.text.osTimerStop) refers to tasks_1.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osTimerStop) refers to timers.o(.text.xTimerIsTimerActive) for xTimerIsTimerActive
    cmsis_os2.o(.text.osTimerStop) refers to timers.o(.text.xTimerGenericCommand) for xTimerGenericCommand
    cmsis_os2.o(.ARM.exidx.text.osTimerStop) refers to cmsis_os2.o(.text.osTimerStop) for [Anonymous Symbol]
    cmsis_os2.o(.text.osTimerIsRunning) refers to tasks_1.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osTimerIsRunning) refers to timers.o(.text.xTimerIsTimerActive) for xTimerIsTimerActive
    cmsis_os2.o(.ARM.exidx.text.osTimerIsRunning) refers to cmsis_os2.o(.text.osTimerIsRunning) for [Anonymous Symbol]
    cmsis_os2.o(.text.osTimerDelete) refers to tasks_1.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osTimerDelete) refers to timers.o(.text.pvTimerGetTimerID) for pvTimerGetTimerID
    cmsis_os2.o(.text.osTimerDelete) refers to timers.o(.text.xTimerGenericCommand) for xTimerGenericCommand
    cmsis_os2.o(.text.osTimerDelete) refers to heap_4.o(.text.vPortFree) for vPortFree
    cmsis_os2.o(.ARM.exidx.text.osTimerDelete) refers to cmsis_os2.o(.text.osTimerDelete) for [Anonymous Symbol]
    cmsis_os2.o(.text.osEventFlagsNew) refers to tasks_1.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osEventFlagsNew) refers to event_groups.o(.text.xEventGroupCreateStatic) for xEventGroupCreateStatic
    cmsis_os2.o(.text.osEventFlagsNew) refers to event_groups.o(.text.xEventGroupCreate) for xEventGroupCreate
    cmsis_os2.o(.ARM.exidx.text.osEventFlagsNew) refers to cmsis_os2.o(.text.osEventFlagsNew) for [Anonymous Symbol]
    cmsis_os2.o(.text.osEventFlagsSet) refers to event_groups.o(.text.xEventGroupSetBitsFromISR) for xEventGroupSetBitsFromISR
    cmsis_os2.o(.text.osEventFlagsSet) refers to event_groups.o(.text.xEventGroupGetBitsFromISR) for xEventGroupGetBitsFromISR
    cmsis_os2.o(.text.osEventFlagsSet) refers to tasks_1.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osEventFlagsSet) refers to event_groups.o(.text.xEventGroupSetBits) for xEventGroupSetBits
    cmsis_os2.o(.ARM.exidx.text.osEventFlagsSet) refers to cmsis_os2.o(.text.osEventFlagsSet) for [Anonymous Symbol]
    cmsis_os2.o(.text.osEventFlagsClear) refers to event_groups.o(.text.xEventGroupGetBitsFromISR) for xEventGroupGetBitsFromISR
    cmsis_os2.o(.text.osEventFlagsClear) refers to event_groups.o(.text.xEventGroupClearBitsFromISR) for xEventGroupClearBitsFromISR
    cmsis_os2.o(.text.osEventFlagsClear) refers to tasks_1.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osEventFlagsClear) refers to event_groups.o(.text.xEventGroupClearBits) for xEventGroupClearBits
    cmsis_os2.o(.ARM.exidx.text.osEventFlagsClear) refers to cmsis_os2.o(.text.osEventFlagsClear) for [Anonymous Symbol]
    cmsis_os2.o(.text.osEventFlagsGet) refers to event_groups.o(.text.xEventGroupGetBitsFromISR) for xEventGroupGetBitsFromISR
    cmsis_os2.o(.text.osEventFlagsGet) refers to tasks_1.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osEventFlagsGet) refers to event_groups.o(.text.xEventGroupClearBits) for xEventGroupClearBits
    cmsis_os2.o(.ARM.exidx.text.osEventFlagsGet) refers to cmsis_os2.o(.text.osEventFlagsGet) for [Anonymous Symbol]
    cmsis_os2.o(.text.osEventFlagsWait) refers to tasks_1.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osEventFlagsWait) refers to event_groups.o(.text.xEventGroupWaitBits) for xEventGroupWaitBits
    cmsis_os2.o(.ARM.exidx.text.osEventFlagsWait) refers to cmsis_os2.o(.text.osEventFlagsWait) for [Anonymous Symbol]
    cmsis_os2.o(.text.osEventFlagsDelete) refers to tasks_1.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osEventFlagsDelete) refers to event_groups.o(.text.vEventGroupDelete) for vEventGroupDelete
    cmsis_os2.o(.ARM.exidx.text.osEventFlagsDelete) refers to cmsis_os2.o(.text.osEventFlagsDelete) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMutexNew) refers to tasks_1.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osMutexNew) refers to queue.o(.text.xQueueCreateMutexStatic) for xQueueCreateMutexStatic
    cmsis_os2.o(.text.osMutexNew) refers to queue.o(.text.xQueueCreateMutex) for xQueueCreateMutex
    cmsis_os2.o(.ARM.exidx.text.osMutexNew) refers to cmsis_os2.o(.text.osMutexNew) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMutexAcquire) refers to tasks_1.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osMutexAcquire) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    cmsis_os2.o(.text.osMutexAcquire) refers to queue.o(.text.xQueueTakeMutexRecursive) for xQueueTakeMutexRecursive
    cmsis_os2.o(.ARM.exidx.text.osMutexAcquire) refers to cmsis_os2.o(.text.osMutexAcquire) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMutexRelease) refers to tasks_1.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osMutexRelease) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    cmsis_os2.o(.text.osMutexRelease) refers to queue.o(.text.xQueueGiveMutexRecursive) for xQueueGiveMutexRecursive
    cmsis_os2.o(.ARM.exidx.text.osMutexRelease) refers to cmsis_os2.o(.text.osMutexRelease) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMutexGetOwner) refers to tasks_1.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osMutexGetOwner) refers to queue.o(.text.xQueueGetMutexHolder) for xQueueGetMutexHolder
    cmsis_os2.o(.ARM.exidx.text.osMutexGetOwner) refers to cmsis_os2.o(.text.osMutexGetOwner) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMutexDelete) refers to tasks_1.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osMutexDelete) refers to queue.o(.text.vQueueDelete) for vQueueDelete
    cmsis_os2.o(.ARM.exidx.text.osMutexDelete) refers to cmsis_os2.o(.text.osMutexDelete) for [Anonymous Symbol]
    cmsis_os2.o(.text.osSemaphoreNew) refers to tasks_1.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osSemaphoreNew) refers to queue.o(.text.xQueueGenericCreateStatic) for xQueueGenericCreateStatic
    cmsis_os2.o(.text.osSemaphoreNew) refers to queue.o(.text.xQueueCreateCountingSemaphoreStatic) for xQueueCreateCountingSemaphoreStatic
    cmsis_os2.o(.text.osSemaphoreNew) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    cmsis_os2.o(.text.osSemaphoreNew) refers to queue.o(.text.xQueueCreateCountingSemaphore) for xQueueCreateCountingSemaphore
    cmsis_os2.o(.text.osSemaphoreNew) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    cmsis_os2.o(.text.osSemaphoreNew) refers to queue.o(.text.vQueueDelete) for vQueueDelete
    cmsis_os2.o(.ARM.exidx.text.osSemaphoreNew) refers to cmsis_os2.o(.text.osSemaphoreNew) for [Anonymous Symbol]
    cmsis_os2.o(.text.osSemaphoreAcquire) refers to tasks_1.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osSemaphoreAcquire) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    cmsis_os2.o(.text.osSemaphoreAcquire) refers to queue.o(.text.xQueueReceiveFromISR) for xQueueReceiveFromISR
    cmsis_os2.o(.ARM.exidx.text.osSemaphoreAcquire) refers to cmsis_os2.o(.text.osSemaphoreAcquire) for [Anonymous Symbol]
    cmsis_os2.o(.text.osSemaphoreRelease) refers to queue.o(.text.xQueueGiveFromISR) for xQueueGiveFromISR
    cmsis_os2.o(.text.osSemaphoreRelease) refers to tasks_1.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osSemaphoreRelease) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    cmsis_os2.o(.ARM.exidx.text.osSemaphoreRelease) refers to cmsis_os2.o(.text.osSemaphoreRelease) for [Anonymous Symbol]
    cmsis_os2.o(.text.osSemaphoreGetCount) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for uxQueueMessagesWaitingFromISR
    cmsis_os2.o(.text.osSemaphoreGetCount) refers to tasks_1.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osSemaphoreGetCount) refers to queue.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    cmsis_os2.o(.ARM.exidx.text.osSemaphoreGetCount) refers to cmsis_os2.o(.text.osSemaphoreGetCount) for [Anonymous Symbol]
    cmsis_os2.o(.text.osSemaphoreDelete) refers to tasks_1.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osSemaphoreDelete) refers to queue.o(.text.vQueueDelete) for vQueueDelete
    cmsis_os2.o(.ARM.exidx.text.osSemaphoreDelete) refers to cmsis_os2.o(.text.osSemaphoreDelete) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueueNew) refers to tasks_1.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osMessageQueueNew) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    cmsis_os2.o(.text.osMessageQueueNew) refers to queue.o(.text.xQueueGenericCreateStatic) for xQueueGenericCreateStatic
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueNew) refers to cmsis_os2.o(.text.osMessageQueueNew) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueuePut) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    cmsis_os2.o(.text.osMessageQueuePut) refers to tasks_1.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osMessageQueuePut) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    cmsis_os2.o(.ARM.exidx.text.osMessageQueuePut) refers to cmsis_os2.o(.text.osMessageQueuePut) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueueGet) refers to tasks_1.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osMessageQueueGet) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    cmsis_os2.o(.text.osMessageQueueGet) refers to queue.o(.text.xQueueReceiveFromISR) for xQueueReceiveFromISR
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueGet) refers to cmsis_os2.o(.text.osMessageQueueGet) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetCapacity) refers to cmsis_os2.o(.text.osMessageQueueGetCapacity) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetMsgSize) refers to cmsis_os2.o(.text.osMessageQueueGetMsgSize) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueueGetCount) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for uxQueueMessagesWaitingFromISR
    cmsis_os2.o(.text.osMessageQueueGetCount) refers to tasks_1.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osMessageQueueGetCount) refers to queue.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetCount) refers to cmsis_os2.o(.text.osMessageQueueGetCount) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueueGetSpace) refers to tasks_1.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osMessageQueueGetSpace) refers to queue.o(.text.uxQueueSpacesAvailable) for uxQueueSpacesAvailable
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetSpace) refers to cmsis_os2.o(.text.osMessageQueueGetSpace) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueueReset) refers to tasks_1.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osMessageQueueReset) refers to queue.o(.text.xQueueGenericReset) for xQueueGenericReset
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueReset) refers to cmsis_os2.o(.text.osMessageQueueReset) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueueDelete) refers to tasks_1.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osMessageQueueDelete) refers to queue.o(.text.vQueueDelete) for vQueueDelete
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueDelete) refers to cmsis_os2.o(.text.osMessageQueueDelete) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMemoryPoolNew) refers to tasks_1.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osMemoryPoolNew) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    cmsis_os2.o(.text.osMemoryPoolNew) refers to queue.o(.text.xQueueCreateCountingSemaphoreStatic) for xQueueCreateCountingSemaphoreStatic
    cmsis_os2.o(.text.osMemoryPoolNew) refers to heap_4.o(.text.vPortFree) for vPortFree
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolNew) refers to cmsis_os2.o(.text.osMemoryPoolNew) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMemoryPoolGetName) refers to tasks_1.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetName) refers to cmsis_os2.o(.text.osMemoryPoolGetName) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMemoryPoolAlloc) refers to tasks_1.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osMemoryPoolAlloc) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    cmsis_os2.o(.text.osMemoryPoolAlloc) refers to port_1.o(.text.vPortEnterCritical) for vPortEnterCritical
    cmsis_os2.o(.text.osMemoryPoolAlloc) refers to queue.o(.text.xQueueReceiveFromISR) for xQueueReceiveFromISR
    cmsis_os2.o(.text.osMemoryPoolAlloc) refers to port_1.o(.text.vPortExitCritical) for vPortExitCritical
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolAlloc) refers to cmsis_os2.o(.text.osMemoryPoolAlloc) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMemoryPoolFree) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for uxQueueMessagesWaitingFromISR
    cmsis_os2.o(.text.osMemoryPoolFree) refers to queue.o(.text.xQueueGiveFromISR) for xQueueGiveFromISR
    cmsis_os2.o(.text.osMemoryPoolFree) refers to tasks_1.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osMemoryPoolFree) refers to queue.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    cmsis_os2.o(.text.osMemoryPoolFree) refers to port_1.o(.text.vPortEnterCritical) for vPortEnterCritical
    cmsis_os2.o(.text.osMemoryPoolFree) refers to port_1.o(.text.vPortExitCritical) for vPortExitCritical
    cmsis_os2.o(.text.osMemoryPoolFree) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolFree) refers to cmsis_os2.o(.text.osMemoryPoolFree) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetCapacity) refers to cmsis_os2.o(.text.osMemoryPoolGetCapacity) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetBlockSize) refers to cmsis_os2.o(.text.osMemoryPoolGetBlockSize) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMemoryPoolGetCount) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for uxQueueMessagesWaitingFromISR
    cmsis_os2.o(.text.osMemoryPoolGetCount) refers to tasks_1.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osMemoryPoolGetCount) refers to queue.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetCount) refers to cmsis_os2.o(.text.osMemoryPoolGetCount) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMemoryPoolGetSpace) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for uxQueueMessagesWaitingFromISR
    cmsis_os2.o(.text.osMemoryPoolGetSpace) refers to tasks_1.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osMemoryPoolGetSpace) refers to queue.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetSpace) refers to cmsis_os2.o(.text.osMemoryPoolGetSpace) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMemoryPoolDelete) refers to tasks_1.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osMemoryPoolDelete) refers to port_1.o(.text.vPortEnterCritical) for vPortEnterCritical
    cmsis_os2.o(.text.osMemoryPoolDelete) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    cmsis_os2.o(.text.osMemoryPoolDelete) refers to heap_4.o(.text.vPortFree) for vPortFree
    cmsis_os2.o(.text.osMemoryPoolDelete) refers to port_1.o(.text.vPortExitCritical) for vPortExitCritical
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolDelete) refers to cmsis_os2.o(.text.osMemoryPoolDelete) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.vApplicationStackOverflowHook) refers to cmsis_os2.o(.text.vApplicationStackOverflowHook) for [Anonymous Symbol]
    cmsis_os2.o(.text.vApplicationGetIdleTaskMemory) refers to cmsis_os2.o(.bss.vApplicationGetIdleTaskMemory.Idle_TCB) for vApplicationGetIdleTaskMemory.Idle_TCB
    cmsis_os2.o(.text.vApplicationGetIdleTaskMemory) refers to cmsis_os2.o(.bss.vApplicationGetIdleTaskMemory.Idle_Stack) for vApplicationGetIdleTaskMemory.Idle_Stack
    cmsis_os2.o(.ARM.exidx.text.vApplicationGetIdleTaskMemory) refers to cmsis_os2.o(.text.vApplicationGetIdleTaskMemory) for [Anonymous Symbol]
    cmsis_os2.o(.text.vApplicationGetTimerTaskMemory) refers to cmsis_os2.o(.bss.vApplicationGetTimerTaskMemory.Timer_TCB) for vApplicationGetTimerTaskMemory.Timer_TCB
    cmsis_os2.o(.text.vApplicationGetTimerTaskMemory) refers to cmsis_os2.o(.bss.vApplicationGetTimerTaskMemory.Timer_Stack) for vApplicationGetTimerTaskMemory.Timer_Stack
    cmsis_os2.o(.ARM.exidx.text.vApplicationGetTimerTaskMemory) refers to cmsis_os2.o(.text.vApplicationGetTimerTaskMemory) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Setup) refers to system_stm32f10x.o(.data.SystemCoreClock) for SystemCoreClock
    os_systick.o(.text.OS_Tick_Setup) refers to os_systick.o(.bss.PendST) for PendST
    os_systick.o(.ARM.exidx.text.OS_Tick_Setup) refers to os_systick.o(.text.OS_Tick_Setup) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Enable) refers to os_systick.o(.bss.PendST) for PendST
    os_systick.o(.ARM.exidx.text.OS_Tick_Enable) refers to os_systick.o(.text.OS_Tick_Enable) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Disable) refers to os_systick.o(.bss.PendST) for PendST
    os_systick.o(.ARM.exidx.text.OS_Tick_Disable) refers to os_systick.o(.text.OS_Tick_Disable) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ) refers to os_systick.o(.text.OS_Tick_AcknowledgeIRQ) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn) refers to os_systick.o(.text.OS_Tick_GetIRQn) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_GetClock) refers to system_stm32f10x.o(.data.SystemCoreClock) for SystemCoreClock
    os_systick.o(.ARM.exidx.text.OS_Tick_GetClock) refers to os_systick.o(.text.OS_Tick_GetClock) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval) refers to os_systick.o(.text.OS_Tick_GetInterval) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetCount) refers to os_systick.o(.text.OS_Tick_GetCount) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow) refers to os_systick.o(.text.OS_Tick_GetOverflow) for [Anonymous Symbol]
    startup_stm32f10x_md.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f10x_md.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f10x_md.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f10x_md.o(RESET) refers to startup_stm32f10x_md.o(STACK) for __initial_sp
    startup_stm32f10x_md.o(RESET) refers to startup_stm32f10x_md.o(.text) for Reset_Handler
    startup_stm32f10x_md.o(RESET) refers to port_1.o(.text.SVC_Handler) for SVC_Handler
    startup_stm32f10x_md.o(RESET) refers to port_1.o(.text.PendSV_Handler) for PendSV_Handler
    startup_stm32f10x_md.o(RESET) refers to cmsis_os2.o(.text.SysTick_Handler) for SysTick_Handler
    startup_stm32f10x_md.o(RESET) refers to timer.o(.text.TIM3_IRQHandler) for TIM3_IRQHandler
    startup_stm32f10x_md.o(RESET) refers to usart.o(.text.USART2_IRQHandler) for USART2_IRQHandler
    startup_stm32f10x_md.o(RESET) refers to timer.o(.text.EXTI15_10_IRQHandler) for EXTI15_10_IRQHandler
    startup_stm32f10x_md.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f10x_md.o(.text) refers to system_stm32f10x.o(.text.SystemInit) for SystemInit
    startup_stm32f10x_md.o(.text) refers to __main.o(!!!main) for __main
    startup_stm32f10x_md.o(.text) refers to startup_stm32f10x_md.o(HEAP) for Heap_Mem
    startup_stm32f10x_md.o(.text) refers to startup_stm32f10x_md.o(STACK) for Stack_Mem
    system_stm32f10x.o(.ARM.exidx.text.SystemInit) refers to system_stm32f10x.o(.text.SystemInit) for [Anonymous Symbol]
    system_stm32f10x.o(.text.SystemCoreClockUpdate) refers to system_stm32f10x.o(.data.SystemCoreClock) for SystemCoreClock
    system_stm32f10x.o(.text.SystemCoreClockUpdate) refers to system_stm32f10x.o(.rodata.AHBPrescTable) for AHBPrescTable
    system_stm32f10x.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_stm32f10x.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupCreateStatic) refers to list.o(.text.vListInitialise) for vListInitialise
    event_groups.o(.ARM.exidx.text.xEventGroupCreateStatic) refers to event_groups.o(.text.xEventGroupCreateStatic) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    event_groups.o(.text.xEventGroupCreate) refers to list.o(.text.vListInitialise) for vListInitialise
    event_groups.o(.ARM.exidx.text.xEventGroupCreate) refers to event_groups.o(.text.xEventGroupCreate) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupSync) refers to tasks_1.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.xEventGroupSync) refers to tasks_1.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.text.xEventGroupSync) refers to tasks_1.o(.text.vTaskRemoveFromUnorderedEventList) for vTaskRemoveFromUnorderedEventList
    event_groups.o(.text.xEventGroupSync) refers to tasks_1.o(.text.vTaskPlaceOnUnorderedEventList) for vTaskPlaceOnUnorderedEventList
    event_groups.o(.text.xEventGroupSync) refers to tasks_1.o(.text.uxTaskResetEventItemValue) for uxTaskResetEventItemValue
    event_groups.o(.text.xEventGroupSync) refers to port_1.o(.text.vPortEnterCritical) for vPortEnterCritical
    event_groups.o(.text.xEventGroupSync) refers to port_1.o(.text.vPortExitCritical) for vPortExitCritical
    event_groups.o(.ARM.exidx.text.xEventGroupSync) refers to event_groups.o(.text.xEventGroupSync) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupSetBits) refers to tasks_1.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.xEventGroupSetBits) refers to tasks_1.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.text.xEventGroupSetBits) refers to tasks_1.o(.text.vTaskRemoveFromUnorderedEventList) for vTaskRemoveFromUnorderedEventList
    event_groups.o(.ARM.exidx.text.xEventGroupSetBits) refers to event_groups.o(.text.xEventGroupSetBits) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks_1.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks_1.o(.text.vTaskPlaceOnUnorderedEventList) for vTaskPlaceOnUnorderedEventList
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks_1.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks_1.o(.text.uxTaskResetEventItemValue) for uxTaskResetEventItemValue
    event_groups.o(.text.xEventGroupWaitBits) refers to port_1.o(.text.vPortEnterCritical) for vPortEnterCritical
    event_groups.o(.text.xEventGroupWaitBits) refers to port_1.o(.text.vPortExitCritical) for vPortExitCritical
    event_groups.o(.ARM.exidx.text.xEventGroupWaitBits) refers to event_groups.o(.text.xEventGroupWaitBits) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupClearBits) refers to port_1.o(.text.vPortEnterCritical) for vPortEnterCritical
    event_groups.o(.text.xEventGroupClearBits) refers to port_1.o(.text.vPortExitCritical) for vPortExitCritical
    event_groups.o(.ARM.exidx.text.xEventGroupClearBits) refers to event_groups.o(.text.xEventGroupClearBits) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupClearBitsFromISR) refers to event_groups.o(.text.vEventGroupClearBitsCallback) for vEventGroupClearBitsCallback
    event_groups.o(.text.xEventGroupClearBitsFromISR) refers to timers.o(.text.xTimerPendFunctionCallFromISR) for xTimerPendFunctionCallFromISR
    event_groups.o(.ARM.exidx.text.xEventGroupClearBitsFromISR) refers to event_groups.o(.text.xEventGroupClearBitsFromISR) for [Anonymous Symbol]
    event_groups.o(.text.vEventGroupClearBitsCallback) refers to port_1.o(.text.vPortEnterCritical) for vPortEnterCritical
    event_groups.o(.text.vEventGroupClearBitsCallback) refers to port_1.o(.text.vPortExitCritical) for vPortExitCritical
    event_groups.o(.ARM.exidx.text.vEventGroupClearBitsCallback) refers to event_groups.o(.text.vEventGroupClearBitsCallback) for [Anonymous Symbol]
    event_groups.o(.ARM.exidx.text.xEventGroupGetBitsFromISR) refers to event_groups.o(.text.xEventGroupGetBitsFromISR) for [Anonymous Symbol]
    event_groups.o(.text.vEventGroupDelete) refers to tasks_1.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.vEventGroupDelete) refers to tasks_1.o(.text.vTaskRemoveFromUnorderedEventList) for vTaskRemoveFromUnorderedEventList
    event_groups.o(.text.vEventGroupDelete) refers to tasks_1.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.text.vEventGroupDelete) refers to heap_4.o(.text.vPortFree) for vPortFree
    event_groups.o(.ARM.exidx.text.vEventGroupDelete) refers to event_groups.o(.text.vEventGroupDelete) for [Anonymous Symbol]
    event_groups.o(.text.vEventGroupSetBitsCallback) refers to tasks_1.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.vEventGroupSetBitsCallback) refers to tasks_1.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.text.vEventGroupSetBitsCallback) refers to tasks_1.o(.text.vTaskRemoveFromUnorderedEventList) for vTaskRemoveFromUnorderedEventList
    event_groups.o(.ARM.exidx.text.vEventGroupSetBitsCallback) refers to event_groups.o(.text.vEventGroupSetBitsCallback) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupSetBitsFromISR) refers to event_groups.o(.text.vEventGroupSetBitsCallback) for vEventGroupSetBitsCallback
    event_groups.o(.text.xEventGroupSetBitsFromISR) refers to timers.o(.text.xTimerPendFunctionCallFromISR) for xTimerPendFunctionCallFromISR
    event_groups.o(.ARM.exidx.text.xEventGroupSetBitsFromISR) refers to event_groups.o(.text.xEventGroupSetBitsFromISR) for [Anonymous Symbol]
    event_groups.o(.ARM.exidx.text.uxEventGroupGetNumber) refers to event_groups.o(.text.uxEventGroupGetNumber) for [Anonymous Symbol]
    event_groups.o(.ARM.exidx.text.vEventGroupSetNumber) refers to event_groups.o(.text.vEventGroupSetNumber) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialise) refers to list.o(.text.vListInitialise) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialiseItem) refers to list.o(.text.vListInitialiseItem) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsertEnd) refers to list.o(.text.vListInsertEnd) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsert) refers to list.o(.text.vListInsert) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.uxListRemove) refers to list.o(.text.uxListRemove) for [Anonymous Symbol]
    port_1.o(.text.pxPortInitialiseStack) refers to port_1.o(.text.prvTaskExitError) for prvTaskExitError
    port_1.o(.ARM.exidx.text.pxPortInitialiseStack) refers to port_1.o(.text.pxPortInitialiseStack) for [Anonymous Symbol]
    port_1.o(.ARM.exidx.text.prvTaskExitError) refers to port_1.o(.text.prvTaskExitError) for [Anonymous Symbol]
    port_1.o(.text.SVC_Handler) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port_1.o(.ARM.exidx.text.SVC_Handler) refers to port_1.o(.text.SVC_Handler) for [Anonymous Symbol]
    port_1.o(.text.xPortStartScheduler) refers to port_1.o(.text.vPortSetupTimerInterrupt) for vPortSetupTimerInterrupt
    port_1.o(.text.xPortStartScheduler) refers to port_1.o(.data.uxCriticalNesting) for uxCriticalNesting
    port_1.o(.text.xPortStartScheduler) refers to port_1.o(.text.prvPortStartFirstTask) for prvPortStartFirstTask
    port_1.o(.text.xPortStartScheduler) refers to tasks_1.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port_1.o(.ARM.exidx.text.xPortStartScheduler) refers to port_1.o(.text.xPortStartScheduler) for [Anonymous Symbol]
    port_1.o(.text.vPortSetupTimerInterrupt) refers to system_stm32f10x.o(.data.SystemCoreClock) for SystemCoreClock
    port_1.o(.ARM.exidx.text.vPortSetupTimerInterrupt) refers to port_1.o(.text.vPortSetupTimerInterrupt) for [Anonymous Symbol]
    port_1.o(.ARM.exidx.text.prvPortStartFirstTask) refers to port_1.o(.text.prvPortStartFirstTask) for [Anonymous Symbol]
    port_1.o(.ARM.exidx.text.vPortEndScheduler) refers to port_1.o(.text.vPortEndScheduler) for [Anonymous Symbol]
    port_1.o(.text.vPortEnterCritical) refers to port_1.o(.data.uxCriticalNesting) for uxCriticalNesting
    port_1.o(.ARM.exidx.text.vPortEnterCritical) refers to port_1.o(.text.vPortEnterCritical) for [Anonymous Symbol]
    port_1.o(.text.vPortExitCritical) refers to port_1.o(.data.uxCriticalNesting) for uxCriticalNesting
    port_1.o(.ARM.exidx.text.vPortExitCritical) refers to port_1.o(.text.vPortExitCritical) for [Anonymous Symbol]
    port_1.o(.text.PendSV_Handler) refers to tasks_1.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port_1.o(.text.PendSV_Handler) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port_1.o(.ARM.exidx.text.PendSV_Handler) refers to port_1.o(.text.PendSV_Handler) for [Anonymous Symbol]
    port_1.o(.text.xPortSysTickHandler) refers to tasks_1.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    port_1.o(.ARM.exidx.text.xPortSysTickHandler) refers to port_1.o(.text.xPortSysTickHandler) for [Anonymous Symbol]
    heap_4.o(.text.pvPortMalloc) refers to tasks_1.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.ucHeap) for ucHeap
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xNumberOfSuccessfulAllocations) for xNumberOfSuccessfulAllocations
    heap_4.o(.text.pvPortMalloc) refers to tasks_1.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(.ARM.exidx.text.pvPortMalloc) refers to heap_4.o(.text.pvPortMalloc) for [Anonymous Symbol]
    heap_4.o(.text.vPortFree) refers to tasks_1.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(.text.vPortFree) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.text.vPortFree) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.vPortFree) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.text.vPortFree) refers to heap_4.o(.bss.xNumberOfSuccessfulFrees) for xNumberOfSuccessfulFrees
    heap_4.o(.text.vPortFree) refers to tasks_1.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(.ARM.exidx.text.vPortFree) refers to heap_4.o(.text.vPortFree) for [Anonymous Symbol]
    heap_4.o(.text.xPortGetFreeHeapSize) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.ARM.exidx.text.xPortGetFreeHeapSize) refers to heap_4.o(.text.xPortGetFreeHeapSize) for [Anonymous Symbol]
    heap_4.o(.text.xPortGetMinimumEverFreeHeapSize) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.ARM.exidx.text.xPortGetMinimumEverFreeHeapSize) refers to heap_4.o(.text.xPortGetMinimumEverFreeHeapSize) for [Anonymous Symbol]
    heap_4.o(.ARM.exidx.text.vPortInitialiseBlocks) refers to heap_4.o(.text.vPortInitialiseBlocks) for [Anonymous Symbol]
    heap_4.o(.text.pvPortCalloc) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    heap_4.o(.text.pvPortCalloc) refers to rt_memclr.o(.text) for __aeabi_memclr
    heap_4.o(.ARM.exidx.text.pvPortCalloc) refers to heap_4.o(.text.pvPortCalloc) for [Anonymous Symbol]
    heap_4.o(.text.vPortGetHeapStats) refers to tasks_1.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.text.vPortGetHeapStats) refers to tasks_1.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(.text.vPortGetHeapStats) refers to port_1.o(.text.vPortEnterCritical) for vPortEnterCritical
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xNumberOfSuccessfulAllocations) for xNumberOfSuccessfulAllocations
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xNumberOfSuccessfulFrees) for xNumberOfSuccessfulFrees
    heap_4.o(.text.vPortGetHeapStats) refers to port_1.o(.text.vPortExitCritical) for vPortExitCritical
    heap_4.o(.ARM.exidx.text.vPortGetHeapStats) refers to heap_4.o(.text.vPortGetHeapStats) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericReset) refers to port_1.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericReset) refers to list.o(.text.vListInitialise) for vListInitialise
    queue.o(.text.xQueueGenericReset) refers to tasks_1.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericReset) refers to port_1.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueGenericReset) refers to queue.o(.text.xQueueGenericReset) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericCreateStatic) refers to port_1.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericCreateStatic) refers to list.o(.text.vListInitialise) for vListInitialise
    queue.o(.text.xQueueGenericCreateStatic) refers to port_1.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueGenericCreateStatic) refers to queue.o(.text.xQueueGenericCreateStatic) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    queue.o(.text.xQueueGenericCreate) refers to port_1.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericCreate) refers to list.o(.text.vListInitialise) for vListInitialise
    queue.o(.text.xQueueGenericCreate) refers to port_1.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueGenericCreate) refers to queue.o(.text.xQueueGenericCreate) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateMutex) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.text.xQueueCreateMutex) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.xQueueCreateMutex) refers to queue.o(.text.xQueueCreateMutex) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateMutexStatic) refers to port_1.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueCreateMutexStatic) refers to list.o(.text.vListInitialise) for vListInitialise
    queue.o(.text.xQueueCreateMutexStatic) refers to port_1.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueCreateMutexStatic) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.xQueueCreateMutexStatic) refers to queue.o(.text.xQueueCreateMutexStatic) for [Anonymous Symbol]
    queue.o(.text.xQueueGetMutexHolder) refers to port_1.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGetMutexHolder) refers to port_1.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueGetMutexHolder) refers to queue.o(.text.xQueueGetMutexHolder) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueGetMutexHolderFromISR) refers to queue.o(.text.xQueueGetMutexHolderFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveMutexRecursive) refers to tasks_1.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(.text.xQueueGiveMutexRecursive) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.xQueueGiveMutexRecursive) refers to queue.o(.text.xQueueGiveMutexRecursive) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSend) refers to port_1.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericSend) refers to tasks_1.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueGenericSend) refers to port_1.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueGenericSend) refers to tasks_1.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueGenericSend) refers to tasks_1.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueGenericSend) refers to tasks_1.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueGenericSend) refers to tasks_1.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueGenericSend) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(.text.xQueueGenericSend) refers to tasks_1.o(.text.xTaskPriorityDisinherit) for xTaskPriorityDisinherit
    queue.o(.text.xQueueGenericSend) refers to tasks_1.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueGenericSend) refers to queue.o(.text.xQueueGenericSend) for [Anonymous Symbol]
    queue.o(.text.xQueueTakeMutexRecursive) refers to tasks_1.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(.text.xQueueTakeMutexRecursive) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    queue.o(.ARM.exidx.text.xQueueTakeMutexRecursive) refers to queue.o(.text.xQueueTakeMutexRecursive) for [Anonymous Symbol]
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueSemaphoreTake) refers to tasks_1.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueSemaphoreTake) refers to port_1.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueSemaphoreTake) refers to port_1.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueSemaphoreTake) refers to tasks_1.o(.text.pvTaskIncrementMutexHeldCount) for pvTaskIncrementMutexHeldCount
    queue.o(.text.xQueueSemaphoreTake) refers to tasks_1.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueSemaphoreTake) refers to tasks_1.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueSemaphoreTake) refers to tasks_1.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueSemaphoreTake) refers to tasks_1.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueSemaphoreTake) refers to tasks_1.o(.text.xTaskPriorityInherit) for xTaskPriorityInherit
    queue.o(.text.xQueueSemaphoreTake) refers to tasks_1.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueSemaphoreTake) refers to tasks_1.o(.text.vTaskPriorityDisinheritAfterTimeout) for vTaskPriorityDisinheritAfterTimeout
    queue.o(.ARM.exidx.text.xQueueSemaphoreTake) refers to queue.o(.text.xQueueSemaphoreTake) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateCountingSemaphoreStatic) refers to port_1.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueCreateCountingSemaphoreStatic) refers to list.o(.text.vListInitialise) for vListInitialise
    queue.o(.text.xQueueCreateCountingSemaphoreStatic) refers to port_1.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphoreStatic) refers to queue.o(.text.xQueueCreateCountingSemaphoreStatic) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueCreateCountingSemaphore) for [Anonymous Symbol]
    queue.o(.text.prvUnlockQueue) refers to port_1.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvUnlockQueue) refers to tasks_1.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.prvUnlockQueue) refers to tasks_1.o(.text.vTaskMissedYield) for vTaskMissedYield
    queue.o(.text.prvUnlockQueue) refers to port_1.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvUnlockQueue) refers to queue.o(.text.prvUnlockQueue) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSendFromISR) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(.text.xQueueGenericSendFromISR) refers to tasks_1.o(.text.xTaskPriorityDisinherit) for xTaskPriorityDisinherit
    queue.o(.text.xQueueGenericSendFromISR) refers to tasks_1.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.text.xQueueGenericSendFromISR) refers to tasks_1.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueGenericSendFromISR) refers to queue.o(.text.xQueueGenericSendFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveFromISR) refers to tasks_1.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.text.xQueueGiveFromISR) refers to tasks_1.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueGiveFromISR) refers to queue.o(.text.xQueueGiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueReceive) refers to tasks_1.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueReceive) refers to port_1.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueReceive) refers to port_1.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueReceive) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(.text.xQueueReceive) refers to tasks_1.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueReceive) refers to tasks_1.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueReceive) refers to tasks_1.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueReceive) refers to tasks_1.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueReceive) refers to tasks_1.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.ARM.exidx.text.xQueueReceive) refers to queue.o(.text.xQueueReceive) for [Anonymous Symbol]
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueuePeek) refers to tasks_1.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueuePeek) refers to port_1.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueuePeek) refers to port_1.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueuePeek) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(.text.xQueuePeek) refers to tasks_1.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueuePeek) refers to tasks_1.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueuePeek) refers to tasks_1.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueuePeek) refers to tasks_1.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueuePeek) refers to tasks_1.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.ARM.exidx.text.xQueuePeek) refers to queue.o(.text.xQueuePeek) for [Anonymous Symbol]
    queue.o(.text.xQueueReceiveFromISR) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(.text.xQueueReceiveFromISR) refers to tasks_1.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.text.xQueueReceiveFromISR) refers to tasks_1.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueReceiveFromISR) refers to queue.o(.text.xQueueReceiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueuePeekFromISR) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(.ARM.exidx.text.xQueuePeekFromISR) refers to queue.o(.text.xQueuePeekFromISR) for [Anonymous Symbol]
    queue.o(.text.uxQueueMessagesWaiting) refers to port_1.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueMessagesWaiting) refers to port_1.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueMessagesWaiting) refers to queue.o(.text.uxQueueMessagesWaiting) for [Anonymous Symbol]
    queue.o(.text.uxQueueSpacesAvailable) refers to port_1.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueSpacesAvailable) refers to port_1.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueSpacesAvailable) refers to queue.o(.text.uxQueueSpacesAvailable) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for [Anonymous Symbol]
    queue.o(.text.vQueueDelete) refers to heap_4.o(.text.vPortFree) for vPortFree
    queue.o(.ARM.exidx.text.vQueueDelete) refers to queue.o(.text.vQueueDelete) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueGetQueueNumber) refers to queue.o(.text.uxQueueGetQueueNumber) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.vQueueSetQueueNumber) refers to queue.o(.text.vQueueSetQueueNumber) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.ucQueueGetQueueType) refers to queue.o(.text.ucQueueGetQueueType) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR) refers to queue.o(.text.xQueueIsQueueEmptyFromISR) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR) refers to queue.o(.text.xQueueIsQueueFullFromISR) for [Anonymous Symbol]
    queue.o(.text.vQueueWaitForMessageRestricted) refers to port_1.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.vQueueWaitForMessageRestricted) refers to port_1.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.vQueueWaitForMessageRestricted) refers to tasks_1.o(.text.vTaskPlaceOnEventListRestricted) for vTaskPlaceOnEventListRestricted
    queue.o(.text.vQueueWaitForMessageRestricted) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.ARM.exidx.text.vQueueWaitForMessageRestricted) refers to queue.o(.text.vQueueWaitForMessageRestricted) for [Anonymous Symbol]
    tasks_1.o(.text.xTaskCreateStatic) refers to rt_memclr.o(.text) for __aeabi_memclr
    tasks_1.o(.text.xTaskCreateStatic) refers to aeabi_memset4.o(.text) for __aeabi_memset4
    tasks_1.o(.text.xTaskCreateStatic) refers to list.o(.text.vListInitialiseItem) for vListInitialiseItem
    tasks_1.o(.text.xTaskCreateStatic) refers to port_1.o(.text.pxPortInitialiseStack) for pxPortInitialiseStack
    tasks_1.o(.text.xTaskCreateStatic) refers to tasks_1.o(.text.prvAddNewTaskToReadyList) for prvAddNewTaskToReadyList
    tasks_1.o(.ARM.exidx.text.xTaskCreateStatic) refers to tasks_1.o(.text.xTaskCreateStatic) for [Anonymous Symbol]
    tasks_1.o(.text.prvAddNewTaskToReadyList) refers to port_1.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks_1.o(.text.prvAddNewTaskToReadyList) refers to tasks_1.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks_1.o(.text.prvAddNewTaskToReadyList) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.prvAddNewTaskToReadyList) refers to tasks_1.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks_1.o(.text.prvAddNewTaskToReadyList) refers to tasks_1.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks_1.o(.text.prvAddNewTaskToReadyList) refers to list.o(.text.vListInitialise) for vListInitialise
    tasks_1.o(.text.prvAddNewTaskToReadyList) refers to tasks_1.o(.bss.xDelayedTaskList1) for xDelayedTaskList1
    tasks_1.o(.text.prvAddNewTaskToReadyList) refers to tasks_1.o(.bss.xDelayedTaskList2) for xDelayedTaskList2
    tasks_1.o(.text.prvAddNewTaskToReadyList) refers to tasks_1.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks_1.o(.text.prvAddNewTaskToReadyList) refers to tasks_1.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks_1.o(.text.prvAddNewTaskToReadyList) refers to tasks_1.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks_1.o(.text.prvAddNewTaskToReadyList) refers to tasks_1.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks_1.o(.text.prvAddNewTaskToReadyList) refers to tasks_1.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks_1.o(.text.prvAddNewTaskToReadyList) refers to tasks_1.o(.bss.uxTaskNumber) for uxTaskNumber
    tasks_1.o(.text.prvAddNewTaskToReadyList) refers to tasks_1.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks_1.o(.text.prvAddNewTaskToReadyList) refers to port_1.o(.text.vPortExitCritical) for vPortExitCritical
    tasks_1.o(.ARM.exidx.text.prvAddNewTaskToReadyList) refers to tasks_1.o(.text.prvAddNewTaskToReadyList) for [Anonymous Symbol]
    tasks_1.o(.text.xTaskCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    tasks_1.o(.text.xTaskCreate) refers to rt_memclr.o(.text) for __aeabi_memclr
    tasks_1.o(.text.xTaskCreate) refers to heap_4.o(.text.vPortFree) for vPortFree
    tasks_1.o(.text.xTaskCreate) refers to aeabi_memset4.o(.text) for __aeabi_memset4
    tasks_1.o(.text.xTaskCreate) refers to list.o(.text.vListInitialiseItem) for vListInitialiseItem
    tasks_1.o(.text.xTaskCreate) refers to port_1.o(.text.pxPortInitialiseStack) for pxPortInitialiseStack
    tasks_1.o(.text.xTaskCreate) refers to tasks_1.o(.text.prvAddNewTaskToReadyList) for prvAddNewTaskToReadyList
    tasks_1.o(.ARM.exidx.text.xTaskCreate) refers to tasks_1.o(.text.xTaskCreate) for [Anonymous Symbol]
    tasks_1.o(.text.vTaskDelete) refers to port_1.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks_1.o(.text.vTaskDelete) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.vTaskDelete) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks_1.o(.text.vTaskDelete) refers to tasks_1.o(.bss.uxTaskNumber) for uxTaskNumber
    tasks_1.o(.text.vTaskDelete) refers to tasks_1.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks_1.o(.text.vTaskDelete) refers to tasks_1.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks_1.o(.text.vTaskDelete) refers to tasks_1.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks_1.o(.text.vTaskDelete) refers to tasks_1.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks_1.o(.text.vTaskDelete) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks_1.o(.text.vTaskDelete) refers to tasks_1.o(.bss.uxDeletedTasksWaitingCleanUp) for uxDeletedTasksWaitingCleanUp
    tasks_1.o(.text.vTaskDelete) refers to port_1.o(.text.vPortExitCritical) for vPortExitCritical
    tasks_1.o(.text.vTaskDelete) refers to heap_4.o(.text.vPortFree) for vPortFree
    tasks_1.o(.text.vTaskDelete) refers to tasks_1.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks_1.o(.ARM.exidx.text.vTaskDelete) refers to tasks_1.o(.text.vTaskDelete) for [Anonymous Symbol]
    tasks_1.o(.text.xTaskDelayUntil) refers to tasks_1.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks_1.o(.text.xTaskDelayUntil) refers to tasks_1.o(.bss.xTickCount) for xTickCount
    tasks_1.o(.text.xTaskDelayUntil) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.xTaskDelayUntil) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks_1.o(.text.xTaskDelayUntil) refers to tasks_1.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks_1.o(.text.xTaskDelayUntil) refers to list.o(.text.vListInsert) for vListInsert
    tasks_1.o(.text.xTaskDelayUntil) refers to tasks_1.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks_1.o(.text.xTaskDelayUntil) refers to tasks_1.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks_1.o(.text.xTaskDelayUntil) refers to tasks_1.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks_1.o(.ARM.exidx.text.xTaskDelayUntil) refers to tasks_1.o(.text.xTaskDelayUntil) for [Anonymous Symbol]
    tasks_1.o(.text.vTaskSuspendAll) refers to tasks_1.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks_1.o(.ARM.exidx.text.vTaskSuspendAll) refers to tasks_1.o(.text.vTaskSuspendAll) for [Anonymous Symbol]
    tasks_1.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks_1.o(.bss.xTickCount) for xTickCount
    tasks_1.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks_1.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks_1.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks_1.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks_1.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks_1.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.vListInsert) for vListInsert
    tasks_1.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks_1.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks_1.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks_1.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks_1.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList) refers to tasks_1.o(.text.prvAddCurrentTaskToDelayedList) for [Anonymous Symbol]
    tasks_1.o(.text.xTaskResumeAll) refers to port_1.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks_1.o(.text.xTaskResumeAll) refers to tasks_1.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks_1.o(.text.xTaskResumeAll) refers to port_1.o(.text.vPortExitCritical) for vPortExitCritical
    tasks_1.o(.text.xTaskResumeAll) refers to tasks_1.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks_1.o(.text.xTaskResumeAll) refers to tasks_1.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks_1.o(.text.xTaskResumeAll) refers to tasks_1.o(.bss.xYieldPending) for xYieldPending
    tasks_1.o(.text.xTaskResumeAll) refers to tasks_1.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks_1.o(.text.xTaskResumeAll) refers to tasks_1.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks_1.o(.text.xTaskResumeAll) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.xTaskResumeAll) refers to tasks_1.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks_1.o(.text.xTaskResumeAll) refers to tasks_1.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks_1.o(.text.xTaskResumeAll) refers to tasks_1.o(.bss.xPendedTicks) for xPendedTicks
    tasks_1.o(.text.xTaskResumeAll) refers to tasks_1.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    tasks_1.o(.ARM.exidx.text.xTaskResumeAll) refers to tasks_1.o(.text.xTaskResumeAll) for [Anonymous Symbol]
    tasks_1.o(.text.vTaskDelay) refers to tasks_1.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks_1.o(.text.vTaskDelay) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.vTaskDelay) refers to tasks_1.o(.bss.xTickCount) for xTickCount
    tasks_1.o(.text.vTaskDelay) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks_1.o(.text.vTaskDelay) refers to tasks_1.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks_1.o(.text.vTaskDelay) refers to list.o(.text.vListInsert) for vListInsert
    tasks_1.o(.text.vTaskDelay) refers to tasks_1.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks_1.o(.text.vTaskDelay) refers to tasks_1.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks_1.o(.text.vTaskDelay) refers to tasks_1.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks_1.o(.ARM.exidx.text.vTaskDelay) refers to tasks_1.o(.text.vTaskDelay) for [Anonymous Symbol]
    tasks_1.o(.text.eTaskGetState) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.eTaskGetState) refers to port_1.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks_1.o(.text.eTaskGetState) refers to tasks_1.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks_1.o(.text.eTaskGetState) refers to tasks_1.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks_1.o(.text.eTaskGetState) refers to port_1.o(.text.vPortExitCritical) for vPortExitCritical
    tasks_1.o(.text.eTaskGetState) refers to tasks_1.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks_1.o(.text.eTaskGetState) refers to tasks_1.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks_1.o(.ARM.exidx.text.eTaskGetState) refers to tasks_1.o(.text.eTaskGetState) for [Anonymous Symbol]
    tasks_1.o(.text.uxTaskPriorityGet) refers to port_1.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks_1.o(.text.uxTaskPriorityGet) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.uxTaskPriorityGet) refers to port_1.o(.text.vPortExitCritical) for vPortExitCritical
    tasks_1.o(.ARM.exidx.text.uxTaskPriorityGet) refers to tasks_1.o(.text.uxTaskPriorityGet) for [Anonymous Symbol]
    tasks_1.o(.text.uxTaskPriorityGetFromISR) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.ARM.exidx.text.uxTaskPriorityGetFromISR) refers to tasks_1.o(.text.uxTaskPriorityGetFromISR) for [Anonymous Symbol]
    tasks_1.o(.text.vTaskPrioritySet) refers to port_1.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks_1.o(.text.vTaskPrioritySet) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.vTaskPrioritySet) refers to tasks_1.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks_1.o(.text.vTaskPrioritySet) refers to port_1.o(.text.vPortExitCritical) for vPortExitCritical
    tasks_1.o(.text.vTaskPrioritySet) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks_1.o(.text.vTaskPrioritySet) refers to tasks_1.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks_1.o(.ARM.exidx.text.vTaskPrioritySet) refers to tasks_1.o(.text.vTaskPrioritySet) for [Anonymous Symbol]
    tasks_1.o(.text.vTaskSuspend) refers to port_1.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks_1.o(.text.vTaskSuspend) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.vTaskSuspend) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks_1.o(.text.vTaskSuspend) refers to tasks_1.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks_1.o(.text.vTaskSuspend) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks_1.o(.text.vTaskSuspend) refers to port_1.o(.text.vPortExitCritical) for vPortExitCritical
    tasks_1.o(.text.vTaskSuspend) refers to tasks_1.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks_1.o(.text.vTaskSuspend) refers to tasks_1.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks_1.o(.text.vTaskSuspend) refers to tasks_1.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks_1.o(.text.vTaskSuspend) refers to tasks_1.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks_1.o(.text.vTaskSuspend) refers to tasks_1.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks_1.o(.text.vTaskSuspend) refers to tasks_1.o(.bss.xYieldPending) for xYieldPending
    tasks_1.o(.text.vTaskSuspend) refers to cmsis_os2.o(.text.vApplicationStackOverflowHook) for vApplicationStackOverflowHook
    tasks_1.o(.text.vTaskSuspend) refers to tasks_1.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks_1.o(.text.vTaskSuspend) refers to tasks_1.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks_1.o(.ARM.exidx.text.vTaskSuspend) refers to tasks_1.o(.text.vTaskSuspend) for [Anonymous Symbol]
    tasks_1.o(.text.vTaskSwitchContext) refers to tasks_1.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks_1.o(.text.vTaskSwitchContext) refers to tasks_1.o(.bss.xYieldPending) for xYieldPending
    tasks_1.o(.text.vTaskSwitchContext) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.vTaskSwitchContext) refers to cmsis_os2.o(.text.vApplicationStackOverflowHook) for vApplicationStackOverflowHook
    tasks_1.o(.text.vTaskSwitchContext) refers to tasks_1.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks_1.o(.text.vTaskSwitchContext) refers to tasks_1.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks_1.o(.ARM.exidx.text.vTaskSwitchContext) refers to tasks_1.o(.text.vTaskSwitchContext) for [Anonymous Symbol]
    tasks_1.o(.text.vTaskResume) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.vTaskResume) refers to port_1.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks_1.o(.text.vTaskResume) refers to tasks_1.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks_1.o(.text.vTaskResume) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks_1.o(.text.vTaskResume) refers to tasks_1.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks_1.o(.text.vTaskResume) refers to tasks_1.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks_1.o(.text.vTaskResume) refers to port_1.o(.text.vPortExitCritical) for vPortExitCritical
    tasks_1.o(.ARM.exidx.text.vTaskResume) refers to tasks_1.o(.text.vTaskResume) for [Anonymous Symbol]
    tasks_1.o(.text.xTaskResumeFromISR) refers to tasks_1.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks_1.o(.text.xTaskResumeFromISR) refers to tasks_1.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks_1.o(.text.xTaskResumeFromISR) refers to tasks_1.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks_1.o(.text.xTaskResumeFromISR) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks_1.o(.text.xTaskResumeFromISR) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.xTaskResumeFromISR) refers to tasks_1.o(.bss.xYieldPending) for xYieldPending
    tasks_1.o(.text.xTaskResumeFromISR) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks_1.o(.text.xTaskResumeFromISR) refers to tasks_1.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks_1.o(.text.xTaskResumeFromISR) refers to tasks_1.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks_1.o(.ARM.exidx.text.xTaskResumeFromISR) refers to tasks_1.o(.text.xTaskResumeFromISR) for [Anonymous Symbol]
    tasks_1.o(.text.vTaskStartScheduler) refers to cmsis_os2.o(.text.vApplicationGetIdleTaskMemory) for vApplicationGetIdleTaskMemory
    tasks_1.o(.text.vTaskStartScheduler) refers to tasks_1.o(.text.prvIdleTask) for prvIdleTask
    tasks_1.o(.text.vTaskStartScheduler) refers to tasks_1.o(.text.xTaskCreateStatic) for xTaskCreateStatic
    tasks_1.o(.text.vTaskStartScheduler) refers to tasks_1.o(.bss.xIdleTaskHandle) for xIdleTaskHandle
    tasks_1.o(.text.vTaskStartScheduler) refers to timers.o(.text.xTimerCreateTimerTask) for xTimerCreateTimerTask
    tasks_1.o(.text.vTaskStartScheduler) refers to tasks_1.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks_1.o(.text.vTaskStartScheduler) refers to tasks_1.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks_1.o(.text.vTaskStartScheduler) refers to tasks_1.o(.bss.xTickCount) for xTickCount
    tasks_1.o(.text.vTaskStartScheduler) refers to port_1.o(.text.xPortStartScheduler) for xPortStartScheduler
    tasks_1.o(.text.vTaskStartScheduler) refers to tasks_1.o(.rodata.uxTopUsedPriority) for uxTopUsedPriority
    tasks_1.o(.ARM.exidx.text.vTaskStartScheduler) refers to tasks_1.o(.text.vTaskStartScheduler) for [Anonymous Symbol]
    tasks_1.o(.text.prvIdleTask) refers to tasks_1.o(.bss.uxDeletedTasksWaitingCleanUp) for uxDeletedTasksWaitingCleanUp
    tasks_1.o(.text.prvIdleTask) refers to tasks_1.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks_1.o(.text.prvIdleTask) refers to tasks_1.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks_1.o(.text.prvIdleTask) refers to tasks_1.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks_1.o(.text.prvIdleTask) refers to heap_4.o(.text.vPortFree) for vPortFree
    tasks_1.o(.text.prvIdleTask) refers to port_1.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks_1.o(.text.prvIdleTask) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks_1.o(.text.prvIdleTask) refers to port_1.o(.text.vPortExitCritical) for vPortExitCritical
    tasks_1.o(.ARM.exidx.text.prvIdleTask) refers to tasks_1.o(.text.prvIdleTask) for [Anonymous Symbol]
    tasks_1.o(.text.vTaskEndScheduler) refers to tasks_1.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks_1.o(.text.vTaskEndScheduler) refers to port_1.o(.text.vPortEndScheduler) for vPortEndScheduler
    tasks_1.o(.ARM.exidx.text.vTaskEndScheduler) refers to tasks_1.o(.text.vTaskEndScheduler) for [Anonymous Symbol]
    tasks_1.o(.text.xTaskIncrementTick) refers to tasks_1.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks_1.o(.text.xTaskIncrementTick) refers to tasks_1.o(.bss.xPendedTicks) for xPendedTicks
    tasks_1.o(.text.xTaskIncrementTick) refers to tasks_1.o(.bss.xTickCount) for xTickCount
    tasks_1.o(.text.xTaskIncrementTick) refers to tasks_1.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks_1.o(.text.xTaskIncrementTick) refers to tasks_1.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks_1.o(.text.xTaskIncrementTick) refers to tasks_1.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks_1.o(.text.xTaskIncrementTick) refers to tasks_1.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks_1.o(.text.xTaskIncrementTick) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.xTaskIncrementTick) refers to tasks_1.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks_1.o(.text.xTaskIncrementTick) refers to tasks_1.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks_1.o(.text.xTaskIncrementTick) refers to tasks_1.o(.bss.xYieldPending) for xYieldPending
    tasks_1.o(.ARM.exidx.text.xTaskIncrementTick) refers to tasks_1.o(.text.xTaskIncrementTick) for [Anonymous Symbol]
    tasks_1.o(.text.xTaskGetTickCount) refers to tasks_1.o(.bss.xTickCount) for xTickCount
    tasks_1.o(.ARM.exidx.text.xTaskGetTickCount) refers to tasks_1.o(.text.xTaskGetTickCount) for [Anonymous Symbol]
    tasks_1.o(.text.xTaskGetTickCountFromISR) refers to tasks_1.o(.bss.xTickCount) for xTickCount
    tasks_1.o(.ARM.exidx.text.xTaskGetTickCountFromISR) refers to tasks_1.o(.text.xTaskGetTickCountFromISR) for [Anonymous Symbol]
    tasks_1.o(.text.uxTaskGetNumberOfTasks) refers to tasks_1.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks_1.o(.ARM.exidx.text.uxTaskGetNumberOfTasks) refers to tasks_1.o(.text.uxTaskGetNumberOfTasks) for [Anonymous Symbol]
    tasks_1.o(.text.pcTaskGetName) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.ARM.exidx.text.pcTaskGetName) refers to tasks_1.o(.text.pcTaskGetName) for [Anonymous Symbol]
    tasks_1.o(.text.uxTaskGetSystemState) refers to tasks_1.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks_1.o(.text.uxTaskGetSystemState) refers to tasks_1.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks_1.o(.text.uxTaskGetSystemState) refers to tasks_1.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks_1.o(.text.uxTaskGetSystemState) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.uxTaskGetSystemState) refers to tasks_1.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks_1.o(.text.uxTaskGetSystemState) refers to tasks_1.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks_1.o(.text.uxTaskGetSystemState) refers to tasks_1.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks_1.o(.text.uxTaskGetSystemState) refers to tasks_1.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks_1.o(.text.uxTaskGetSystemState) refers to tasks_1.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks_1.o(.ARM.exidx.text.uxTaskGetSystemState) refers to tasks_1.o(.text.uxTaskGetSystemState) for [Anonymous Symbol]
    tasks_1.o(.text.xTaskCatchUpTicks) refers to tasks_1.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks_1.o(.text.xTaskCatchUpTicks) refers to port_1.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks_1.o(.text.xTaskCatchUpTicks) refers to tasks_1.o(.bss.xPendedTicks) for xPendedTicks
    tasks_1.o(.text.xTaskCatchUpTicks) refers to port_1.o(.text.vPortExitCritical) for vPortExitCritical
    tasks_1.o(.text.xTaskCatchUpTicks) refers to tasks_1.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks_1.o(.ARM.exidx.text.xTaskCatchUpTicks) refers to tasks_1.o(.text.xTaskCatchUpTicks) for [Anonymous Symbol]
    tasks_1.o(.text.vTaskPlaceOnEventList) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.vTaskPlaceOnEventList) refers to list.o(.text.vListInsert) for vListInsert
    tasks_1.o(.text.vTaskPlaceOnEventList) refers to tasks_1.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks_1.o(.ARM.exidx.text.vTaskPlaceOnEventList) refers to tasks_1.o(.text.vTaskPlaceOnEventList) for [Anonymous Symbol]
    tasks_1.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks_1.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks_1.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList) refers to tasks_1.o(.text.vTaskPlaceOnUnorderedEventList) for [Anonymous Symbol]
    tasks_1.o(.text.vTaskPlaceOnEventListRestricted) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.vTaskPlaceOnEventListRestricted) refers to tasks_1.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks_1.o(.ARM.exidx.text.vTaskPlaceOnEventListRestricted) refers to tasks_1.o(.text.vTaskPlaceOnEventListRestricted) for [Anonymous Symbol]
    tasks_1.o(.text.xTaskRemoveFromEventList) refers to tasks_1.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks_1.o(.text.xTaskRemoveFromEventList) refers to tasks_1.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks_1.o(.text.xTaskRemoveFromEventList) refers to tasks_1.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks_1.o(.text.xTaskRemoveFromEventList) refers to tasks_1.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks_1.o(.text.xTaskRemoveFromEventList) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.xTaskRemoveFromEventList) refers to tasks_1.o(.bss.xYieldPending) for xYieldPending
    tasks_1.o(.ARM.exidx.text.xTaskRemoveFromEventList) refers to tasks_1.o(.text.xTaskRemoveFromEventList) for [Anonymous Symbol]
    tasks_1.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks_1.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks_1.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks_1.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks_1.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks_1.o(.bss.xYieldPending) for xYieldPending
    tasks_1.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList) refers to tasks_1.o(.text.vTaskRemoveFromUnorderedEventList) for [Anonymous Symbol]
    tasks_1.o(.text.vTaskSetTimeOutState) refers to port_1.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks_1.o(.text.vTaskSetTimeOutState) refers to tasks_1.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks_1.o(.text.vTaskSetTimeOutState) refers to tasks_1.o(.bss.xTickCount) for xTickCount
    tasks_1.o(.text.vTaskSetTimeOutState) refers to port_1.o(.text.vPortExitCritical) for vPortExitCritical
    tasks_1.o(.ARM.exidx.text.vTaskSetTimeOutState) refers to tasks_1.o(.text.vTaskSetTimeOutState) for [Anonymous Symbol]
    tasks_1.o(.text.vTaskInternalSetTimeOutState) refers to tasks_1.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks_1.o(.text.vTaskInternalSetTimeOutState) refers to tasks_1.o(.bss.xTickCount) for xTickCount
    tasks_1.o(.ARM.exidx.text.vTaskInternalSetTimeOutState) refers to tasks_1.o(.text.vTaskInternalSetTimeOutState) for [Anonymous Symbol]
    tasks_1.o(.text.xTaskCheckForTimeOut) refers to port_1.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks_1.o(.text.xTaskCheckForTimeOut) refers to tasks_1.o(.bss.xTickCount) for xTickCount
    tasks_1.o(.text.xTaskCheckForTimeOut) refers to tasks_1.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks_1.o(.text.xTaskCheckForTimeOut) refers to port_1.o(.text.vPortExitCritical) for vPortExitCritical
    tasks_1.o(.ARM.exidx.text.xTaskCheckForTimeOut) refers to tasks_1.o(.text.xTaskCheckForTimeOut) for [Anonymous Symbol]
    tasks_1.o(.text.vTaskMissedYield) refers to tasks_1.o(.bss.xYieldPending) for xYieldPending
    tasks_1.o(.ARM.exidx.text.vTaskMissedYield) refers to tasks_1.o(.text.vTaskMissedYield) for [Anonymous Symbol]
    tasks_1.o(.ARM.exidx.text.uxTaskGetTaskNumber) refers to tasks_1.o(.text.uxTaskGetTaskNumber) for [Anonymous Symbol]
    tasks_1.o(.ARM.exidx.text.vTaskSetTaskNumber) refers to tasks_1.o(.text.vTaskSetTaskNumber) for [Anonymous Symbol]
    tasks_1.o(.text.vTaskGetInfo) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.vTaskGetInfo) refers to port_1.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks_1.o(.text.vTaskGetInfo) refers to tasks_1.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks_1.o(.text.vTaskGetInfo) refers to tasks_1.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks_1.o(.text.vTaskGetInfo) refers to port_1.o(.text.vPortExitCritical) for vPortExitCritical
    tasks_1.o(.text.vTaskGetInfo) refers to tasks_1.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks_1.o(.text.vTaskGetInfo) refers to tasks_1.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks_1.o(.text.vTaskGetInfo) refers to tasks_1.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks_1.o(.text.vTaskGetInfo) refers to tasks_1.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks_1.o(.ARM.exidx.text.vTaskGetInfo) refers to tasks_1.o(.text.vTaskGetInfo) for [Anonymous Symbol]
    tasks_1.o(.text.uxTaskGetStackHighWaterMark) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.ARM.exidx.text.uxTaskGetStackHighWaterMark) refers to tasks_1.o(.text.uxTaskGetStackHighWaterMark) for [Anonymous Symbol]
    tasks_1.o(.text.xTaskGetCurrentTaskHandle) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle) refers to tasks_1.o(.text.xTaskGetCurrentTaskHandle) for [Anonymous Symbol]
    tasks_1.o(.text.xTaskGetSchedulerState) refers to tasks_1.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks_1.o(.text.xTaskGetSchedulerState) refers to tasks_1.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks_1.o(.ARM.exidx.text.xTaskGetSchedulerState) refers to tasks_1.o(.text.xTaskGetSchedulerState) for [Anonymous Symbol]
    tasks_1.o(.text.xTaskPriorityInherit) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.xTaskPriorityInherit) refers to tasks_1.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks_1.o(.text.xTaskPriorityInherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks_1.o(.text.xTaskPriorityInherit) refers to tasks_1.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks_1.o(.ARM.exidx.text.xTaskPriorityInherit) refers to tasks_1.o(.text.xTaskPriorityInherit) for [Anonymous Symbol]
    tasks_1.o(.text.xTaskPriorityDisinherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks_1.o(.text.xTaskPriorityDisinherit) refers to tasks_1.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks_1.o(.text.xTaskPriorityDisinherit) refers to tasks_1.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks_1.o(.ARM.exidx.text.xTaskPriorityDisinherit) refers to tasks_1.o(.text.xTaskPriorityDisinherit) for [Anonymous Symbol]
    tasks_1.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks_1.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks_1.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks_1.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks_1.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks_1.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks_1.o(.text.vTaskPriorityDisinheritAfterTimeout) for [Anonymous Symbol]
    tasks_1.o(.text.uxTaskResetEventItemValue) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.ARM.exidx.text.uxTaskResetEventItemValue) refers to tasks_1.o(.text.uxTaskResetEventItemValue) for [Anonymous Symbol]
    tasks_1.o(.text.pvTaskIncrementMutexHeldCount) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount) refers to tasks_1.o(.text.pvTaskIncrementMutexHeldCount) for [Anonymous Symbol]
    tasks_1.o(.text.ulTaskGenericNotifyTake) refers to port_1.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks_1.o(.text.ulTaskGenericNotifyTake) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.ulTaskGenericNotifyTake) refers to tasks_1.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks_1.o(.text.ulTaskGenericNotifyTake) refers to port_1.o(.text.vPortExitCritical) for vPortExitCritical
    tasks_1.o(.ARM.exidx.text.ulTaskGenericNotifyTake) refers to tasks_1.o(.text.ulTaskGenericNotifyTake) for [Anonymous Symbol]
    tasks_1.o(.text.xTaskGenericNotifyWait) refers to port_1.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks_1.o(.text.xTaskGenericNotifyWait) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.xTaskGenericNotifyWait) refers to tasks_1.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks_1.o(.text.xTaskGenericNotifyWait) refers to port_1.o(.text.vPortExitCritical) for vPortExitCritical
    tasks_1.o(.ARM.exidx.text.xTaskGenericNotifyWait) refers to tasks_1.o(.text.xTaskGenericNotifyWait) for [Anonymous Symbol]
    tasks_1.o(.text.xTaskGenericNotify) refers to port_1.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks_1.o(.text.xTaskGenericNotify) refers to tasks_1.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks_1.o(.text.xTaskGenericNotify) refers to tasks_1.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks_1.o(.text.xTaskGenericNotify) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.xTaskGenericNotify) refers to port_1.o(.text.vPortExitCritical) for vPortExitCritical
    tasks_1.o(.ARM.exidx.text.xTaskGenericNotify) refers to tasks_1.o(.text.xTaskGenericNotify) for [Anonymous Symbol]
    tasks_1.o(.text.xTaskGenericNotifyFromISR) refers to tasks_1.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks_1.o(.text.xTaskGenericNotifyFromISR) refers to tasks_1.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks_1.o(.text.xTaskGenericNotifyFromISR) refers to tasks_1.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks_1.o(.text.xTaskGenericNotifyFromISR) refers to tasks_1.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks_1.o(.text.xTaskGenericNotifyFromISR) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.xTaskGenericNotifyFromISR) refers to tasks_1.o(.bss.xYieldPending) for xYieldPending
    tasks_1.o(.ARM.exidx.text.xTaskGenericNotifyFromISR) refers to tasks_1.o(.text.xTaskGenericNotifyFromISR) for [Anonymous Symbol]
    tasks_1.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks_1.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks_1.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks_1.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks_1.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks_1.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks_1.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks_1.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks_1.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks_1.o(.bss.xYieldPending) for xYieldPending
    tasks_1.o(.ARM.exidx.text.vTaskGenericNotifyGiveFromISR) refers to tasks_1.o(.text.vTaskGenericNotifyGiveFromISR) for [Anonymous Symbol]
    tasks_1.o(.text.xTaskGenericNotifyStateClear) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.xTaskGenericNotifyStateClear) refers to port_1.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks_1.o(.text.xTaskGenericNotifyStateClear) refers to port_1.o(.text.vPortExitCritical) for vPortExitCritical
    tasks_1.o(.ARM.exidx.text.xTaskGenericNotifyStateClear) refers to tasks_1.o(.text.xTaskGenericNotifyStateClear) for [Anonymous Symbol]
    tasks_1.o(.text.ulTaskGenericNotifyValueClear) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.ulTaskGenericNotifyValueClear) refers to port_1.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks_1.o(.text.ulTaskGenericNotifyValueClear) refers to port_1.o(.text.vPortExitCritical) for vPortExitCritical
    tasks_1.o(.ARM.exidx.text.ulTaskGenericNotifyValueClear) refers to tasks_1.o(.text.ulTaskGenericNotifyValueClear) for [Anonymous Symbol]
    timers.o(.text.xTimerCreateTimerTask) refers to port_1.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.xActiveTimerList1) for xActiveTimerList1
    timers.o(.text.xTimerCreateTimerTask) refers to list.o(.text.vListInitialise) for vListInitialise
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.xActiveTimerList2) for xActiveTimerList2
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.prvCheckForValidListAndQueue.ucStaticTimerQueueStorage) for prvCheckForValidListAndQueue.ucStaticTimerQueueStorage
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.prvCheckForValidListAndQueue.xStaticTimerQueue) for prvCheckForValidListAndQueue.xStaticTimerQueue
    timers.o(.text.xTimerCreateTimerTask) refers to queue.o(.text.xQueueGenericCreateStatic) for xQueueGenericCreateStatic
    timers.o(.text.xTimerCreateTimerTask) refers to port_1.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.text.xTimerCreateTimerTask) refers to cmsis_os2.o(.text.vApplicationGetTimerTaskMemory) for vApplicationGetTimerTaskMemory
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.text.prvTimerTask) for prvTimerTask
    timers.o(.text.xTimerCreateTimerTask) refers to tasks_1.o(.text.xTaskCreateStatic) for xTaskCreateStatic
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.xTimerTaskHandle) for xTimerTaskHandle
    timers.o(.ARM.exidx.text.xTimerCreateTimerTask) refers to timers.o(.text.xTimerCreateTimerTask) for [Anonymous Symbol]
    timers.o(.text.prvTimerTask) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvTimerTask) refers to timers.o(.bss.prvSampleTimeNow.xLastTime) for prvSampleTimeNow.xLastTime
    timers.o(.text.prvTimerTask) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvTimerTask) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvTimerTask) refers to tasks_1.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    timers.o(.text.prvTimerTask) refers to tasks_1.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvProcessExpiredTimer) for prvProcessExpiredTimer
    timers.o(.text.prvTimerTask) refers to tasks_1.o(.text.xTaskResumeAll) for xTaskResumeAll
    timers.o(.text.prvTimerTask) refers to queue.o(.text.vQueueWaitForMessageRestricted) for vQueueWaitForMessageRestricted
    timers.o(.text.prvTimerTask) refers to list.o(.text.vListInsert) for vListInsert
    timers.o(.text.prvTimerTask) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    timers.o(.text.prvTimerTask) refers to list.o(.text.uxListRemove) for uxListRemove
    timers.o(.text.prvTimerTask) refers to heap_4.o(.text.vPortFree) for vPortFree
    timers.o(.ARM.exidx.text.prvTimerTask) refers to timers.o(.text.prvTimerTask) for [Anonymous Symbol]
    timers.o(.text.xTimerCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    timers.o(.text.xTimerCreate) refers to timers.o(.text.prvInitialiseNewTimer) for prvInitialiseNewTimer
    timers.o(.ARM.exidx.text.xTimerCreate) refers to timers.o(.text.xTimerCreate) for [Anonymous Symbol]
    timers.o(.text.prvInitialiseNewTimer) refers to port_1.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.prvInitialiseNewTimer) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvInitialiseNewTimer) refers to timers.o(.bss.xActiveTimerList1) for xActiveTimerList1
    timers.o(.text.prvInitialiseNewTimer) refers to list.o(.text.vListInitialise) for vListInitialise
    timers.o(.text.prvInitialiseNewTimer) refers to timers.o(.bss.xActiveTimerList2) for xActiveTimerList2
    timers.o(.text.prvInitialiseNewTimer) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvInitialiseNewTimer) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvInitialiseNewTimer) refers to timers.o(.bss.prvCheckForValidListAndQueue.ucStaticTimerQueueStorage) for prvCheckForValidListAndQueue.ucStaticTimerQueueStorage
    timers.o(.text.prvInitialiseNewTimer) refers to timers.o(.bss.prvCheckForValidListAndQueue.xStaticTimerQueue) for prvCheckForValidListAndQueue.xStaticTimerQueue
    timers.o(.text.prvInitialiseNewTimer) refers to queue.o(.text.xQueueGenericCreateStatic) for xQueueGenericCreateStatic
    timers.o(.text.prvInitialiseNewTimer) refers to port_1.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.text.prvInitialiseNewTimer) refers to list.o(.text.vListInitialiseItem) for vListInitialiseItem
    timers.o(.ARM.exidx.text.prvInitialiseNewTimer) refers to timers.o(.text.prvInitialiseNewTimer) for [Anonymous Symbol]
    timers.o(.text.xTimerCreateStatic) refers to timers.o(.text.prvInitialiseNewTimer) for prvInitialiseNewTimer
    timers.o(.ARM.exidx.text.xTimerCreateStatic) refers to timers.o(.text.xTimerCreateStatic) for [Anonymous Symbol]
    timers.o(.text.xTimerGenericCommand) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerGenericCommand) refers to tasks_1.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    timers.o(.text.xTimerGenericCommand) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    timers.o(.text.xTimerGenericCommand) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    timers.o(.ARM.exidx.text.xTimerGenericCommand) refers to timers.o(.text.xTimerGenericCommand) for [Anonymous Symbol]
    timers.o(.text.xTimerGetTimerDaemonTaskHandle) refers to timers.o(.bss.xTimerTaskHandle) for xTimerTaskHandle
    timers.o(.ARM.exidx.text.xTimerGetTimerDaemonTaskHandle) refers to timers.o(.text.xTimerGetTimerDaemonTaskHandle) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.xTimerGetPeriod) refers to timers.o(.text.xTimerGetPeriod) for [Anonymous Symbol]
    timers.o(.text.vTimerSetReloadMode) refers to port_1.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.vTimerSetReloadMode) refers to port_1.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.vTimerSetReloadMode) refers to timers.o(.text.vTimerSetReloadMode) for [Anonymous Symbol]
    timers.o(.text.xTimerGetReloadMode) refers to port_1.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.xTimerGetReloadMode) refers to port_1.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.xTimerGetReloadMode) refers to timers.o(.text.xTimerGetReloadMode) for [Anonymous Symbol]
    timers.o(.text.uxTimerGetReloadMode) refers to port_1.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.uxTimerGetReloadMode) refers to port_1.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.uxTimerGetReloadMode) refers to timers.o(.text.uxTimerGetReloadMode) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.xTimerGetExpiryTime) refers to timers.o(.text.xTimerGetExpiryTime) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.pcTimerGetName) refers to timers.o(.text.pcTimerGetName) for [Anonymous Symbol]
    timers.o(.text.xTimerIsTimerActive) refers to port_1.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.xTimerIsTimerActive) refers to port_1.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.xTimerIsTimerActive) refers to timers.o(.text.xTimerIsTimerActive) for [Anonymous Symbol]
    timers.o(.text.pvTimerGetTimerID) refers to port_1.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.pvTimerGetTimerID) refers to port_1.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.pvTimerGetTimerID) refers to timers.o(.text.pvTimerGetTimerID) for [Anonymous Symbol]
    timers.o(.text.vTimerSetTimerID) refers to port_1.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.vTimerSetTimerID) refers to port_1.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.vTimerSetTimerID) refers to timers.o(.text.vTimerSetTimerID) for [Anonymous Symbol]
    timers.o(.text.xTimerPendFunctionCallFromISR) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerPendFunctionCallFromISR) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    timers.o(.ARM.exidx.text.xTimerPendFunctionCallFromISR) refers to timers.o(.text.xTimerPendFunctionCallFromISR) for [Anonymous Symbol]
    timers.o(.text.xTimerPendFunctionCall) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerPendFunctionCall) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    timers.o(.ARM.exidx.text.xTimerPendFunctionCall) refers to timers.o(.text.xTimerPendFunctionCall) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.uxTimerGetTimerNumber) refers to timers.o(.text.uxTimerGetTimerNumber) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.vTimerSetTimerNumber) refers to timers.o(.text.vTimerSetTimerNumber) for [Anonymous Symbol]
    timers.o(.text.prvProcessExpiredTimer) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvProcessExpiredTimer) refers to list.o(.text.uxListRemove) for uxListRemove
    timers.o(.text.prvProcessExpiredTimer) refers to list.o(.text.vListInsert) for vListInsert
    timers.o(.text.prvProcessExpiredTimer) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.ARM.exidx.text.prvProcessExpiredTimer) refers to timers.o(.text.prvProcessExpiredTimer) for [Anonymous Symbol]
    __2sprintf.o(.text) refers to _printf_char_common.o(.text) for _printf_char_common
    __2sprintf.o(.text) refers to _sputc.o(.text) for _sputc
    noretval__2sprintf.o(.text) refers to _printf_char_common.o(.text) for _printf_char_common
    noretval__2sprintf.o(.text) refers to _sputc.o(.text) for _sputc
    __printf.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    _printf_str.o(.text) refers (Special) to _printf_char.o(.text) for _printf_cs_common
    _printf_dec.o(.text) refers to _printf_intcommon.o(.text) for _printf_int_common
    __printf_flags.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags.o(.text) refers to __printf_flags.o(.constdata) for .constdata
    __printf_ss.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_ss.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_ss.o(.text) refers to __printf_flags_ss.o(.constdata) for .constdata
    __printf_wp.o(.text) refers to __printf_wp.o(i._is_digit) for _is_digit
    __printf_wp.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_wp.o(.text) refers to __printf_wp.o(i._is_digit) for _is_digit
    __printf_flags_wp.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_wp.o(.text) refers to __printf_flags_wp.o(.constdata) for .constdata
    __printf_ss_wp.o(.text) refers to __printf_wp.o(i._is_digit) for _is_digit
    __printf_ss_wp.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_ss_wp.o(.text) refers to __printf_wp.o(i._is_digit) for _is_digit
    __printf_flags_ss_wp.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_ss_wp.o(.text) refers to __printf_flags_ss_wp.o(.constdata) for .constdata
    _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) refers (Weak) to _printf_char.o(.text) for _printf_string
    _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) refers (Weak) to _printf_dec.o(.text) for _printf_int_dec
    _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) refers (Weak) to _printf_dec.o(.text) for _printf_int_dec
    _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) refers (Special) to _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017) for _printf_percent_end
    rt_memcpy_v6.o(.text) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    aeabi_memset4.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    rt_memclr.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    _printf_char_common.o(.text) refers to __printf_ss.o(.text) for __printf
    _printf_char.o(.text) refers (Weak) to _printf_str.o(.text) for _printf_str
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to clib_arm.o(.text._platform_post_stackheap_init) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(.text.main) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_stm32f10x_md.o(.text) for __user_initial_stackheap
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000034) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000002) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000006) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000010) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_relocate_pie_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000035) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000027) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_user_alloc_1
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$0000001A) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000028) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000029) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    argv_veneer.o(.emb_text) refers to no_argv.o(.text) for __ARM_get_argv
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_exit_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_command_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_wrch_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display


==============================================================================

Removing Unused input sections from the image.

    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing cli.o(.text), (0 bytes).
    Removing cli.o(.ARM.exidx.text.CLI_Transmit), (8 bytes).
    Removing cli.o(.text.CLI_Receive), (104 bytes).
    Removing cli.o(.ARM.exidx.text.CLI_Receive), (8 bytes).
    Removing cli.o(.ARM.exidx.text.display), (8 bytes).
    Removing cli.o(.ARM.exidx.text.setCursorPosition), (8 bytes).
    Removing cli.o(.ARM.exidx.text.convertToString), (8 bytes).
    Removing cli.o(.ARM.exidx.text.message), (8 bytes).
    Removing cli.o(.text.saveCursorPosition), (30 bytes).
    Removing cli.o(.ARM.exidx.text.saveCursorPosition), (8 bytes).
    Removing cli.o(.text.getCursorPosition), (28 bytes).
    Removing cli.o(.ARM.exidx.text.getCursorPosition), (8 bytes).
    Removing cli.o(.ARM.exidx.text.sendPromptArrows), (8 bytes).
    Removing cli.o(.ARM.exidx.text.clearScreenFromRow), (8 bytes).
    Removing usart.o(.text), (0 bytes).
    Removing usart.o(.ARM.exidx.text.serial_open), (8 bytes).
    Removing usart.o(.text.usartTimer), (46 bytes).
    Removing usart.o(.ARM.exidx.text.usartTimer), (8 bytes).
    Removing usart.o(.ARM.exidx.text.serial_close), (8 bytes).
    Removing usart.o(.ARM.exidx.text.sendbyte), (8 bytes).
    Removing usart.o(.text.getbyte), (20 bytes).
    Removing usart.o(.ARM.exidx.text.getbyte), (8 bytes).
    Removing usart.o(.ARM.exidx.text.USART2_IRQHandler), (8 bytes).
    Removing myfunctions.o(.text), (0 bytes).
    Removing myfunctions.o(.ARM.exidx.text.clockInit), (8 bytes).
    Removing myfunctions.o(.ARM.exidx.text.RCC_SetGPIOClock), (8 bytes).
    Removing myfunctions.o(.ARM.exidx.text.RCC_EnableAFIOClock), (8 bytes).
    Removing myfunctions.o(.text.RCC_EnableADCClock), (52 bytes).
    Removing myfunctions.o(.ARM.exidx.text.RCC_EnableADCClock), (8 bytes).
    Removing myfunctions.o(.ARM.exidx.text.RCC_EnableUSARTClock), (8 bytes).
    Removing myfunctions.o(.ARM.exidx.text.RCC_EnableTimerClock), (8 bytes).
    Removing myfunctions.o(.ARM.exidx.text.GPIO_ConfigurePin), (8 bytes).
    Removing myfunctions.o(.ARM.exidx.text.delay), (8 bytes).
    Removing myfunctions.o(.text.ledFlash), (148 bytes).
    Removing myfunctions.o(.ARM.exidx.text.ledFlash), (8 bytes).
    Removing myfunctions.o(.text.userLedOn), (18 bytes).
    Removing myfunctions.o(.ARM.exidx.text.userLedOn), (8 bytes).
    Removing myfunctions.o(.text.userLedOff), (18 bytes).
    Removing myfunctions.o(.ARM.exidx.text.userLedOff), (8 bytes).
    Removing myfunctions.o(.text.my_abs), (8 bytes).
    Removing myfunctions.o(.ARM.exidx.text.my_abs), (8 bytes).
    Removing myfunctions.o(.ARM.exidx.text.characterToInt), (8 bytes).
    Removing myfunctions.o(.ARM.exidx.text.newMemory), (8 bytes).
    Removing timer.o(.text), (0 bytes).
    Removing timer.o(.ARM.exidx.text.updateTimer), (8 bytes).
    Removing timer.o(.text.initTimerForTIM3), (46 bytes).
    Removing timer.o(.ARM.exidx.text.initTimerForTIM3), (8 bytes).
    Removing timer.o(.ARM.exidx.text.TIM3_IRQHandler), (8 bytes).
    Removing timer.o(.ARM.exidx.text.interruptPC13setup), (8 bytes).
    Removing timer.o(.ARM.exidx.text.EXTI15_10_IRQHandler), (8 bytes).
    Removing tasking.o(.text), (0 bytes).
    Removing tasking.o(.ARM.exidx.text.status), (8 bytes).
    Removing tasking.o(.ARM.exidx.text.floorStatus), (8 bytes).
    Removing tasking.o(.ARM.exidx.text.timeElapsed), (8 bytes).
    Removing tasking.o(.ARM.exidx.text.TaskHandleUserInput), (8 bytes).
    Removing tasking.o(.ARM.exidx.text.draw), (8 bytes).
    Removing tasking.o(.ARM.exidx.text.TaskProcessCommand), (8 bytes).
    Removing tasking.o(.ARM.exidx.text.processCommand), (8 bytes).
    Removing tasking.o(.ARM.exidx.text.moveElevatorToFloor), (8 bytes).
    Removing staticstructure.o(.text), (0 bytes).
    Removing staticstructure.o(.ARM.exidx.text.setTextColor), (8 bytes).
    Removing staticstructure.o(.ARM.exidx.text.displayBox), (8 bytes).
    Removing staticstructure.o(.text.drawHorizontal), (92 bytes).
    Removing staticstructure.o(.ARM.exidx.text.drawHorizontal), (8 bytes).
    Removing staticstructure.o(.text.drawVertical), (92 bytes).
    Removing staticstructure.o(.ARM.exidx.text.drawVertical), (8 bytes).
    Removing staticstructure.o(.ARM.exidx.text.drawFifth), (8 bytes).
    Removing staticstructure.o(.ARM.exidx.text.drawForth), (8 bytes).
    Removing staticstructure.o(.ARM.exidx.text.drawThird), (8 bytes).
    Removing staticstructure.o(.ARM.exidx.text.drawSecond), (8 bytes).
    Removing staticstructure.o(.ARM.exidx.text.drawFirst), (8 bytes).
    Removing staticstructure.o(.ARM.exidx.text.instructions), (8 bytes).
    Removing staticstructure.o(.text.statusDisplay), (120 bytes).
    Removing staticstructure.o(.ARM.exidx.text.statusDisplay), (8 bytes).
    Removing staticstructure.o(.text.displayBreaker), (86 bytes).
    Removing staticstructure.o(.ARM.exidx.text.displayBreaker), (8 bytes).
    Removing staticstructure.o(.ARM.exidx.text.displaySetup), (8 bytes).
    Removing dynamicmove.o(.text), (0 bytes).
    Removing clib_arm.o(.text), (0 bytes).
    Removing clib_arm.o(.ARM.exidx.text._platform_post_stackheap_init), (8 bytes).
    Removing clib_arm.o(.text.__user_perthread_libspace), (78 bytes).
    Removing clib_arm.o(.ARM.exidx.text.__user_perthread_libspace), (8 bytes).
    Removing clib_arm.o(.ARM.exidx.text._mutex_initialize), (8 bytes).
    Removing clib_arm.o(.ARM.exidx.text._mutex_acquire), (8 bytes).
    Removing clib_arm.o(.ARM.exidx.text._mutex_release), (8 bytes).
    Removing clib_arm.o(.ARM.exidx.text._mutex_free), (8 bytes).
    Removing clib_arm.o(.bss.os_libspace), (480 bytes).
    Removing clib_arm.o(.bss.os_libspace_id), (16 bytes).
    Removing cmsis_os1.o(.text), (0 bytes).
    Removing cmsis_os1.o(.text.osThreadCreate), (18 bytes).
    Removing cmsis_os1.o(.ARM.exidx.text.osThreadCreate), (8 bytes).
    Removing cmsis_os1.o(.text.osSignalSet), (26 bytes).
    Removing cmsis_os1.o(.ARM.exidx.text.osSignalSet), (8 bytes).
    Removing cmsis_os1.o(.text.osSignalClear), (38 bytes).
    Removing cmsis_os1.o(.ARM.exidx.text.osSignalClear), (8 bytes).
    Removing cmsis_os1.o(.text.osSignalWait), (60 bytes).
    Removing cmsis_os1.o(.ARM.exidx.text.osSignalWait), (8 bytes).
    Removing cmsis_os1.o(.text.osTimerCreate), (18 bytes).
    Removing cmsis_os1.o(.ARM.exidx.text.osTimerCreate), (8 bytes).
    Removing cmsis_os1.o(.text.osMutexCreate), (12 bytes).
    Removing cmsis_os1.o(.ARM.exidx.text.osMutexCreate), (8 bytes).
    Removing cmsis_os1.o(.text.osSemaphoreCreate), (16 bytes).
    Removing cmsis_os1.o(.ARM.exidx.text.osSemaphoreCreate), (8 bytes).
    Removing cmsis_os1.o(.text.osSemaphoreWait), (38 bytes).
    Removing cmsis_os1.o(.ARM.exidx.text.osSemaphoreWait), (8 bytes).
    Removing cmsis_os1.o(.text.osMessageCreate), (20 bytes).
    Removing cmsis_os1.o(.ARM.exidx.text.osMessageCreate), (8 bytes).
    Removing cmsis_os1.o(.text.osMessagePut), (20 bytes).
    Removing cmsis_os1.o(.ARM.exidx.text.osMessagePut), (8 bytes).
    Removing cmsis_os1.o(.text.osMessageGet), (46 bytes).
    Removing cmsis_os1.o(.ARM.exidx.text.osMessageGet), (8 bytes).
    Removing cmsis_os2.o(.text), (0 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.SysTick_Handler), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelInitialize), (76 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelInitialize), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelGetInfo), (72 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelGetInfo), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelGetState), (38 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelGetState), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelStart), (90 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelStart), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelLock), (68 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelLock), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelUnlock), (90 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelUnlock), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelRestoreLock), (100 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelRestoreLock), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelGetTickCount), (52 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelGetTickCount), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelGetTickFreq), (6 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelGetTickFreq), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelGetSysTimerCount), (70 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelGetSysTimerCount), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelGetSysTimerFreq), (12 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelGetSysTimerFreq), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadNew), (244 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadNew), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadGetName), (62 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadGetName), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadGetId), (4 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadGetId), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadGetState), (100 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadGetState), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadGetStackSpace), (64 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadGetStackSpace), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadSetPriority), (74 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadSetPriority), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadGetPriority), (64 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadGetPriority), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadYield), (66 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadYield), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadSuspend), (60 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadSuspend), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadResume), (60 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadResume), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadExit), (10 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadExit), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadTerminate), (76 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadTerminate), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadGetCount), (46 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadGetCount), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadEnumerate), (164 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadEnumerate), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadFlagsSet), (172 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadFlagsSet), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadFlagsClear), (134 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadFlagsClear), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadFlagsGet), (82 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadFlagsGet), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadFlagsWait), (224 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadFlagsWait), (8 bytes).
    Removing cmsis_os2.o(.text.osDelay), (58 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osDelay), (8 bytes).
    Removing cmsis_os2.o(.text.osDelayUntil), (88 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osDelayUntil), (8 bytes).
    Removing cmsis_os2.o(.text.osTimerNew), (272 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osTimerNew), (8 bytes).
    Removing cmsis_os2.o(.text.TimerCallback), (26 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.TimerCallback), (8 bytes).
    Removing cmsis_os2.o(.text.osTimerGetName), (62 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osTimerGetName), (8 bytes).
    Removing cmsis_os2.o(.text.osTimerStart), (96 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osTimerStart), (8 bytes).
    Removing cmsis_os2.o(.text.osTimerStop), (104 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osTimerStop), (8 bytes).
    Removing cmsis_os2.o(.text.osTimerIsRunning), (62 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osTimerIsRunning), (8 bytes).
    Removing cmsis_os2.o(.text.osTimerDelete), (114 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osTimerDelete), (8 bytes).
    Removing cmsis_os2.o(.text.osEventFlagsNew), (102 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osEventFlagsNew), (8 bytes).
    Removing cmsis_os2.o(.text.osEventFlagsSet), (132 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osEventFlagsSet), (8 bytes).
    Removing cmsis_os2.o(.text.osEventFlagsClear), (114 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osEventFlagsClear), (8 bytes).
    Removing cmsis_os2.o(.text.osEventFlagsGet), (64 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osEventFlagsGet), (8 bytes).
    Removing cmsis_os2.o(.text.osEventFlagsWait), (156 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osEventFlagsWait), (8 bytes).
    Removing cmsis_os2.o(.text.osEventFlagsDelete), (60 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osEventFlagsDelete), (8 bytes).
    Removing cmsis_os2.o(.text.osMutexNew), (150 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMutexNew), (8 bytes).
    Removing cmsis_os2.o(.text.osMutexAcquire), (106 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMutexAcquire), (8 bytes).
    Removing cmsis_os2.o(.text.osMutexRelease), (86 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMutexRelease), (8 bytes).
    Removing cmsis_os2.o(.text.osMutexGetOwner), (64 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMutexGetOwner), (8 bytes).
    Removing cmsis_os2.o(.text.osMutexDelete), (62 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMutexDelete), (8 bytes).
    Removing cmsis_os2.o(.text.osSemaphoreNew), (224 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osSemaphoreNew), (8 bytes).
    Removing cmsis_os2.o(.text.osSemaphoreAcquire), (138 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osSemaphoreAcquire), (8 bytes).
    Removing cmsis_os2.o(.text.osSemaphoreRelease), (128 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osSemaphoreRelease), (8 bytes).
    Removing cmsis_os2.o(.text.osSemaphoreGetCount), (62 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osSemaphoreGetCount), (8 bytes).
    Removing cmsis_os2.o(.text.osSemaphoreDelete), (60 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osSemaphoreDelete), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueNew), (180 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueNew), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueuePut), (166 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueuePut), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueGet), (162 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueGet), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueGetCapacity), (10 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetCapacity), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueGetMsgSize), (10 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetMsgSize), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueGetCount), (62 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetCount), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueGetSpace), (84 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetSpace), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueReset), (64 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueReset), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueDelete), (60 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueDelete), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolNew), (310 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolNew), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolGetName), (62 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetName), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolAlloc), (228 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolAlloc), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolFree), (240 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolFree), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolGetCapacity), (24 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetCapacity), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolGetBlockSize), (24 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetBlockSize), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolGetCount), (76 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetCount), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolGetSpace), (76 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetSpace), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolDelete), (118 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolDelete), (8 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.vApplicationStackOverflowHook), (8 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.vApplicationGetIdleTaskMemory), (8 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.vApplicationGetTimerTaskMemory), (8 bytes).
    Removing cmsis_os2.o(.bss.KernelState), (4 bytes).
    Removing os_systick.o(.text), (0 bytes).
    Removing os_systick.o(.text.OS_Tick_Setup), (72 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Setup), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_Enable), (50 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Enable), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_Disable), (52 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Disable), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_AcknowledgeIRQ), (12 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetIRQn), (6 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetClock), (12 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetClock), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetInterval), (14 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetCount), (16 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetCount), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetOverflow), (16 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow), (8 bytes).
    Removing os_systick.o(.bss.PendST), (1 bytes).
    Removing system_stm32f10x.o(.text), (0 bytes).
    Removing system_stm32f10x.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing system_stm32f10x.o(.text.SystemCoreClockUpdate), (110 bytes).
    Removing system_stm32f10x.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing system_stm32f10x.o(.rodata.AHBPrescTable), (16 bytes).
    Removing freertos_evr.o(.text), (0 bytes).
    Removing event_groups.o(.text), (0 bytes).
    Removing event_groups.o(.text.xEventGroupCreateStatic), (24 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupCreateStatic), (8 bytes).
    Removing event_groups.o(.text.xEventGroupCreate), (28 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupCreate), (8 bytes).
    Removing event_groups.o(.text.xEventGroupSync), (268 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupSync), (8 bytes).
    Removing event_groups.o(.text.xEventGroupSetBits), (114 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupSetBits), (8 bytes).
    Removing event_groups.o(.text.xEventGroupWaitBits), (200 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupWaitBits), (8 bytes).
    Removing event_groups.o(.text.xEventGroupClearBits), (26 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupClearBits), (8 bytes).
    Removing event_groups.o(.text.xEventGroupClearBitsFromISR), (18 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupClearBitsFromISR), (8 bytes).
    Removing event_groups.o(.text.vEventGroupClearBitsCallback), (24 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupClearBitsCallback), (8 bytes).
    Removing event_groups.o(.text.xEventGroupGetBitsFromISR), (28 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupGetBitsFromISR), (8 bytes).
    Removing event_groups.o(.text.vEventGroupDelete), (46 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupDelete), (8 bytes).
    Removing event_groups.o(.text.vEventGroupSetBitsCallback), (110 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupSetBitsCallback), (8 bytes).
    Removing event_groups.o(.text.xEventGroupSetBitsFromISR), (18 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupSetBitsFromISR), (8 bytes).
    Removing event_groups.o(.text.uxEventGroupGetNumber), (10 bytes).
    Removing event_groups.o(.ARM.exidx.text.uxEventGroupGetNumber), (8 bytes).
    Removing event_groups.o(.text.vEventGroupSetNumber), (4 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupSetNumber), (8 bytes).
    Removing list.o(.text), (0 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialise), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialiseItem), (8 bytes).
    Removing list.o(.text.vListInsertEnd), (28 bytes).
    Removing list.o(.ARM.exidx.text.vListInsertEnd), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInsert), (8 bytes).
    Removing list.o(.ARM.exidx.text.uxListRemove), (8 bytes).
    Removing port_1.o(.text), (0 bytes).
    Removing port_1.o(.ARM.exidx.text.pxPortInitialiseStack), (8 bytes).
    Removing port_1.o(.ARM.exidx.text.prvTaskExitError), (8 bytes).
    Removing port_1.o(.ARM.exidx.text.SVC_Handler), (8 bytes).
    Removing port_1.o(.ARM.exidx.text.xPortStartScheduler), (8 bytes).
    Removing port_1.o(.ARM.exidx.text.vPortSetupTimerInterrupt), (8 bytes).
    Removing port_1.o(.ARM.exidx.text.prvPortStartFirstTask), (8 bytes).
    Removing port_1.o(.text.vPortEndScheduler), (2 bytes).
    Removing port_1.o(.ARM.exidx.text.vPortEndScheduler), (8 bytes).
    Removing port_1.o(.ARM.exidx.text.vPortEnterCritical), (8 bytes).
    Removing port_1.o(.ARM.exidx.text.vPortExitCritical), (8 bytes).
    Removing port_1.o(.ARM.exidx.text.PendSV_Handler), (8 bytes).
    Removing port_1.o(.ARM.exidx.text.xPortSysTickHandler), (8 bytes).
    Removing heap_4.o(.text), (0 bytes).
    Removing heap_4.o(.ARM.exidx.text.pvPortMalloc), (8 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortFree), (8 bytes).
    Removing heap_4.o(.text.xPortGetFreeHeapSize), (12 bytes).
    Removing heap_4.o(.ARM.exidx.text.xPortGetFreeHeapSize), (8 bytes).
    Removing heap_4.o(.text.xPortGetMinimumEverFreeHeapSize), (12 bytes).
    Removing heap_4.o(.ARM.exidx.text.xPortGetMinimumEverFreeHeapSize), (8 bytes).
    Removing heap_4.o(.text.vPortInitialiseBlocks), (2 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortInitialiseBlocks), (8 bytes).
    Removing heap_4.o(.text.pvPortCalloc), (36 bytes).
    Removing heap_4.o(.ARM.exidx.text.pvPortCalloc), (8 bytes).
    Removing heap_4.o(.text.vPortGetHeapStats), (158 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortGetHeapStats), (8 bytes).
    Removing queue.o(.text), (0 bytes).
    Removing queue.o(.text.xQueueGenericReset), (126 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericReset), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericCreateStatic), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericCreate), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateMutex), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateMutexStatic), (8 bytes).
    Removing queue.o(.text.xQueueGetMutexHolder), (26 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGetMutexHolder), (8 bytes).
    Removing queue.o(.text.xQueueGetMutexHolderFromISR), (12 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGetMutexHolderFromISR), (8 bytes).
    Removing queue.o(.text.xQueueGiveMutexRecursive), (46 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveMutexRecursive), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSend), (8 bytes).
    Removing queue.o(.text.xQueueTakeMutexRecursive), (40 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueTakeMutexRecursive), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSemaphoreTake), (8 bytes).
    Removing queue.o(.text.xQueueCreateCountingSemaphoreStatic), (118 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphoreStatic), (8 bytes).
    Removing queue.o(.text.xQueueCreateCountingSemaphore), (36 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvUnlockQueue), (8 bytes).
    Removing queue.o(.text.xQueueGenericSendFromISR), (260 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSendFromISR), (8 bytes).
    Removing queue.o(.text.xQueueGiveFromISR), (144 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceive), (8 bytes).
    Removing queue.o(.text.xQueuePeek), (332 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeek), (8 bytes).
    Removing queue.o(.text.xQueueReceiveFromISR), (148 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceiveFromISR), (8 bytes).
    Removing queue.o(.text.xQueuePeekFromISR), (76 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeekFromISR), (8 bytes).
    Removing queue.o(.text.uxQueueMessagesWaiting), (18 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaiting), (8 bytes).
    Removing queue.o(.text.uxQueueSpacesAvailable), (22 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueSpacesAvailable), (8 bytes).
    Removing queue.o(.text.uxQueueMessagesWaitingFromISR), (4 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueDelete), (8 bytes).
    Removing queue.o(.text.uxQueueGetQueueNumber), (4 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueGetQueueNumber), (8 bytes).
    Removing queue.o(.text.vQueueSetQueueNumber), (4 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueSetQueueNumber), (8 bytes).
    Removing queue.o(.text.ucQueueGetQueueType), (6 bytes).
    Removing queue.o(.ARM.exidx.text.ucQueueGetQueueType), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueEmptyFromISR), (10 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueFullFromISR), (14 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueWaitForMessageRestricted), (8 bytes).
    Removing tasks_1.o(.text), (0 bytes).
    Removing tasks_1.o(.ARM.exidx.text.xTaskCreateStatic), (8 bytes).
    Removing tasks_1.o(.ARM.exidx.text.prvAddNewTaskToReadyList), (8 bytes).
    Removing tasks_1.o(.ARM.exidx.text.xTaskCreate), (8 bytes).
    Removing tasks_1.o(.text.vTaskDelete), (226 bytes).
    Removing tasks_1.o(.ARM.exidx.text.vTaskDelete), (8 bytes).
    Removing tasks_1.o(.text.xTaskDelayUntil), (192 bytes).
    Removing tasks_1.o(.ARM.exidx.text.xTaskDelayUntil), (8 bytes).
    Removing tasks_1.o(.ARM.exidx.text.vTaskSuspendAll), (8 bytes).
    Removing tasks_1.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList), (8 bytes).
    Removing tasks_1.o(.ARM.exidx.text.xTaskResumeAll), (8 bytes).
    Removing tasks_1.o(.ARM.exidx.text.vTaskDelay), (8 bytes).
    Removing tasks_1.o(.text.eTaskGetState), (136 bytes).
    Removing tasks_1.o(.ARM.exidx.text.eTaskGetState), (8 bytes).
    Removing tasks_1.o(.text.uxTaskPriorityGet), (30 bytes).
    Removing tasks_1.o(.ARM.exidx.text.uxTaskPriorityGet), (8 bytes).
    Removing tasks_1.o(.text.uxTaskPriorityGetFromISR), (40 bytes).
    Removing tasks_1.o(.ARM.exidx.text.uxTaskPriorityGetFromISR), (8 bytes).
    Removing tasks_1.o(.text.vTaskPrioritySet), (222 bytes).
    Removing tasks_1.o(.ARM.exidx.text.vTaskPrioritySet), (8 bytes).
    Removing tasks_1.o(.text.vTaskSuspend), (356 bytes).
    Removing tasks_1.o(.ARM.exidx.text.vTaskSuspend), (8 bytes).
    Removing tasks_1.o(.ARM.exidx.text.vTaskSwitchContext), (8 bytes).
    Removing tasks_1.o(.text.vTaskResume), (158 bytes).
    Removing tasks_1.o(.ARM.exidx.text.vTaskResume), (8 bytes).
    Removing tasks_1.o(.text.xTaskResumeFromISR), (196 bytes).
    Removing tasks_1.o(.ARM.exidx.text.xTaskResumeFromISR), (8 bytes).
    Removing tasks_1.o(.ARM.exidx.text.vTaskStartScheduler), (8 bytes).
    Removing tasks_1.o(.ARM.exidx.text.prvIdleTask), (8 bytes).
    Removing tasks_1.o(.text.vTaskEndScheduler), (32 bytes).
    Removing tasks_1.o(.ARM.exidx.text.vTaskEndScheduler), (8 bytes).
    Removing tasks_1.o(.ARM.exidx.text.xTaskIncrementTick), (8 bytes).
    Removing tasks_1.o(.ARM.exidx.text.xTaskGetTickCount), (8 bytes).
    Removing tasks_1.o(.text.xTaskGetTickCountFromISR), (12 bytes).
    Removing tasks_1.o(.ARM.exidx.text.xTaskGetTickCountFromISR), (8 bytes).
    Removing tasks_1.o(.text.uxTaskGetNumberOfTasks), (12 bytes).
    Removing tasks_1.o(.ARM.exidx.text.uxTaskGetNumberOfTasks), (8 bytes).
    Removing tasks_1.o(.text.pcTaskGetName), (20 bytes).
    Removing tasks_1.o(.ARM.exidx.text.pcTaskGetName), (8 bytes).
    Removing tasks_1.o(.text.uxTaskGetSystemState), (1178 bytes).
    Removing tasks_1.o(.ARM.exidx.text.uxTaskGetSystemState), (8 bytes).
    Removing tasks_1.o(.text.xTaskCatchUpTicks), (48 bytes).
    Removing tasks_1.o(.ARM.exidx.text.xTaskCatchUpTicks), (8 bytes).
    Removing tasks_1.o(.ARM.exidx.text.vTaskPlaceOnEventList), (8 bytes).
    Removing tasks_1.o(.text.vTaskPlaceOnUnorderedEventList), (88 bytes).
    Removing tasks_1.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList), (8 bytes).
    Removing tasks_1.o(.ARM.exidx.text.vTaskPlaceOnEventListRestricted), (8 bytes).
    Removing tasks_1.o(.ARM.exidx.text.xTaskRemoveFromEventList), (8 bytes).
    Removing tasks_1.o(.text.vTaskRemoveFromUnorderedEventList), (180 bytes).
    Removing tasks_1.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList), (8 bytes).
    Removing tasks_1.o(.text.vTaskSetTimeOutState), (40 bytes).
    Removing tasks_1.o(.ARM.exidx.text.vTaskSetTimeOutState), (8 bytes).
    Removing tasks_1.o(.ARM.exidx.text.vTaskInternalSetTimeOutState), (8 bytes).
    Removing tasks_1.o(.ARM.exidx.text.xTaskCheckForTimeOut), (8 bytes).
    Removing tasks_1.o(.ARM.exidx.text.vTaskMissedYield), (8 bytes).
    Removing tasks_1.o(.text.uxTaskGetTaskNumber), (10 bytes).
    Removing tasks_1.o(.ARM.exidx.text.uxTaskGetTaskNumber), (8 bytes).
    Removing tasks_1.o(.text.vTaskSetTaskNumber), (8 bytes).
    Removing tasks_1.o(.ARM.exidx.text.vTaskSetTaskNumber), (8 bytes).
    Removing tasks_1.o(.text.vTaskGetInfo), (264 bytes).
    Removing tasks_1.o(.ARM.exidx.text.vTaskGetInfo), (8 bytes).
    Removing tasks_1.o(.text.uxTaskGetStackHighWaterMark), (44 bytes).
    Removing tasks_1.o(.ARM.exidx.text.uxTaskGetStackHighWaterMark), (8 bytes).
    Removing tasks_1.o(.text.xTaskGetCurrentTaskHandle), (12 bytes).
    Removing tasks_1.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle), (8 bytes).
    Removing tasks_1.o(.ARM.exidx.text.xTaskGetSchedulerState), (8 bytes).
    Removing tasks_1.o(.ARM.exidx.text.xTaskPriorityInherit), (8 bytes).
    Removing tasks_1.o(.ARM.exidx.text.xTaskPriorityDisinherit), (8 bytes).
    Removing tasks_1.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout), (8 bytes).
    Removing tasks_1.o(.text.uxTaskResetEventItemValue), (26 bytes).
    Removing tasks_1.o(.ARM.exidx.text.uxTaskResetEventItemValue), (8 bytes).
    Removing tasks_1.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount), (8 bytes).
    Removing tasks_1.o(.text.ulTaskGenericNotifyTake), (128 bytes).
    Removing tasks_1.o(.ARM.exidx.text.ulTaskGenericNotifyTake), (8 bytes).
    Removing tasks_1.o(.text.xTaskGenericNotifyWait), (160 bytes).
    Removing tasks_1.o(.ARM.exidx.text.xTaskGenericNotifyWait), (8 bytes).
    Removing tasks_1.o(.text.xTaskGenericNotify), (248 bytes).
    Removing tasks_1.o(.ARM.exidx.text.xTaskGenericNotify), (8 bytes).
    Removing tasks_1.o(.text.xTaskGenericNotifyFromISR), (300 bytes).
    Removing tasks_1.o(.ARM.exidx.text.xTaskGenericNotifyFromISR), (8 bytes).
    Removing tasks_1.o(.text.vTaskGenericNotifyGiveFromISR), (240 bytes).
    Removing tasks_1.o(.ARM.exidx.text.vTaskGenericNotifyGiveFromISR), (8 bytes).
    Removing tasks_1.o(.text.xTaskGenericNotifyStateClear), (46 bytes).
    Removing tasks_1.o(.ARM.exidx.text.xTaskGenericNotifyStateClear), (8 bytes).
    Removing tasks_1.o(.text.ulTaskGenericNotifyValueClear), (44 bytes).
    Removing tasks_1.o(.ARM.exidx.text.ulTaskGenericNotifyValueClear), (8 bytes).
    Removing timers.o(.text), (0 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerCreateTimerTask), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvTimerTask), (8 bytes).
    Removing timers.o(.text.xTimerCreate), (56 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerCreate), (8 bytes).
    Removing timers.o(.text.prvInitialiseNewTimer), (166 bytes).
    Removing timers.o(.ARM.exidx.text.prvInitialiseNewTimer), (8 bytes).
    Removing timers.o(.text.xTimerCreateStatic), (32 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerCreateStatic), (8 bytes).
    Removing timers.o(.text.xTimerGenericCommand), (86 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGenericCommand), (8 bytes).
    Removing timers.o(.text.xTimerGetTimerDaemonTaskHandle), (12 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetTimerDaemonTaskHandle), (8 bytes).
    Removing timers.o(.text.xTimerGetPeriod), (4 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetPeriod), (8 bytes).
    Removing timers.o(.text.vTimerSetReloadMode), (40 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetReloadMode), (8 bytes).
    Removing timers.o(.text.xTimerGetReloadMode), (24 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetReloadMode), (8 bytes).
    Removing timers.o(.text.uxTimerGetReloadMode), (24 bytes).
    Removing timers.o(.ARM.exidx.text.uxTimerGetReloadMode), (8 bytes).
    Removing timers.o(.text.xTimerGetExpiryTime), (4 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetExpiryTime), (8 bytes).
    Removing timers.o(.text.pcTimerGetName), (4 bytes).
    Removing timers.o(.ARM.exidx.text.pcTimerGetName), (8 bytes).
    Removing timers.o(.text.xTimerIsTimerActive), (24 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerIsTimerActive), (8 bytes).
    Removing timers.o(.text.pvTimerGetTimerID), (18 bytes).
    Removing timers.o(.ARM.exidx.text.pvTimerGetTimerID), (8 bytes).
    Removing timers.o(.text.vTimerSetTimerID), (20 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetTimerID), (8 bytes).
    Removing timers.o(.text.xTimerPendFunctionCallFromISR), (42 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerPendFunctionCallFromISR), (8 bytes).
    Removing timers.o(.text.xTimerPendFunctionCall), (42 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerPendFunctionCall), (8 bytes).
    Removing timers.o(.text.uxTimerGetTimerNumber), (4 bytes).
    Removing timers.o(.ARM.exidx.text.uxTimerGetTimerNumber), (8 bytes).
    Removing timers.o(.text.vTimerSetTimerNumber), (4 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetTimerNumber), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvProcessExpiredTimer), (8 bytes).

529 unused section(s) (total 19445 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_copy.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/scatter.s                  0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch_hlt.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_v6.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  aeabi_memset4.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  strcmpv7m.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_w.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr_w.o ABSOLUTE
    ../clib/misc.s                           0x00000000   Number         0  printf_stubs.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __2sprintf.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  noretval__2sprintf.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_str.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_dec.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_flags.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_ss.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_flags_ss.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_wp.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_flags_wp.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_ss_wp.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_flags_ss_wp.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_intcommon.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_char_common.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _sputc.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_char.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_nopercent.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_s.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_d.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_u.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_percent.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_percent_end.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../clib/string.c                         0x00000000   Number         0  strcpy.o ABSOLUTE
    ../clib/string.c                         0x00000000   Number         0  strlen.o ABSOLUTE
    ../fplib/fpinit.s                        0x00000000   Number         0  fpinit.o ABSOLUTE
    ../fplib/fpinit_empty.s                  0x00000000   Number         0  fpinit_empty.o ABSOLUTE
    RTE/Device/STM32F103RB/startup_stm32f10x_md.s 0x00000000   Number         0  startup_stm32f10x_md.o ABSOLUTE
    cli.c                                    0x00000000   Number         0  cli.o ABSOLUTE
    clib_arm.c                               0x00000000   Number         0  clib_arm.o ABSOLUTE
    cmsis_os1.c                              0x00000000   Number         0  cmsis_os1.o ABSOLUTE
    cmsis_os2.c                              0x00000000   Number         0  cmsis_os2.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    dynamicMove.c                            0x00000000   Number         0  dynamicmove.o ABSOLUTE
    event_groups.c                           0x00000000   Number         0  event_groups.o ABSOLUTE
    freertos_evr.c                           0x00000000   Number         0  freertos_evr.o ABSOLUTE
    heap_4.c                                 0x00000000   Number         0  heap_4.o ABSOLUTE
    list.c                                   0x00000000   Number         0  list.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    myFunctions.c                            0x00000000   Number         0  myfunctions.o ABSOLUTE
    os_systick.c                             0x00000000   Number         0  os_systick.o ABSOLUTE
    port.c                                   0x00000000   Number         0  port_1.o ABSOLUTE
    queue.c                                  0x00000000   Number         0  queue.o ABSOLUTE
    staticStructure.c                        0x00000000   Number         0  staticstructure.o ABSOLUTE
    system_stm32f10x.c                       0x00000000   Number         0  system_stm32f10x.o ABSOLUTE
    tasking.c                                0x00000000   Number         0  tasking.o ABSOLUTE
    tasks.c                                  0x00000000   Number         0  tasks_1.o ABSOLUTE
    timer.c                                  0x00000000   Number         0  timer.o ABSOLUTE
    timers.c                                 0x00000000   Number         0  timers.o ABSOLUTE
    usart.c                                  0x00000000   Number         0  usart.o ABSOLUTE
    RESET                                    0x08000000   Section      236  startup_stm32f10x_md.o(RESET)
    !!!main                                  0x080000ec   Section        8  __main.o(!!!main)
    !!!scatter                               0x080000f4   Section       52  __scatter.o(!!!scatter)
    !!handler_copy                           0x08000128   Section       26  __scatter_copy.o(!!handler_copy)
    !!handler_zi                             0x08000144   Section       28  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$_printf_percent$$00000000  0x08000160   Section        0  _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000)
    .ARM.Collect$$_printf_percent$$00000009  0x08000160   Section        6  _printf_d.o(.ARM.Collect$$_printf_percent$$00000009)
    .ARM.Collect$$_printf_percent$$0000000A  0x08000166   Section        6  _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A)
    .ARM.Collect$$_printf_percent$$00000014  0x0800016c   Section        6  _printf_s.o(.ARM.Collect$$_printf_percent$$00000014)
    .ARM.Collect$$_printf_percent$$00000017  0x08000172   Section        4  _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017)
    .ARM.Collect$$libinit$$00000000          0x08000176   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000002          0x08000178   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    .ARM.Collect$$libinit$$00000004          0x08000178   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$00000006          0x08000178   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000006)
    .ARM.Collect$$libinit$$0000000C          0x08000178   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x08000178   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$00000010          0x08000178   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000010)
    .ARM.Collect$$libinit$$00000013          0x08000178   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x08000178   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x08000178   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x08000178   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x08000178   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x08000178   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x08000178   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x08000178   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x08000178   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x08000178   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$00000027          0x08000178   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000027)
    .ARM.Collect$$libinit$$0000002E          0x08000178   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x08000178   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x08000178   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000034          0x08000178   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000034)
    .ARM.Collect$$libinit$$00000035          0x08000178   Section        2  libinit2.o(.ARM.Collect$$libinit$$00000035)
    .ARM.Collect$$libshutdown$$00000000      0x0800017a   Section        2  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x0800017c   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000004      0x0800017c   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000007      0x0800017c   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    .ARM.Collect$$libshutdown$$0000000A      0x0800017c   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    .ARM.Collect$$libshutdown$$0000000C      0x0800017c   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000F      0x0800017c   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000010      0x0800017c   Section        2  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    .ARM.Collect$$rtentry$$00000000          0x0800017e   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x0800017e   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x0800017e   Section        6  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000008          0x08000184   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$00000008)
    .ARM.Collect$$rtentry$$0000000A          0x0800018c   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x08000190   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x08000190   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x08000198   Section        2  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x0800019a   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x0800019a   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x0800019e   Section        6  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    .text                                    0x080001a4   Section       64  startup_stm32f10x_md.o(.text)
    .text                                    0x080001e4   Section        0  noretval__2sprintf.o(.text)
    .text                                    0x0800020c   Section        0  _printf_str.o(.text)
    .text                                    0x08000260   Section        0  _printf_dec.o(.text)
    .text                                    0x080002d8   Section        0  __printf_ss.o(.text)
    .text                                    0x08000390   Section        0  strcpy.o(.text)
    .text                                    0x080003d8   Section        0  strlen.o(.text)
    .text                                    0x08000416   Section      138  rt_memcpy_v6.o(.text)
    .text                                    0x080004a0   Section       16  aeabi_memset4.o(.text)
    .text                                    0x080004b0   Section       68  rt_memclr.o(.text)
    .text                                    0x080004f4   Section      128  strcmpv7m.o(.text)
    .text                                    0x08000574   Section        0  heapauxi.o(.text)
    .text                                    0x0800057a   Section        0  _printf_intcommon.o(.text)
    _printf_input_char                       0x0800062d   Thumb Code    10  _printf_char_common.o(.text)
    .text                                    0x0800062c   Section        0  _printf_char_common.o(.text)
    .text                                    0x0800065c   Section        0  _sputc.o(.text)
    .text                                    0x08000666   Section        0  _printf_char.o(.text)
    .text                                    0x08000692   Section      100  rt_memcpy_w.o(.text)
    .text                                    0x080006f6   Section       78  rt_memclr_w.o(.text)
    .text                                    0x08000744   Section       74  sys_stackheap_outer.o(.text)
    .text                                    0x0800078e   Section        0  exit.o(.text)
    .text                                    0x080007a0   Section        8  libspace.o(.text)
    .text                                    0x080007a8   Section        0  sys_exit.o(.text)
    .text                                    0x080007b4   Section        2  use_no_semi.o(.text)
    .text                                    0x080007b6   Section        0  indicate_semi.o(.text)
    [Anonymous Symbol]                       0x080007b8   Section        0  cli.o(.text.CLI_Transmit)
    [Anonymous Symbol]                       0x080007d4   Section        0  timer.o(.text.EXTI15_10_IRQHandler)
    [Anonymous Symbol]                       0x08000880   Section        0  myfunctions.o(.text.GPIO_ConfigurePin)
    [Anonymous Symbol]                       0x080008b0   Section        0  port_1.o(.text.PendSV_Handler)
    pxCurrentTCBConst                        0x080008f0   Number         0  port_1.o(.text.PendSV_Handler)
    [Anonymous Symbol]                       0x080008f4   Section        0  myfunctions.o(.text.RCC_EnableAFIOClock)
    [Anonymous Symbol]                       0x08000908   Section        0  myfunctions.o(.text.RCC_EnableTimerClock)
    [Anonymous Symbol]                       0x08000964   Section        0  myfunctions.o(.text.RCC_EnableUSARTClock)
    [Anonymous Symbol]                       0x080009ac   Section        0  myfunctions.o(.text.RCC_SetGPIOClock)
    [Anonymous Symbol]                       0x080009f0   Section        0  port_1.o(.text.SVC_Handler)
    pxCurrentTCBConst2                       0x08000a10   Number         0  port_1.o(.text.SVC_Handler)
    [Anonymous Symbol]                       0x08000a14   Section        0  cmsis_os2.o(.text.SysTick_Handler)
    [Anonymous Symbol]                       0x08000a34   Section        0  system_stm32f10x.o(.text.SystemInit)
    [Anonymous Symbol]                       0x08000b44   Section        0  timer.o(.text.TIM3_IRQHandler)
    [Anonymous Symbol]                       0x08000b6c   Section        0  tasking.o(.text.TaskHandleUserInput)
    [Anonymous Symbol]                       0x08000c34   Section        0  tasking.o(.text.TaskProcessCommand)
    [Anonymous Symbol]                       0x08000c68   Section        0  usart.o(.text.USART2_IRQHandler)
    __tagsym$$used.1                         0x08000ca4   Number         0  clib_arm.o(.text._mutex_acquire)
    [Anonymous Symbol]                       0x08000ca4   Section        0  clib_arm.o(.text._mutex_acquire)
    __tagsym$$used.3                         0x08000cc8   Number         0  clib_arm.o(.text._mutex_free)
    [Anonymous Symbol]                       0x08000cc8   Section        0  clib_arm.o(.text._mutex_free)
    __tagsym$$used.0                         0x08000cf8   Number         0  clib_arm.o(.text._mutex_initialize)
    [Anonymous Symbol]                       0x08000cf8   Section        0  clib_arm.o(.text._mutex_initialize)
    __tagsym$$used.2                         0x08000d54   Number         0  clib_arm.o(.text._mutex_release)
    [Anonymous Symbol]                       0x08000d54   Section        0  clib_arm.o(.text._mutex_release)
    [Anonymous Symbol]                       0x08000d7c   Section        0  clib_arm.o(.text._platform_post_stackheap_init)
    [Anonymous Symbol]                       0x08000d80   Section        0  myfunctions.o(.text.characterToInt)
    [Anonymous Symbol]                       0x08000dc8   Section        0  cli.o(.text.clearScreenFromRow)
    [Anonymous Symbol]                       0x08000e5c   Section        0  myfunctions.o(.text.clockInit)
    [Anonymous Symbol]                       0x08000ef4   Section        0  cli.o(.text.convertToString)
    [Anonymous Symbol]                       0x08000f18   Section        0  myfunctions.o(.text.delay)
    [Anonymous Symbol]                       0x08000f44   Section        0  cli.o(.text.display)
    [Anonymous Symbol]                       0x08000f98   Section        0  staticstructure.o(.text.displayBox)
    [Anonymous Symbol]                       0x080010c8   Section        0  staticstructure.o(.text.displaySetup)
    [Anonymous Symbol]                       0x0800120c   Section        0  tasking.o(.text.draw)
    [Anonymous Symbol]                       0x08001298   Section        0  staticstructure.o(.text.drawFifth)
    [Anonymous Symbol]                       0x08001390   Section        0  staticstructure.o(.text.drawFirst)
    [Anonymous Symbol]                       0x08001488   Section        0  staticstructure.o(.text.drawForth)
    [Anonymous Symbol]                       0x08001580   Section        0  staticstructure.o(.text.drawSecond)
    [Anonymous Symbol]                       0x08001678   Section        0  staticstructure.o(.text.drawThird)
    [Anonymous Symbol]                       0x08001770   Section        0  tasking.o(.text.floorStatus)
    [Anonymous Symbol]                       0x080017c0   Section        0  staticstructure.o(.text.instructions)
    [Anonymous Symbol]                       0x08001910   Section        0  timer.o(.text.interruptPC13setup)
    [Anonymous Symbol]                       0x08001968   Section        0  main.o(.text.main)
    [Anonymous Symbol]                       0x08001a6c   Section        0  cli.o(.text.message)
    [Anonymous Symbol]                       0x08001a90   Section        0  tasking.o(.text.moveElevatorToFloor)
    [Anonymous Symbol]                       0x08001bfc   Section        0  myfunctions.o(.text.newMemory)
    [Anonymous Symbol]                       0x08001c1c   Section        0  tasking.o(.text.processCommand)
    prvAddCurrentTaskToDelayedList           0x08001d55   Thumb Code   158  tasks_1.o(.text.prvAddCurrentTaskToDelayedList)
    [Anonymous Symbol]                       0x08001d54   Section        0  tasks_1.o(.text.prvAddCurrentTaskToDelayedList)
    prvAddNewTaskToReadyList                 0x08001df5   Thumb Code   306  tasks_1.o(.text.prvAddNewTaskToReadyList)
    [Anonymous Symbol]                       0x08001df4   Section        0  tasks_1.o(.text.prvAddNewTaskToReadyList)
    prvIdleTask                              0x08001f29   Thumb Code   130  tasks_1.o(.text.prvIdleTask)
    [Anonymous Symbol]                       0x08001f28   Section        0  tasks_1.o(.text.prvIdleTask)
    prvPortStartFirstTask                    0x08001fad   Thumb Code    32  port_1.o(.text.prvPortStartFirstTask)
    [Anonymous Symbol]                       0x08001fac   Section        0  port_1.o(.text.prvPortStartFirstTask)
    prvProcessExpiredTimer                   0x08001fcd   Thumb Code   130  timers.o(.text.prvProcessExpiredTimer)
    [Anonymous Symbol]                       0x08001fcc   Section        0  timers.o(.text.prvProcessExpiredTimer)
    prvTaskExitError                         0x08002051   Thumb Code    34  port_1.o(.text.prvTaskExitError)
    [Anonymous Symbol]                       0x08002050   Section        0  port_1.o(.text.prvTaskExitError)
    prvTimerTask                             0x08002075   Thumb Code   562  timers.o(.text.prvTimerTask)
    [Anonymous Symbol]                       0x08002074   Section        0  timers.o(.text.prvTimerTask)
    prvUnlockQueue                           0x080022a9   Thumb Code   116  queue.o(.text.prvUnlockQueue)
    [Anonymous Symbol]                       0x080022a8   Section        0  queue.o(.text.prvUnlockQueue)
    [Anonymous Symbol]                       0x0800231c   Section        0  heap_4.o(.text.pvPortMalloc)
    [Anonymous Symbol]                       0x08002490   Section        0  tasks_1.o(.text.pvTaskIncrementMutexHeldCount)
    [Anonymous Symbol]                       0x080024a8   Section        0  port_1.o(.text.pxPortInitialiseStack)
    [Anonymous Symbol]                       0x080024c8   Section        0  cli.o(.text.sendPromptArrows)
    [Anonymous Symbol]                       0x08002504   Section        0  usart.o(.text.sendbyte)
    [Anonymous Symbol]                       0x08002520   Section        0  usart.o(.text.serial_close)
    [Anonymous Symbol]                       0x08002540   Section        0  usart.o(.text.serial_open)
    [Anonymous Symbol]                       0x080025c4   Section        0  cli.o(.text.setCursorPosition)
    [Anonymous Symbol]                       0x080025fc   Section        0  staticstructure.o(.text.setTextColor)
    [Anonymous Symbol]                       0x08002624   Section        0  tasking.o(.text.status)
    [Anonymous Symbol]                       0x08002674   Section        0  tasking.o(.text.timeElapsed)
    [Anonymous Symbol]                       0x080026d0   Section        0  timer.o(.text.updateTimer)
    [Anonymous Symbol]                       0x0800270c   Section        0  list.o(.text.uxListRemove)
    [Anonymous Symbol]                       0x08002730   Section        0  cmsis_os2.o(.text.vApplicationGetIdleTaskMemory)
    [Anonymous Symbol]                       0x0800274c   Section        0  cmsis_os2.o(.text.vApplicationGetTimerTaskMemory)
    [Anonymous Symbol]                       0x08002768   Section        0  cmsis_os2.o(.text.vApplicationStackOverflowHook)
    [Anonymous Symbol]                       0x0800276c   Section        0  list.o(.text.vListInitialise)
    [Anonymous Symbol]                       0x08002784   Section        0  list.o(.text.vListInitialiseItem)
    [Anonymous Symbol]                       0x0800278c   Section        0  list.o(.text.vListInsert)
    [Anonymous Symbol]                       0x080027c8   Section        0  port_1.o(.text.vPortEnterCritical)
    [Anonymous Symbol]                       0x080027e8   Section        0  port_1.o(.text.vPortExitCritical)
    [Anonymous Symbol]                       0x08002804   Section        0  heap_4.o(.text.vPortFree)
    [Anonymous Symbol]                       0x080028a4   Section        0  port_1.o(.text.vPortSetupTimerInterrupt)
    [Anonymous Symbol]                       0x080028d8   Section        0  queue.o(.text.vQueueDelete)
    [Anonymous Symbol]                       0x080028e8   Section        0  queue.o(.text.vQueueWaitForMessageRestricted)
    [Anonymous Symbol]                       0x08002930   Section        0  tasks_1.o(.text.vTaskDelay)
    [Anonymous Symbol]                       0x080029c0   Section        0  tasks_1.o(.text.vTaskInternalSetTimeOutState)
    [Anonymous Symbol]                       0x080029dc   Section        0  tasks_1.o(.text.vTaskMissedYield)
    [Anonymous Symbol]                       0x080029ec   Section        0  tasks_1.o(.text.vTaskPlaceOnEventList)
    [Anonymous Symbol]                       0x08002a0c   Section        0  tasks_1.o(.text.vTaskPlaceOnEventListRestricted)
    [Anonymous Symbol]                       0x08002a68   Section        0  tasks_1.o(.text.vTaskPriorityDisinheritAfterTimeout)
    [Anonymous Symbol]                       0x08002ae8   Section        0  tasks_1.o(.text.vTaskStartScheduler)
    [Anonymous Symbol]                       0x08002b7c   Section        0  tasks_1.o(.text.vTaskSuspendAll)
    __tagsym$$used.0                         0x08002b8c   Number         0  tasks_1.o(.text.vTaskSwitchContext)
    [Anonymous Symbol]                       0x08002b8c   Section        0  tasks_1.o(.text.vTaskSwitchContext)
    [Anonymous Symbol]                       0x08002c38   Section        0  port_1.o(.text.xPortStartScheduler)
    [Anonymous Symbol]                       0x08002c8c   Section        0  port_1.o(.text.xPortSysTickHandler)
    [Anonymous Symbol]                       0x08002cbc   Section        0  queue.o(.text.xQueueCreateMutex)
    [Anonymous Symbol]                       0x08002ce4   Section        0  queue.o(.text.xQueueCreateMutexStatic)
    [Anonymous Symbol]                       0x08002d5c   Section        0  queue.o(.text.xQueueGenericCreate)
    [Anonymous Symbol]                       0x08002de4   Section        0  queue.o(.text.xQueueGenericCreateStatic)
    [Anonymous Symbol]                       0x08002e64   Section        0  queue.o(.text.xQueueGenericSend)
    [Anonymous Symbol]                       0x08003008   Section        0  queue.o(.text.xQueueReceive)
    [Anonymous Symbol]                       0x08003154   Section        0  queue.o(.text.xQueueSemaphoreTake)
    [Anonymous Symbol]                       0x080032d4   Section        0  tasks_1.o(.text.xTaskCheckForTimeOut)
    [Anonymous Symbol]                       0x0800333c   Section        0  tasks_1.o(.text.xTaskCreate)
    [Anonymous Symbol]                       0x08003410   Section        0  tasks_1.o(.text.xTaskCreateStatic)
    [Anonymous Symbol]                       0x080034b8   Section        0  tasks_1.o(.text.xTaskGetSchedulerState)
    [Anonymous Symbol]                       0x080034e0   Section        0  tasks_1.o(.text.xTaskGetTickCount)
    [Anonymous Symbol]                       0x080034ec   Section        0  tasks_1.o(.text.xTaskIncrementTick)
    [Anonymous Symbol]                       0x08003684   Section        0  tasks_1.o(.text.xTaskPriorityDisinherit)
    [Anonymous Symbol]                       0x080036f4   Section        0  tasks_1.o(.text.xTaskPriorityInherit)
    [Anonymous Symbol]                       0x0800379c   Section        0  tasks_1.o(.text.xTaskRemoveFromEventList)
    [Anonymous Symbol]                       0x08003874   Section        0  tasks_1.o(.text.xTaskResumeAll)
    [Anonymous Symbol]                       0x080039e4   Section        0  timers.o(.text.xTimerCreateTimerTask)
    [Anonymous Symbol]                       0x08003a9c   Section        0  main.o(.rodata.str1.1)
    .L.str.2                                 0x08003abb   Data          13  main.o(.rodata.str1.1)
    .L.str                                   0x08003ac8   Data           9  cli.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x08003ac8   Section        0  cli.o(.rodata.str1.1)
    .L.str.2                                 0x08003ad1   Data           4  cli.o(.rodata.str1.1)
    .L.str.4                                 0x08003ad1   Data           4  cli.o(.rodata.str1.1)
    .L.str                                   0x08003ad5   Data          31  timer.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x08003ad5   Section        0  timer.o(.rodata.str1.1)
    .L.str.8                                 0x08003af4   Data          31  tasking.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x08003af4   Section        0  tasking.o(.rodata.str1.1)
    .L.str.9                                 0x08003b13   Data          32  tasking.o(.rodata.str1.1)
    .L.str.5                                 0x08003b33   Data          31  tasking.o(.rodata.str1.1)
    .L.str.1                                 0x08003b52   Data           4  tasking.o(.rodata.str1.1)
    .L.str.17                                0x08003b56   Data          15  staticstructure.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x08003b56   Section        0  staticstructure.o(.rodata.str1.1)
    .L.str.18                                0x08003b65   Data           8  staticstructure.o(.rodata.str1.1)
    .L.str.19                                0x08003b6d   Data           9  staticstructure.o(.rodata.str1.1)
    .L.str.14                                0x08003b76   Data          67  staticstructure.o(.rodata.str1.1)
    .L.str.7                                 0x08003bb9   Data          31  staticstructure.o(.rodata.str1.1)
    .L.str.8                                 0x08003bd8   Data          31  staticstructure.o(.rodata.str1.1)
    .L.str.9                                 0x08003bf7   Data          31  staticstructure.o(.rodata.str1.1)
    .L.str.10                                0x08003c16   Data          31  staticstructure.o(.rodata.str1.1)
    .L.str.11                                0x08003c35   Data          31  staticstructure.o(.rodata.str1.1)
    .L.str.6                                 0x08003c54   Data          42  staticstructure.o(.rodata.str1.1)
    .L.str.5                                 0x08003c7e   Data          37  staticstructure.o(.rodata.str1.1)
    .L.str.3                                 0x08003ca3   Data           2  staticstructure.o(.rodata.str1.1)
    .L.str.20                                0x08003ca5   Data          72  staticstructure.o(.rodata.str1.1)
    .L.str.21                                0x08003cbd   Data          48  staticstructure.o(.rodata.str1.1)
    .L.str.1                                 0x08003ceb   Data           2  staticstructure.o(.rodata.str1.1)
    .L.str                                   0x08003ced   Data          11  staticstructure.o(.rodata.str1.1)
    .L.str.4                                 0x08003cf8   Data          39  staticstructure.o(.rodata.str1.1)
    .L.str.16                                0x08003d1f   Data          11  staticstructure.o(.rodata.str1.1)
    .L.str.2                                 0x08003d2a   Data           2  staticstructure.o(.rodata.str1.1)
    uxCriticalNesting                        0x20000010   Data           4  port_1.o(.data.uxCriticalNesting)
    [Anonymous Symbol]                       0x20000010   Section        0  port_1.o(.data.uxCriticalNesting)
    .bss                                     0x20000018   Section       96  libspace.o(.bss)
    clib_mutex_cb                            0x20000084   Data         400  clib_arm.o(.bss.clib_mutex_cb)
    [Anonymous Symbol]                       0x20000084   Section        0  clib_arm.o(.bss.clib_mutex_cb)
    clib_mutex_id                            0x20000214   Data          20  clib_arm.o(.bss.clib_mutex_id)
    [Anonymous Symbol]                       0x20000214   Section        0  clib_arm.o(.bss.clib_mutex_id)
    cmdBuffer                                0x20000228   Data         128  tasking.o(.bss.cmdBuffer)
    [Anonymous Symbol]                       0x20000228   Section        0  tasking.o(.bss.cmdBuffer)
    cmdIndex                                 0x200002a8   Data           4  tasking.o(.bss.cmdIndex)
    [Anonymous Symbol]                       0x200002a8   Section        0  tasking.o(.bss.cmdIndex)
    prvCheckForValidListAndQueue.ucStaticTimerQueueStorage 0x200002ad   Data          80  timers.o(.bss.prvCheckForValidListAndQueue.ucStaticTimerQueueStorage)
    [Anonymous Symbol]                       0x200002ad   Section        0  timers.o(.bss.prvCheckForValidListAndQueue.ucStaticTimerQueueStorage)
    prvCheckForValidListAndQueue.xStaticTimerQueue 0x20000300   Data          80  timers.o(.bss.prvCheckForValidListAndQueue.xStaticTimerQueue)
    [Anonymous Symbol]                       0x20000300   Section        0  timers.o(.bss.prvCheckForValidListAndQueue.xStaticTimerQueue)
    prvSampleTimeNow.xLastTime               0x20000350   Data           4  timers.o(.bss.prvSampleTimeNow.xLastTime)
    [Anonymous Symbol]                       0x20000350   Section        0  timers.o(.bss.prvSampleTimeNow.xLastTime)
    __tagsym$$used.1                         0x20000354   Number         0  tasks_1.o(.bss.pxCurrentTCB)
    pxCurrentTimerList                       0x20000358   Data           4  timers.o(.bss.pxCurrentTimerList)
    [Anonymous Symbol]                       0x20000358   Section        0  timers.o(.bss.pxCurrentTimerList)
    pxDelayedTaskList                        0x2000035c   Data           4  tasks_1.o(.bss.pxDelayedTaskList)
    [Anonymous Symbol]                       0x2000035c   Section        0  tasks_1.o(.bss.pxDelayedTaskList)
    pxEnd                                    0x20000360   Data           4  heap_4.o(.bss.pxEnd)
    [Anonymous Symbol]                       0x20000360   Section        0  heap_4.o(.bss.pxEnd)
    pxOverflowDelayedTaskList                0x20000364   Data           4  tasks_1.o(.bss.pxOverflowDelayedTaskList)
    [Anonymous Symbol]                       0x20000364   Section        0  tasks_1.o(.bss.pxOverflowDelayedTaskList)
    pxOverflowTimerList                      0x20000368   Data           4  timers.o(.bss.pxOverflowTimerList)
    [Anonymous Symbol]                       0x20000368   Section        0  timers.o(.bss.pxOverflowTimerList)
    pxReadyTasksLists                        0x2000036c   Data        1120  tasks_1.o(.bss.pxReadyTasksLists)
    [Anonymous Symbol]                       0x2000036c   Section        0  tasks_1.o(.bss.pxReadyTasksLists)
    ucHeap                                   0x200007d0   Data        8192  heap_4.o(.bss.ucHeap)
    [Anonymous Symbol]                       0x200007d0   Section        0  heap_4.o(.bss.ucHeap)
    uxCurrentNumberOfTasks                   0x200027d0   Data           4  tasks_1.o(.bss.uxCurrentNumberOfTasks)
    [Anonymous Symbol]                       0x200027d0   Section        0  tasks_1.o(.bss.uxCurrentNumberOfTasks)
    uxDeletedTasksWaitingCleanUp             0x200027d4   Data           4  tasks_1.o(.bss.uxDeletedTasksWaitingCleanUp)
    [Anonymous Symbol]                       0x200027d4   Section        0  tasks_1.o(.bss.uxDeletedTasksWaitingCleanUp)
    uxSchedulerSuspended                     0x200027d8   Data           4  tasks_1.o(.bss.uxSchedulerSuspended)
    [Anonymous Symbol]                       0x200027d8   Section        0  tasks_1.o(.bss.uxSchedulerSuspended)
    uxTaskNumber                             0x200027dc   Data           4  tasks_1.o(.bss.uxTaskNumber)
    [Anonymous Symbol]                       0x200027dc   Section        0  tasks_1.o(.bss.uxTaskNumber)
    uxTopReadyPriority                       0x200027e0   Data           4  tasks_1.o(.bss.uxTopReadyPriority)
    [Anonymous Symbol]                       0x200027e0   Section        0  tasks_1.o(.bss.uxTopReadyPriority)
    vApplicationGetIdleTaskMemory.Idle_Stack 0x200027e4   Data         512  cmsis_os2.o(.bss.vApplicationGetIdleTaskMemory.Idle_Stack)
    [Anonymous Symbol]                       0x200027e4   Section        0  cmsis_os2.o(.bss.vApplicationGetIdleTaskMemory.Idle_Stack)
    vApplicationGetIdleTaskMemory.Idle_TCB   0x200029e4   Data          92  cmsis_os2.o(.bss.vApplicationGetIdleTaskMemory.Idle_TCB)
    [Anonymous Symbol]                       0x200029e4   Section        0  cmsis_os2.o(.bss.vApplicationGetIdleTaskMemory.Idle_TCB)
    vApplicationGetTimerTaskMemory.Timer_Stack 0x20002a40   Data         320  cmsis_os2.o(.bss.vApplicationGetTimerTaskMemory.Timer_Stack)
    [Anonymous Symbol]                       0x20002a40   Section        0  cmsis_os2.o(.bss.vApplicationGetTimerTaskMemory.Timer_Stack)
    vApplicationGetTimerTaskMemory.Timer_TCB 0x20002b80   Data          92  cmsis_os2.o(.bss.vApplicationGetTimerTaskMemory.Timer_TCB)
    [Anonymous Symbol]                       0x20002b80   Section        0  cmsis_os2.o(.bss.vApplicationGetTimerTaskMemory.Timer_TCB)
    xActiveTimerList1                        0x20002bdc   Data          20  timers.o(.bss.xActiveTimerList1)
    [Anonymous Symbol]                       0x20002bdc   Section        0  timers.o(.bss.xActiveTimerList1)
    xActiveTimerList2                        0x20002bf0   Data          20  timers.o(.bss.xActiveTimerList2)
    [Anonymous Symbol]                       0x20002bf0   Section        0  timers.o(.bss.xActiveTimerList2)
    xDelayedTaskList1                        0x20002c08   Data          20  tasks_1.o(.bss.xDelayedTaskList1)
    [Anonymous Symbol]                       0x20002c08   Section        0  tasks_1.o(.bss.xDelayedTaskList1)
    xDelayedTaskList2                        0x20002c1c   Data          20  tasks_1.o(.bss.xDelayedTaskList2)
    [Anonymous Symbol]                       0x20002c1c   Section        0  tasks_1.o(.bss.xDelayedTaskList2)
    xFreeBytesRemaining                      0x20002c34   Data           4  heap_4.o(.bss.xFreeBytesRemaining)
    [Anonymous Symbol]                       0x20002c34   Section        0  heap_4.o(.bss.xFreeBytesRemaining)
    xIdleTaskHandle                          0x20002c38   Data           4  tasks_1.o(.bss.xIdleTaskHandle)
    [Anonymous Symbol]                       0x20002c38   Section        0  tasks_1.o(.bss.xIdleTaskHandle)
    xMinimumEverFreeBytesRemaining           0x20002c3c   Data           4  heap_4.o(.bss.xMinimumEverFreeBytesRemaining)
    [Anonymous Symbol]                       0x20002c3c   Section        0  heap_4.o(.bss.xMinimumEverFreeBytesRemaining)
    xNextTaskUnblockTime                     0x20002c40   Data           4  tasks_1.o(.bss.xNextTaskUnblockTime)
    [Anonymous Symbol]                       0x20002c40   Section        0  tasks_1.o(.bss.xNextTaskUnblockTime)
    xNumOfOverflows                          0x20002c44   Data           4  tasks_1.o(.bss.xNumOfOverflows)
    [Anonymous Symbol]                       0x20002c44   Section        0  tasks_1.o(.bss.xNumOfOverflows)
    xNumberOfSuccessfulAllocations           0x20002c48   Data           4  heap_4.o(.bss.xNumberOfSuccessfulAllocations)
    [Anonymous Symbol]                       0x20002c48   Section        0  heap_4.o(.bss.xNumberOfSuccessfulAllocations)
    xNumberOfSuccessfulFrees                 0x20002c4c   Data           4  heap_4.o(.bss.xNumberOfSuccessfulFrees)
    [Anonymous Symbol]                       0x20002c4c   Section        0  heap_4.o(.bss.xNumberOfSuccessfulFrees)
    xPendedTicks                             0x20002c50   Data           4  tasks_1.o(.bss.xPendedTicks)
    [Anonymous Symbol]                       0x20002c50   Section        0  tasks_1.o(.bss.xPendedTicks)
    xPendingReadyList                        0x20002c54   Data          20  tasks_1.o(.bss.xPendingReadyList)
    [Anonymous Symbol]                       0x20002c54   Section        0  tasks_1.o(.bss.xPendingReadyList)
    xSchedulerRunning                        0x20002c68   Data           4  tasks_1.o(.bss.xSchedulerRunning)
    [Anonymous Symbol]                       0x20002c68   Section        0  tasks_1.o(.bss.xSchedulerRunning)
    xStart                                   0x20002c6c   Data           8  heap_4.o(.bss.xStart)
    [Anonymous Symbol]                       0x20002c6c   Section        0  heap_4.o(.bss.xStart)
    xSuspendedTaskList                       0x20002c74   Data          20  tasks_1.o(.bss.xSuspendedTaskList)
    [Anonymous Symbol]                       0x20002c74   Section        0  tasks_1.o(.bss.xSuspendedTaskList)
    xTasksWaitingTermination                 0x20002c88   Data          20  tasks_1.o(.bss.xTasksWaitingTermination)
    [Anonymous Symbol]                       0x20002c88   Section        0  tasks_1.o(.bss.xTasksWaitingTermination)
    xTickCount                               0x20002c9c   Data           4  tasks_1.o(.bss.xTickCount)
    [Anonymous Symbol]                       0x20002c9c   Section        0  tasks_1.o(.bss.xTickCount)
    xTimerQueue                              0x20002ca0   Data           4  timers.o(.bss.xTimerQueue)
    [Anonymous Symbol]                       0x20002ca0   Section        0  timers.o(.bss.xTimerQueue)
    xTimerTaskHandle                         0x20002ca4   Data           4  timers.o(.bss.xTimerTaskHandle)
    [Anonymous Symbol]                       0x20002ca4   Section        0  timers.o(.bss.xTimerTaskHandle)
    xYieldPending                            0x20002ca8   Data           4  tasks_1.o(.bss.xYieldPending)
    [Anonymous Symbol]                       0x20002ca8   Section        0  tasks_1.o(.bss.xYieldPending)
    Heap_Mem                                 0x20002cb0   Data         512  startup_stm32f10x_md.o(HEAP)
    HEAP                                     0x20002cb0   Section      512  startup_stm32f10x_md.o(HEAP)
    Stack_Mem                                0x20002eb0   Data        1024  startup_stm32f10x_md.o(STACK)
    STACK                                    0x20002eb0   Section     1024  startup_stm32f10x_md.o(STACK)
    __initial_sp                             0x200032b0   Data           0  startup_stm32f10x_md.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$P$D$K$B$S$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __fp_init_empty                          0x00000000   Number         0  fpinit_empty.o ABSOLUTE
    _printf_flags                            0x00000000   Number         0  printf_stubs.o ABSOLUTE
    _printf_return_value                     0x00000000   Number         0  printf_stubs.o ABSOLUTE
    _printf_sizespec                         0x00000000   Number         0  printf_stubs.o ABSOLUTE
    _printf_widthprec                        0x00000000   Number         0  printf_stubs.o ABSOLUTE
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __arm_relocate_pie_                       - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __rt_locale                               - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_ctype                             - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _init_alloc                               - Undefined Weak Reference
    _init_user_alloc                          - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _printf_mbtowc                            - Undefined Weak Reference
    _printf_post_padding                      - Undefined Weak Reference
    _printf_pre_padding                       - Undefined Weak Reference
    _printf_truncate_signed                   - Undefined Weak Reference
    _printf_truncate_unsigned                 - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminate_alloc                          - Undefined Weak Reference
    _terminate_user_alloc                     - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    __Vectors_Size                           0x000000ec   Number         0  startup_stm32f10x_md.o ABSOLUTE
    __Vectors                                0x08000000   Data           4  startup_stm32f10x_md.o(RESET)
    __Vectors_End                            0x080000ec   Data           0  startup_stm32f10x_md.o(RESET)
    __main                                   0x080000ed   Thumb Code     8  __main.o(!!!main)
    __scatterload                            0x080000f5   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x080000f5   Thumb Code    44  __scatter.o(!!!scatter)
    __scatterload_rt2_thumb_only             0x080000f5   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_null                       0x08000103   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_copy                       0x08000129   Thumb Code    26  __scatter_copy.o(!!handler_copy)
    __scatterload_zeroinit                   0x08000145   Thumb Code    28  __scatter_zi.o(!!handler_zi)
    _printf_d                                0x08000161   Thumb Code     0  _printf_d.o(.ARM.Collect$$_printf_percent$$00000009)
    _printf_percent                          0x08000161   Thumb Code     0  _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000)
    _printf_u                                0x08000167   Thumb Code     0  _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A)
    _printf_s                                0x0800016d   Thumb Code     0  _printf_s.o(.ARM.Collect$$_printf_percent$$00000014)
    _printf_percent_end                      0x08000173   Thumb Code     0  _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017)
    __rt_lib_init                            0x08000177   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_alloca_1                   0x08000179   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_argv_1                     0x08000179   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_atexit_1                   0x08000179   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_clock_1                    0x08000179   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_cpp_1                      0x08000179   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000034)
    __rt_lib_init_exceptions_1               0x08000179   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_fp_1                       0x08000179   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    __rt_lib_init_fp_trap_1                  0x08000179   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_getenv_1                   0x08000179   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_init_heap_1                     0x08000179   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_init_lc_collate_1               0x08000179   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_ctype_1                 0x08000179   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_monetary_1              0x08000179   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_numeric_1               0x08000179   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_lc_time_1                  0x08000179   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_preinit_1                  0x08000179   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000006)
    __rt_lib_init_rand_1                     0x08000179   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000010)
    __rt_lib_init_relocate_pie_1             0x08000179   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_return                     0x08000179   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000035)
    __rt_lib_init_signal_1                   0x08000179   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_stdio_1                    0x08000179   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000027)
    __rt_lib_init_user_alloc_1               0x08000179   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_shutdown                        0x0800017b   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x0800017d   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_fp_trap_1              0x0800017d   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    __rt_lib_shutdown_heap_1                 0x0800017d   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_return                 0x0800017d   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    __rt_lib_shutdown_signal_1               0x0800017d   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    __rt_lib_shutdown_stdio_1                0x0800017d   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_user_alloc_1           0x0800017d   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_entry                               0x0800017f   Thumb Code     0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x0800017f   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x0800017f   Thumb Code     0  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_postsh_1                      0x08000185   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000008)
    __rt_entry_li                            0x0800018d   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_main                          0x08000191   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x08000191   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    __rt_exit                                0x08000199   Thumb Code     0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x0800019b   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x0800019b   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x0800019f   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    Reset_Handler                            0x080001a5   Thumb Code     8  startup_stm32f10x_md.o(.text)
    NMI_Handler                              0x080001ad   Thumb Code     2  startup_stm32f10x_md.o(.text)
    HardFault_Handler                        0x080001af   Thumb Code     2  startup_stm32f10x_md.o(.text)
    MemManage_Handler                        0x080001b1   Thumb Code     2  startup_stm32f10x_md.o(.text)
    BusFault_Handler                         0x080001b3   Thumb Code     2  startup_stm32f10x_md.o(.text)
    UsageFault_Handler                       0x080001b5   Thumb Code     2  startup_stm32f10x_md.o(.text)
    DebugMon_Handler                         0x080001b9   Thumb Code     2  startup_stm32f10x_md.o(.text)
    ADC1_2_IRQHandler                        0x080001bf   Thumb Code     0  startup_stm32f10x_md.o(.text)
    CAN1_RX1_IRQHandler                      0x080001bf   Thumb Code     0  startup_stm32f10x_md.o(.text)
    CAN1_SCE_IRQHandler                      0x080001bf   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel1_IRQHandler                 0x080001bf   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel2_IRQHandler                 0x080001bf   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel3_IRQHandler                 0x080001bf   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel4_IRQHandler                 0x080001bf   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel5_IRQHandler                 0x080001bf   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel6_IRQHandler                 0x080001bf   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel7_IRQHandler                 0x080001bf   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI0_IRQHandler                         0x080001bf   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI1_IRQHandler                         0x080001bf   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI2_IRQHandler                         0x080001bf   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI3_IRQHandler                         0x080001bf   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI4_IRQHandler                         0x080001bf   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI9_5_IRQHandler                       0x080001bf   Thumb Code     0  startup_stm32f10x_md.o(.text)
    FLASH_IRQHandler                         0x080001bf   Thumb Code     0  startup_stm32f10x_md.o(.text)
    I2C1_ER_IRQHandler                       0x080001bf   Thumb Code     0  startup_stm32f10x_md.o(.text)
    I2C1_EV_IRQHandler                       0x080001bf   Thumb Code     0  startup_stm32f10x_md.o(.text)
    I2C2_ER_IRQHandler                       0x080001bf   Thumb Code     0  startup_stm32f10x_md.o(.text)
    I2C2_EV_IRQHandler                       0x080001bf   Thumb Code     0  startup_stm32f10x_md.o(.text)
    PVD_IRQHandler                           0x080001bf   Thumb Code     0  startup_stm32f10x_md.o(.text)
    RCC_IRQHandler                           0x080001bf   Thumb Code     0  startup_stm32f10x_md.o(.text)
    RTCAlarm_IRQHandler                      0x080001bf   Thumb Code     0  startup_stm32f10x_md.o(.text)
    RTC_IRQHandler                           0x080001bf   Thumb Code     0  startup_stm32f10x_md.o(.text)
    SPI1_IRQHandler                          0x080001bf   Thumb Code     0  startup_stm32f10x_md.o(.text)
    SPI2_IRQHandler                          0x080001bf   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TAMPER_IRQHandler                        0x080001bf   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TIM1_BRK_IRQHandler                      0x080001bf   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TIM1_CC_IRQHandler                       0x080001bf   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TIM1_TRG_COM_IRQHandler                  0x080001bf   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TIM1_UP_IRQHandler                       0x080001bf   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TIM2_IRQHandler                          0x080001bf   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TIM4_IRQHandler                          0x080001bf   Thumb Code     0  startup_stm32f10x_md.o(.text)
    USART1_IRQHandler                        0x080001bf   Thumb Code     0  startup_stm32f10x_md.o(.text)
    USART3_IRQHandler                        0x080001bf   Thumb Code     0  startup_stm32f10x_md.o(.text)
    USBWakeUp_IRQHandler                     0x080001bf   Thumb Code     0  startup_stm32f10x_md.o(.text)
    USB_HP_CAN1_TX_IRQHandler                0x080001bf   Thumb Code     0  startup_stm32f10x_md.o(.text)
    USB_LP_CAN1_RX0_IRQHandler               0x080001bf   Thumb Code     0  startup_stm32f10x_md.o(.text)
    WWDG_IRQHandler                          0x080001bf   Thumb Code     0  startup_stm32f10x_md.o(.text)
    __user_initial_stackheap                 0x080001c1   Thumb Code     0  startup_stm32f10x_md.o(.text)
    __2sprintf                               0x080001e5   Thumb Code    34  noretval__2sprintf.o(.text)
    _printf_str                              0x0800020d   Thumb Code    82  _printf_str.o(.text)
    _printf_int_dec                          0x08000261   Thumb Code   104  _printf_dec.o(.text)
    __printf                                 0x080002d9   Thumb Code   184  __printf_ss.o(.text)
    strcpy                                   0x08000391   Thumb Code    72  strcpy.o(.text)
    strlen                                   0x080003d9   Thumb Code    62  strlen.o(.text)
    __aeabi_memcpy                           0x08000417   Thumb Code     0  rt_memcpy_v6.o(.text)
    __rt_memcpy                              0x08000417   Thumb Code   138  rt_memcpy_v6.o(.text)
    _memcpy_lastbytes                        0x0800047d   Thumb Code     0  rt_memcpy_v6.o(.text)
    __aeabi_memset4                          0x080004a1   Thumb Code    16  aeabi_memset4.o(.text)
    __aeabi_memset8                          0x080004a1   Thumb Code     0  aeabi_memset4.o(.text)
    __aeabi_memclr                           0x080004b1   Thumb Code     0  rt_memclr.o(.text)
    __rt_memclr                              0x080004b1   Thumb Code     0  rt_memclr.o(.text)
    _memset                                  0x080004b5   Thumb Code    64  rt_memclr.o(.text)
    strcmp                                   0x080004f5   Thumb Code   128  strcmpv7m.o(.text)
    __use_two_region_memory                  0x08000575   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow$2region                 0x08000577   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand$2region                 0x08000579   Thumb Code     2  heapauxi.o(.text)
    _printf_int_common                       0x0800057b   Thumb Code   178  _printf_intcommon.o(.text)
    _printf_char_common                      0x08000637   Thumb Code    32  _printf_char_common.o(.text)
    _sputc                                   0x0800065d   Thumb Code    10  _sputc.o(.text)
    _printf_cs_common                        0x08000667   Thumb Code    20  _printf_char.o(.text)
    _printf_char                             0x0800067b   Thumb Code    16  _printf_char.o(.text)
    _printf_string                           0x0800068b   Thumb Code     8  _printf_char.o(.text)
    __aeabi_memcpy4                          0x08000693   Thumb Code     0  rt_memcpy_w.o(.text)
    __aeabi_memcpy8                          0x08000693   Thumb Code     0  rt_memcpy_w.o(.text)
    __rt_memcpy_w                            0x08000693   Thumb Code   100  rt_memcpy_w.o(.text)
    _memcpy_lastbytes_aligned                0x080006db   Thumb Code     0  rt_memcpy_w.o(.text)
    __aeabi_memclr4                          0x080006f7   Thumb Code     0  rt_memclr_w.o(.text)
    __aeabi_memclr8                          0x080006f7   Thumb Code     0  rt_memclr_w.o(.text)
    __rt_memclr_w                            0x080006f7   Thumb Code     0  rt_memclr_w.o(.text)
    _memset_w                                0x080006fb   Thumb Code    74  rt_memclr_w.o(.text)
    __user_setup_stackheap                   0x08000745   Thumb Code    74  sys_stackheap_outer.o(.text)
    exit                                     0x0800078f   Thumb Code    18  exit.o(.text)
    __user_libspace                          0x080007a1   Thumb Code     8  libspace.o(.text)
    __user_perproc_libspace                  0x080007a1   Thumb Code     0  libspace.o(.text)
    _sys_exit                                0x080007a9   Thumb Code     8  sys_exit.o(.text)
    __I$use$semihosting                      0x080007b5   Thumb Code     0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x080007b5   Thumb Code     2  use_no_semi.o(.text)
    __semihosting_library_function           0x080007b7   Thumb Code     0  indicate_semi.o(.text)
    CLI_Transmit                             0x080007b9   Thumb Code    26  cli.o(.text.CLI_Transmit)
    EXTI15_10_IRQHandler                     0x080007d5   Thumb Code   108  timer.o(.text.EXTI15_10_IRQHandler)
    GPIO_ConfigurePin                        0x08000881   Thumb Code    44  myfunctions.o(.text.GPIO_ConfigurePin)
    PendSV_Handler                           0x080008b1   Thumb Code    68  port_1.o(.text.PendSV_Handler)
    RCC_EnableAFIOClock                      0x080008f5   Thumb Code    18  myfunctions.o(.text.RCC_EnableAFIOClock)
    RCC_EnableTimerClock                     0x08000909   Thumb Code    92  myfunctions.o(.text.RCC_EnableTimerClock)
    RCC_EnableUSARTClock                     0x08000965   Thumb Code    72  myfunctions.o(.text.RCC_EnableUSARTClock)
    RCC_SetGPIOClock                         0x080009ad   Thumb Code    40  myfunctions.o(.text.RCC_SetGPIOClock)
    SVC_Handler                              0x080009f1   Thumb Code    36  port_1.o(.text.SVC_Handler)
    SysTick_Handler                          0x08000a15   Thumb Code    30  cmsis_os2.o(.text.SysTick_Handler)
    SystemInit                               0x08000a35   Thumb Code   272  system_stm32f10x.o(.text.SystemInit)
    TIM3_IRQHandler                          0x08000b45   Thumb Code    40  timer.o(.text.TIM3_IRQHandler)
    TaskHandleUserInput                      0x08000b6d   Thumb Code   200  tasking.o(.text.TaskHandleUserInput)
    TaskProcessCommand                       0x08000c35   Thumb Code    52  tasking.o(.text.TaskProcessCommand)
    USART2_IRQHandler                        0x08000c69   Thumb Code    60  usart.o(.text.USART2_IRQHandler)
    _mutex_acquire                           0x08000ca5   Thumb Code    36  clib_arm.o(.text._mutex_acquire)
    _mutex_free                              0x08000cc9   Thumb Code    48  clib_arm.o(.text._mutex_free)
    _mutex_initialize                        0x08000cf9   Thumb Code    90  clib_arm.o(.text._mutex_initialize)
    _mutex_release                           0x08000d55   Thumb Code    38  clib_arm.o(.text._mutex_release)
    _platform_post_stackheap_init            0x08000d7d   Thumb Code     2  clib_arm.o(.text._platform_post_stackheap_init)
    characterToInt                           0x08000d81   Thumb Code    70  myfunctions.o(.text.characterToInt)
    clearScreenFromRow                       0x08000dc9   Thumb Code   146  cli.o(.text.clearScreenFromRow)
    clockInit                                0x08000e5d   Thumb Code   152  myfunctions.o(.text.clockInit)
    convertToString                          0x08000ef5   Thumb Code    32  cli.o(.text.convertToString)
    delay                                    0x08000f19   Thumb Code    42  myfunctions.o(.text.delay)
    display                                  0x08000f45   Thumb Code    84  cli.o(.text.display)
    displayBox                               0x08000f99   Thumb Code   302  staticstructure.o(.text.displayBox)
    displaySetup                             0x080010c9   Thumb Code   316  staticstructure.o(.text.displaySetup)
    draw                                     0x0800120d   Thumb Code   140  tasking.o(.text.draw)
    drawFifth                                0x08001299   Thumb Code   248  staticstructure.o(.text.drawFifth)
    drawFirst                                0x08001391   Thumb Code   248  staticstructure.o(.text.drawFirst)
    drawForth                                0x08001489   Thumb Code   248  staticstructure.o(.text.drawForth)
    drawSecond                               0x08001581   Thumb Code   248  staticstructure.o(.text.drawSecond)
    drawThird                                0x08001679   Thumb Code   248  staticstructure.o(.text.drawThird)
    floorStatus                              0x08001771   Thumb Code    68  tasking.o(.text.floorStatus)
    instructions                             0x080017c1   Thumb Code   216  staticstructure.o(.text.instructions)
    interruptPC13setup                       0x08001911   Thumb Code    86  timer.o(.text.interruptPC13setup)
    main                                     0x08001969   Thumb Code   236  main.o(.text.main)
    message                                  0x08001a6d   Thumb Code    34  cli.o(.text.message)
    moveElevatorToFloor                      0x08001a91   Thumb Code   236  tasking.o(.text.moveElevatorToFloor)
    newMemory                                0x08001bfd   Thumb Code    30  myfunctions.o(.text.newMemory)
    processCommand                           0x08001c1d   Thumb Code   152  tasking.o(.text.processCommand)
    pvPortMalloc                             0x0800231d   Thumb Code   372  heap_4.o(.text.pvPortMalloc)
    pvTaskIncrementMutexHeldCount            0x08002491   Thumb Code    24  tasks_1.o(.text.pvTaskIncrementMutexHeldCount)
    pxPortInitialiseStack                    0x080024a9   Thumb Code    32  port_1.o(.text.pxPortInitialiseStack)
    sendPromptArrows                         0x080024c9   Thumb Code    56  cli.o(.text.sendPromptArrows)
    sendbyte                                 0x08002505   Thumb Code    26  usart.o(.text.sendbyte)
    serial_close                             0x08002521   Thumb Code    32  usart.o(.text.serial_close)
    serial_open                              0x08002541   Thumb Code   130  usart.o(.text.serial_open)
    setCursorPosition                        0x080025c5   Thumb Code    56  cli.o(.text.setCursorPosition)
    setTextColor                             0x080025fd   Thumb Code    40  staticstructure.o(.text.setTextColor)
    status                                   0x08002625   Thumb Code    68  tasking.o(.text.status)
    timeElapsed                              0x08002675   Thumb Code    68  tasking.o(.text.timeElapsed)
    updateTimer                              0x080026d1   Thumb Code    60  timer.o(.text.updateTimer)
    uxListRemove                             0x0800270d   Thumb Code    36  list.o(.text.uxListRemove)
    vApplicationGetIdleTaskMemory            0x08002731   Thumb Code    26  cmsis_os2.o(.text.vApplicationGetIdleTaskMemory)
    vApplicationGetTimerTaskMemory           0x0800274d   Thumb Code    26  cmsis_os2.o(.text.vApplicationGetTimerTaskMemory)
    vApplicationStackOverflowHook            0x08002769   Thumb Code     2  cmsis_os2.o(.text.vApplicationStackOverflowHook)
    vListInitialise                          0x0800276d   Thumb Code    22  list.o(.text.vListInitialise)
    vListInitialiseItem                      0x08002785   Thumb Code     6  list.o(.text.vListInitialiseItem)
    vListInsert                              0x0800278d   Thumb Code    58  list.o(.text.vListInsert)
    vPortEnterCritical                       0x080027c9   Thumb Code    32  port_1.o(.text.vPortEnterCritical)
    vPortExitCritical                        0x080027e9   Thumb Code    26  port_1.o(.text.vPortExitCritical)
    vPortFree                                0x08002805   Thumb Code   158  heap_4.o(.text.vPortFree)
    vPortSetupTimerInterrupt                 0x080028a5   Thumb Code    52  port_1.o(.text.vPortSetupTimerInterrupt)
    vQueueDelete                             0x080028d9   Thumb Code    14  queue.o(.text.vQueueDelete)
    vQueueWaitForMessageRestricted           0x080028e9   Thumb Code    70  queue.o(.text.vQueueWaitForMessageRestricted)
    vTaskDelay                               0x08002931   Thumb Code   142  tasks_1.o(.text.vTaskDelay)
    vTaskInternalSetTimeOutState             0x080029c1   Thumb Code    26  tasks_1.o(.text.vTaskInternalSetTimeOutState)
    vTaskMissedYield                         0x080029dd   Thumb Code    14  tasks_1.o(.text.vTaskMissedYield)
    vTaskPlaceOnEventList                    0x080029ed   Thumb Code    32  tasks_1.o(.text.vTaskPlaceOnEventList)
    vTaskPlaceOnEventListRestricted          0x08002a0d   Thumb Code    90  tasks_1.o(.text.vTaskPlaceOnEventListRestricted)
    vTaskPriorityDisinheritAfterTimeout      0x08002a69   Thumb Code   128  tasks_1.o(.text.vTaskPriorityDisinheritAfterTimeout)
    vTaskStartScheduler                      0x08002ae9   Thumb Code   140  tasks_1.o(.text.vTaskStartScheduler)
    vTaskSuspendAll                          0x08002b7d   Thumb Code    16  tasks_1.o(.text.vTaskSuspendAll)
    vTaskSwitchContext                       0x08002b8d   Thumb Code   172  tasks_1.o(.text.vTaskSwitchContext)
    xPortStartScheduler                      0x08002c39   Thumb Code    84  port_1.o(.text.xPortStartScheduler)
    xPortSysTickHandler                      0x08002c8d   Thumb Code    46  port_1.o(.text.xPortSysTickHandler)
    xQueueCreateMutex                        0x08002cbd   Thumb Code    40  queue.o(.text.xQueueCreateMutex)
    xQueueCreateMutexStatic                  0x08002ce5   Thumb Code   120  queue.o(.text.xQueueCreateMutexStatic)
    xQueueGenericCreate                      0x08002d5d   Thumb Code   134  queue.o(.text.xQueueGenericCreate)
    xQueueGenericCreateStatic                0x08002de5   Thumb Code   128  queue.o(.text.xQueueGenericCreateStatic)
    xQueueGenericSend                        0x08002e65   Thumb Code   418  queue.o(.text.xQueueGenericSend)
    xQueueReceive                            0x08003009   Thumb Code   332  queue.o(.text.xQueueReceive)
    xQueueSemaphoreTake                      0x08003155   Thumb Code   382  queue.o(.text.xQueueSemaphoreTake)
    xTaskCheckForTimeOut                     0x080032d5   Thumb Code   104  tasks_1.o(.text.xTaskCheckForTimeOut)
    xTaskCreate                              0x0800333d   Thumb Code   210  tasks_1.o(.text.xTaskCreate)
    xTaskCreateStatic                        0x08003411   Thumb Code   168  tasks_1.o(.text.xTaskCreateStatic)
    xTaskGetSchedulerState                   0x080034b9   Thumb Code    38  tasks_1.o(.text.xTaskGetSchedulerState)
    xTaskGetTickCount                        0x080034e1   Thumb Code    12  tasks_1.o(.text.xTaskGetTickCount)
    xTaskIncrementTick                       0x080034ed   Thumb Code   406  tasks_1.o(.text.xTaskIncrementTick)
    xTaskPriorityDisinherit                  0x08003685   Thumb Code   112  tasks_1.o(.text.xTaskPriorityDisinherit)
    xTaskPriorityInherit                     0x080036f5   Thumb Code   166  tasks_1.o(.text.xTaskPriorityInherit)
    xTaskRemoveFromEventList                 0x0800379d   Thumb Code   216  tasks_1.o(.text.xTaskRemoveFromEventList)
    xTaskResumeAll                           0x08003875   Thumb Code   368  tasks_1.o(.text.xTaskResumeAll)
    xTimerCreateTimerTask                    0x080039e5   Thumb Code   176  timers.o(.text.xTimerCreateTimerTask)
    uxTopUsedPriority                        0x08003d2c   Data           4  tasks_1.o(.rodata.uxTopUsedPriority)
    Region$$Table$$Base                      0x08003d30   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x08003d50   Number         0  anon$$obj.o(Region$$Table)
    SystemCoreClock                          0x20000000   Data           4  system_stm32f10x.o(.data.SystemCoreClock)
    currentRow                               0x20000004   Data           1  main.o(.data.currentRow)
    floorNumber                              0x20000008   Data           4  main.o(.data.floorNumber)
    statusMessage                            0x2000000c   Data           4  main.o(.data.statusMessage)
    __libspace_start                         0x20000018   Data          96  libspace.o(.bss)
    __temporary_stack_top$libspace           0x20000078   Data           0  libspace.o(.bss)
    buttonPressed                            0x20000078   Data           1  main.o(.bss.buttonPressed)
    characterFlag                            0x2000007c   Data           4  main.o(.bss.characterFlag)
    characterReceived                        0x20000080   Data           1  main.o(.bss.characterReceived)
    currentColumn                            0x200002ac   Data           1  main.o(.bss.currentColumn)
    pxCurrentTCB                             0x20000354   Data           4  tasks_1.o(.bss.pxCurrentTCB)
    timeCounter                              0x200007cc   Data           4  main.o(.bss.timeCounter)
    xCommandQueue                            0x20002c04   Data           4  main.o(.bss.xCommandQueue)
    xDrawQueue                               0x20002c30   Data           4  main.o(.bss.xDrawQueue)



==============================================================================

Memory Map of the image

  Image Entry point : 0x080001a5

  Load Region LR_1 (Base: 0x08000000, Size: 0x00003d64, Max: 0xffffffff, ABSOLUTE)

    Execution Region ER_RO (Exec base: 0x08000000, Load base: 0x08000000, Size: 0x00003d50, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x08000000   0x08000000   0x000000ec   Data   RO          435    RESET               startup_stm32f10x_md.o
    0x080000ec   0x080000ec   0x00000008   Code   RO          886  * !!!main             c_w.l(__main.o)
    0x080000f4   0x080000f4   0x00000034   Code   RO         1064    !!!scatter          c_w.l(__scatter.o)
    0x08000128   0x08000128   0x0000001a   Code   RO         1066    !!handler_copy      c_w.l(__scatter_copy.o)
    0x08000142   0x08000142   0x00000002   PAD
    0x08000144   0x08000144   0x0000001c   Code   RO         1068    !!handler_zi        c_w.l(__scatter_zi.o)
    0x08000160   0x08000160   0x00000000   Code   RO          871    .ARM.Collect$$_printf_percent$$00000000  c_w.l(_printf_percent.o)
    0x08000160   0x08000160   0x00000006   Code   RO          869    .ARM.Collect$$_printf_percent$$00000009  c_w.l(_printf_d.o)
    0x08000166   0x08000166   0x00000006   Code   RO          870    .ARM.Collect$$_printf_percent$$0000000A  c_w.l(_printf_u.o)
    0x0800016c   0x0800016c   0x00000006   Code   RO          868    .ARM.Collect$$_printf_percent$$00000014  c_w.l(_printf_s.o)
    0x08000172   0x08000172   0x00000004   Code   RO          897    .ARM.Collect$$_printf_percent$$00000017  c_w.l(_printf_percent_end.o)
    0x08000176   0x08000176   0x00000002   Code   RO          926    .ARM.Collect$$libinit$$00000000  c_w.l(libinit.o)
    0x08000178   0x08000178   0x00000000   Code   RO          933    .ARM.Collect$$libinit$$00000002  c_w.l(libinit2.o)
    0x08000178   0x08000178   0x00000000   Code   RO          935    .ARM.Collect$$libinit$$00000004  c_w.l(libinit2.o)
    0x08000178   0x08000178   0x00000000   Code   RO          937    .ARM.Collect$$libinit$$00000006  c_w.l(libinit2.o)
    0x08000178   0x08000178   0x00000000   Code   RO          940    .ARM.Collect$$libinit$$0000000C  c_w.l(libinit2.o)
    0x08000178   0x08000178   0x00000000   Code   RO          942    .ARM.Collect$$libinit$$0000000E  c_w.l(libinit2.o)
    0x08000178   0x08000178   0x00000000   Code   RO          944    .ARM.Collect$$libinit$$00000010  c_w.l(libinit2.o)
    0x08000178   0x08000178   0x00000000   Code   RO          947    .ARM.Collect$$libinit$$00000013  c_w.l(libinit2.o)
    0x08000178   0x08000178   0x00000000   Code   RO          949    .ARM.Collect$$libinit$$00000015  c_w.l(libinit2.o)
    0x08000178   0x08000178   0x00000000   Code   RO          951    .ARM.Collect$$libinit$$00000017  c_w.l(libinit2.o)
    0x08000178   0x08000178   0x00000000   Code   RO          953    .ARM.Collect$$libinit$$00000019  c_w.l(libinit2.o)
    0x08000178   0x08000178   0x00000000   Code   RO          955    .ARM.Collect$$libinit$$0000001B  c_w.l(libinit2.o)
    0x08000178   0x08000178   0x00000000   Code   RO          957    .ARM.Collect$$libinit$$0000001D  c_w.l(libinit2.o)
    0x08000178   0x08000178   0x00000000   Code   RO          959    .ARM.Collect$$libinit$$0000001F  c_w.l(libinit2.o)
    0x08000178   0x08000178   0x00000000   Code   RO          961    .ARM.Collect$$libinit$$00000021  c_w.l(libinit2.o)
    0x08000178   0x08000178   0x00000000   Code   RO          963    .ARM.Collect$$libinit$$00000023  c_w.l(libinit2.o)
    0x08000178   0x08000178   0x00000000   Code   RO          965    .ARM.Collect$$libinit$$00000025  c_w.l(libinit2.o)
    0x08000178   0x08000178   0x00000000   Code   RO          967    .ARM.Collect$$libinit$$00000027  c_w.l(libinit2.o)
    0x08000178   0x08000178   0x00000000   Code   RO          971    .ARM.Collect$$libinit$$0000002E  c_w.l(libinit2.o)
    0x08000178   0x08000178   0x00000000   Code   RO          973    .ARM.Collect$$libinit$$00000030  c_w.l(libinit2.o)
    0x08000178   0x08000178   0x00000000   Code   RO          975    .ARM.Collect$$libinit$$00000032  c_w.l(libinit2.o)
    0x08000178   0x08000178   0x00000000   Code   RO          977    .ARM.Collect$$libinit$$00000034  c_w.l(libinit2.o)
    0x08000178   0x08000178   0x00000002   Code   RO          978    .ARM.Collect$$libinit$$00000035  c_w.l(libinit2.o)
    0x0800017a   0x0800017a   0x00000002   Code   RO         1000    .ARM.Collect$$libshutdown$$00000000  c_w.l(libshutdown.o)
    0x0800017c   0x0800017c   0x00000000   Code   RO         1015    .ARM.Collect$$libshutdown$$00000002  c_w.l(libshutdown2.o)
    0x0800017c   0x0800017c   0x00000000   Code   RO         1017    .ARM.Collect$$libshutdown$$00000004  c_w.l(libshutdown2.o)
    0x0800017c   0x0800017c   0x00000000   Code   RO         1020    .ARM.Collect$$libshutdown$$00000007  c_w.l(libshutdown2.o)
    0x0800017c   0x0800017c   0x00000000   Code   RO         1023    .ARM.Collect$$libshutdown$$0000000A  c_w.l(libshutdown2.o)
    0x0800017c   0x0800017c   0x00000000   Code   RO         1025    .ARM.Collect$$libshutdown$$0000000C  c_w.l(libshutdown2.o)
    0x0800017c   0x0800017c   0x00000000   Code   RO         1028    .ARM.Collect$$libshutdown$$0000000F  c_w.l(libshutdown2.o)
    0x0800017c   0x0800017c   0x00000002   Code   RO         1029    .ARM.Collect$$libshutdown$$00000010  c_w.l(libshutdown2.o)
    0x0800017e   0x0800017e   0x00000000   Code   RO          888    .ARM.Collect$$rtentry$$00000000  c_w.l(__rtentry.o)
    0x0800017e   0x0800017e   0x00000000   Code   RO          903    .ARM.Collect$$rtentry$$00000002  c_w.l(__rtentry2.o)
    0x0800017e   0x0800017e   0x00000006   Code   RO          915    .ARM.Collect$$rtentry$$00000004  c_w.l(__rtentry4.o)
    0x08000184   0x08000184   0x00000008   Code   RO          904    .ARM.Collect$$rtentry$$00000008  c_w.l(__rtentry2.o)
    0x0800018c   0x0800018c   0x00000004   Code   RO          906    .ARM.Collect$$rtentry$$0000000A  c_w.l(__rtentry2.o)
    0x08000190   0x08000190   0x00000000   Code   RO          908    .ARM.Collect$$rtentry$$0000000C  c_w.l(__rtentry2.o)
    0x08000190   0x08000190   0x00000008   Code   RO          909    .ARM.Collect$$rtentry$$0000000D  c_w.l(__rtentry2.o)
    0x08000198   0x08000198   0x00000002   Code   RO          930    .ARM.Collect$$rtexit$$00000000  c_w.l(rtexit.o)
    0x0800019a   0x0800019a   0x00000000   Code   RO          980    .ARM.Collect$$rtexit$$00000002  c_w.l(rtexit2.o)
    0x0800019a   0x0800019a   0x00000004   Code   RO          981    .ARM.Collect$$rtexit$$00000003  c_w.l(rtexit2.o)
    0x0800019e   0x0800019e   0x00000006   Code   RO          982    .ARM.Collect$$rtexit$$00000004  c_w.l(rtexit2.o)
    0x080001a4   0x080001a4   0x00000040   Code   RO          436  * .text               startup_stm32f10x_md.o
    0x080001e4   0x080001e4   0x00000028   Code   RO          840    .text               c_w.l(noretval__2sprintf.o)
    0x0800020c   0x0800020c   0x00000052   Code   RO          844    .text               c_w.l(_printf_str.o)
    0x0800025e   0x0800025e   0x00000002   PAD
    0x08000260   0x08000260   0x00000078   Code   RO          846    .text               c_w.l(_printf_dec.o)
    0x080002d8   0x080002d8   0x000000b8   Code   RO          851    .text               c_w.l(__printf_ss.o)
    0x08000390   0x08000390   0x00000048   Code   RO          872    .text               c_w.l(strcpy.o)
    0x080003d8   0x080003d8   0x0000003e   Code   RO          874    .text               c_w.l(strlen.o)
    0x08000416   0x08000416   0x0000008a   Code   RO          876    .text               c_w.l(rt_memcpy_v6.o)
    0x080004a0   0x080004a0   0x00000010   Code   RO          878    .text               c_w.l(aeabi_memset4.o)
    0x080004b0   0x080004b0   0x00000044   Code   RO          880    .text               c_w.l(rt_memclr.o)
    0x080004f4   0x080004f4   0x00000080   Code   RO          882    .text               c_w.l(strcmpv7m.o)
    0x08000574   0x08000574   0x00000006   Code   RO          884    .text               c_w.l(heapauxi.o)
    0x0800057a   0x0800057a   0x000000b2   Code   RO          889    .text               c_w.l(_printf_intcommon.o)
    0x0800062c   0x0800062c   0x00000030   Code   RO          891    .text               c_w.l(_printf_char_common.o)
    0x0800065c   0x0800065c   0x0000000a   Code   RO          893    .text               c_w.l(_sputc.o)
    0x08000666   0x08000666   0x0000002c   Code   RO          895    .text               c_w.l(_printf_char.o)
    0x08000692   0x08000692   0x00000064   Code   RO          898    .text               c_w.l(rt_memcpy_w.o)
    0x080006f6   0x080006f6   0x0000004e   Code   RO          900    .text               c_w.l(rt_memclr_w.o)
    0x08000744   0x08000744   0x0000004a   Code   RO          919    .text               c_w.l(sys_stackheap_outer.o)
    0x0800078e   0x0800078e   0x00000012   Code   RO          921    .text               c_w.l(exit.o)
    0x080007a0   0x080007a0   0x00000008   Code   RO          927    .text               c_w.l(libspace.o)
    0x080007a8   0x080007a8   0x0000000c   Code   RO          990    .text               c_w.l(sys_exit.o)
    0x080007b4   0x080007b4   0x00000002   Code   RO         1005    .text               c_w.l(use_no_semi.o)
    0x080007b6   0x080007b6   0x00000000   Code   RO         1007    .text               c_w.l(indicate_semi.o)
    0x080007b6   0x080007b6   0x00000002   PAD
    0x080007b8   0x080007b8   0x0000001a   Code   RO           22    .text.CLI_Transmit  cli.o
    0x080007d2   0x080007d2   0x00000002   PAD
    0x080007d4   0x080007d4   0x000000ac   Code   RO          115    .text.EXTI15_10_IRQHandler  timer.o
    0x08000880   0x08000880   0x0000002c   Code   RO           83    .text.GPIO_ConfigurePin  myfunctions.o
    0x080008ac   0x080008ac   0x00000004   PAD
    0x080008b0   0x080008b0   0x00000044   Code   RO          530    .text.PendSV_Handler  port_1.o
    0x080008f4   0x080008f4   0x00000012   Code   RO           75    .text.RCC_EnableAFIOClock  myfunctions.o
    0x08000906   0x08000906   0x00000002   PAD
    0x08000908   0x08000908   0x0000005c   Code   RO           81    .text.RCC_EnableTimerClock  myfunctions.o
    0x08000964   0x08000964   0x00000048   Code   RO           79    .text.RCC_EnableUSARTClock  myfunctions.o
    0x080009ac   0x080009ac   0x00000038   Code   RO           73    .text.RCC_SetGPIOClock  myfunctions.o
    0x080009e4   0x080009e4   0x0000000c   PAD
    0x080009f0   0x080009f0   0x00000024   Code   RO          516    .text.SVC_Handler   port_1.o
    0x08000a14   0x08000a14   0x0000001e   Code   RO          242    .text.SysTick_Handler  cmsis_os2.o
    0x08000a32   0x08000a32   0x00000002   PAD
    0x08000a34   0x08000a34   0x00000110   Code   RO          443    .text.SystemInit    system_stm32f10x.o
    0x08000b44   0x08000b44   0x00000028   Code   RO          111    .text.TIM3_IRQHandler  timer.o
    0x08000b6c   0x08000b6c   0x000000c8   Code   RO          131    .text.TaskHandleUserInput  tasking.o
    0x08000c34   0x08000c34   0x00000034   Code   RO          135    .text.TaskProcessCommand  tasking.o
    0x08000c68   0x08000c68   0x0000003c   Code   RO           61    .text.USART2_IRQHandler  usart.o
    0x08000ca4   0x08000ca4   0x00000024   Code   RO          194    .text._mutex_acquire  clib_arm.o
    0x08000cc8   0x08000cc8   0x00000030   Code   RO          198    .text._mutex_free   clib_arm.o
    0x08000cf8   0x08000cf8   0x0000005a   Code   RO          192    .text._mutex_initialize  clib_arm.o
    0x08000d52   0x08000d52   0x00000002   PAD
    0x08000d54   0x08000d54   0x00000026   Code   RO          196    .text._mutex_release  clib_arm.o
    0x08000d7a   0x08000d7a   0x00000002   PAD
    0x08000d7c   0x08000d7c   0x00000002   Code   RO          188    .text._platform_post_stackheap_init  clib_arm.o
    0x08000d7e   0x08000d7e   0x00000002   PAD
    0x08000d80   0x08000d80   0x00000046   Code   RO           95    .text.characterToInt  myfunctions.o
    0x08000dc6   0x08000dc6   0x00000002   PAD
    0x08000dc8   0x08000dc8   0x00000092   Code   RO           40    .text.clearScreenFromRow  cli.o
    0x08000e5a   0x08000e5a   0x00000002   PAD
    0x08000e5c   0x08000e5c   0x00000098   Code   RO           71    .text.clockInit     myfunctions.o
    0x08000ef4   0x08000ef4   0x00000024   Code   RO           30    .text.convertToString  cli.o
    0x08000f18   0x08000f18   0x0000002a   Code   RO           85    .text.delay         myfunctions.o
    0x08000f42   0x08000f42   0x00000002   PAD
    0x08000f44   0x08000f44   0x00000054   Code   RO           26    .text.display       cli.o
    0x08000f98   0x08000f98   0x0000012e   Code   RO          154    .text.displayBox    staticstructure.o
    0x080010c6   0x080010c6   0x00000002   PAD
    0x080010c8   0x080010c8   0x00000144   Code   RO          176    .text.displaySetup  staticstructure.o
    0x0800120c   0x0800120c   0x0000008c   Code   RO          133    .text.draw          tasking.o
    0x08001298   0x08001298   0x000000f8   Code   RO          160    .text.drawFifth     staticstructure.o
    0x08001390   0x08001390   0x000000f8   Code   RO          168    .text.drawFirst     staticstructure.o
    0x08001488   0x08001488   0x000000f8   Code   RO          162    .text.drawForth     staticstructure.o
    0x08001580   0x08001580   0x000000f8   Code   RO          166    .text.drawSecond    staticstructure.o
    0x08001678   0x08001678   0x000000f8   Code   RO          164    .text.drawThird     staticstructure.o
    0x08001770   0x08001770   0x00000050   Code   RO          127    .text.floorStatus   tasking.o
    0x080017c0   0x080017c0   0x00000150   Code   RO          170    .text.instructions  staticstructure.o
    0x08001910   0x08001910   0x00000056   Code   RO          113    .text.interruptPC13setup  timer.o
    0x08001966   0x08001966   0x00000002   PAD
    0x08001968   0x08001968   0x00000104   Code   RO            2    .text.main          main.o
    0x08001a6c   0x08001a6c   0x00000022   Code   RO           32    .text.message       cli.o
    0x08001a8e   0x08001a8e   0x00000002   PAD
    0x08001a90   0x08001a90   0x0000016c   Code   RO          139    .text.moveElevatorToFloor  tasking.o
    0x08001bfc   0x08001bfc   0x0000001e   Code   RO           97    .text.newMemory     myfunctions.o
    0x08001c1a   0x08001c1a   0x00000002   PAD
    0x08001c1c   0x08001c1c   0x00000138   Code   RO          137    .text.processCommand  tasking.o
    0x08001d54   0x08001d54   0x0000009e   Code   RO          652    .text.prvAddCurrentTaskToDelayedList  tasks_1.o
    0x08001df2   0x08001df2   0x00000002   PAD
    0x08001df4   0x08001df4   0x00000132   Code   RO          642    .text.prvAddNewTaskToReadyList  tasks_1.o
    0x08001f26   0x08001f26   0x00000002   PAD
    0x08001f28   0x08001f28   0x00000082   Code   RO          676    .text.prvIdleTask   tasks_1.o
    0x08001faa   0x08001faa   0x00000002   PAD
    0x08001fac   0x08001fac   0x00000020   Code   RO          522    .text.prvPortStartFirstTask  port_1.o
    0x08001fcc   0x08001fcc   0x00000082   Code   RO          818    .text.prvProcessExpiredTimer  timers.o
    0x0800204e   0x0800204e   0x00000002   PAD
    0x08002050   0x08002050   0x00000022   Code   RO          514    .text.prvTaskExitError  port_1.o
    0x08002072   0x08002072   0x00000002   PAD
    0x08002074   0x08002074   0x00000232   Code   RO          780    .text.prvTimerTask  timers.o
    0x080022a6   0x080022a6   0x00000002   PAD
    0x080022a8   0x080022a8   0x00000074   Code   RO          598    .text.prvUnlockQueue  queue.o
    0x0800231c   0x0800231c   0x00000174   Code   RO          543    .text.pvPortMalloc  heap_4.o
    0x08002490   0x08002490   0x00000018   Code   RO          732    .text.pvTaskIncrementMutexHeldCount  tasks_1.o
    0x080024a8   0x080024a8   0x00000020   Code   RO          512    .text.pxPortInitialiseStack  port_1.o
    0x080024c8   0x080024c8   0x0000003c   Code   RO           38    .text.sendPromptArrows  cli.o
    0x08002504   0x08002504   0x0000001a   Code   RO           57    .text.sendbyte      usart.o
    0x0800251e   0x0800251e   0x00000002   PAD
    0x08002520   0x08002520   0x00000020   Code   RO           55    .text.serial_close  usart.o
    0x08002540   0x08002540   0x00000082   Code   RO           51    .text.serial_open   usart.o
    0x080025c2   0x080025c2   0x00000002   PAD
    0x080025c4   0x080025c4   0x00000038   Code   RO           28    .text.setCursorPosition  cli.o
    0x080025fc   0x080025fc   0x00000028   Code   RO          152    .text.setTextColor  staticstructure.o
    0x08002624   0x08002624   0x00000050   Code   RO          125    .text.status        tasking.o
    0x08002674   0x08002674   0x0000005c   Code   RO          129    .text.timeElapsed   tasking.o
    0x080026d0   0x080026d0   0x0000003c   Code   RO          107    .text.updateTimer   timer.o
    0x0800270c   0x0800270c   0x00000024   Code   RO          502    .text.uxListRemove  list.o
    0x08002730   0x08002730   0x0000001a   Code   RO          390    .text.vApplicationGetIdleTaskMemory  cmsis_os2.o
    0x0800274a   0x0800274a   0x00000002   PAD
    0x0800274c   0x0800274c   0x0000001a   Code   RO          392    .text.vApplicationGetTimerTaskMemory  cmsis_os2.o
    0x08002766   0x08002766   0x00000002   PAD
    0x08002768   0x08002768   0x00000002   Code   RO          388    .text.vApplicationStackOverflowHook  cmsis_os2.o
    0x0800276a   0x0800276a   0x00000002   PAD
    0x0800276c   0x0800276c   0x00000016   Code   RO          494    .text.vListInitialise  list.o
    0x08002782   0x08002782   0x00000002   PAD
    0x08002784   0x08002784   0x00000006   Code   RO          496    .text.vListInitialiseItem  list.o
    0x0800278a   0x0800278a   0x00000002   PAD
    0x0800278c   0x0800278c   0x0000003a   Code   RO          500    .text.vListInsert   list.o
    0x080027c6   0x080027c6   0x00000002   PAD
    0x080027c8   0x080027c8   0x00000020   Code   RO          526    .text.vPortEnterCritical  port_1.o
    0x080027e8   0x080027e8   0x0000001a   Code   RO          528    .text.vPortExitCritical  port_1.o
    0x08002802   0x08002802   0x00000002   PAD
    0x08002804   0x08002804   0x0000009e   Code   RO          545    .text.vPortFree     heap_4.o
    0x080028a2   0x080028a2   0x00000002   PAD
    0x080028a4   0x080028a4   0x00000034   Code   RO          520    .text.vPortSetupTimerInterrupt  port_1.o
    0x080028d8   0x080028d8   0x0000000e   Code   RO          618    .text.vQueueDelete  queue.o
    0x080028e6   0x080028e6   0x00000002   PAD
    0x080028e8   0x080028e8   0x00000046   Code   RO          630    .text.vQueueWaitForMessageRestricted  queue.o
    0x0800292e   0x0800292e   0x00000002   PAD
    0x08002930   0x08002930   0x0000008e   Code   RO          656    .text.vTaskDelay    tasks_1.o
    0x080029be   0x080029be   0x00000002   PAD
    0x080029c0   0x080029c0   0x0000001a   Code   RO          706    .text.vTaskInternalSetTimeOutState  tasks_1.o
    0x080029da   0x080029da   0x00000002   PAD
    0x080029dc   0x080029dc   0x0000000e   Code   RO          710    .text.vTaskMissedYield  tasks_1.o
    0x080029ea   0x080029ea   0x00000002   PAD
    0x080029ec   0x080029ec   0x00000020   Code   RO          694    .text.vTaskPlaceOnEventList  tasks_1.o
    0x08002a0c   0x08002a0c   0x0000005a   Code   RO          698    .text.vTaskPlaceOnEventListRestricted  tasks_1.o
    0x08002a66   0x08002a66   0x00000002   PAD
    0x08002a68   0x08002a68   0x00000080   Code   RO          728    .text.vTaskPriorityDisinheritAfterTimeout  tasks_1.o
    0x08002ae8   0x08002ae8   0x00000094   Code   RO          674    .text.vTaskStartScheduler  tasks_1.o
    0x08002b7c   0x08002b7c   0x00000010   Code   RO          650    .text.vTaskSuspendAll  tasks_1.o
    0x08002b8c   0x08002b8c   0x000000ac   Code   RO          668    .text.vTaskSwitchContext  tasks_1.o
    0x08002c38   0x08002c38   0x00000054   Code   RO          518    .text.xPortStartScheduler  port_1.o
    0x08002c8c   0x08002c8c   0x0000002e   Code   RO          532    .text.xPortSysTickHandler  port_1.o
    0x08002cba   0x08002cba   0x00000002   PAD
    0x08002cbc   0x08002cbc   0x00000028   Code   RO          578    .text.xQueueCreateMutex  queue.o
    0x08002ce4   0x08002ce4   0x00000078   Code   RO          580    .text.xQueueCreateMutexStatic  queue.o
    0x08002d5c   0x08002d5c   0x00000086   Code   RO          576    .text.xQueueGenericCreate  queue.o
    0x08002de2   0x08002de2   0x00000002   PAD
    0x08002de4   0x08002de4   0x00000080   Code   RO          574    .text.xQueueGenericCreateStatic  queue.o
    0x08002e64   0x08002e64   0x000001a2   Code   RO          588    .text.xQueueGenericSend  queue.o
    0x08003006   0x08003006   0x00000002   PAD
    0x08003008   0x08003008   0x0000014c   Code   RO          604    .text.xQueueReceive  queue.o
    0x08003154   0x08003154   0x0000017e   Code   RO          592    .text.xQueueSemaphoreTake  queue.o
    0x080032d2   0x080032d2   0x00000002   PAD
    0x080032d4   0x080032d4   0x00000068   Code   RO          708    .text.xTaskCheckForTimeOut  tasks_1.o
    0x0800333c   0x0800333c   0x000000d2   Code   RO          644    .text.xTaskCreate   tasks_1.o
    0x0800340e   0x0800340e   0x00000002   PAD
    0x08003410   0x08003410   0x000000a8   Code   RO          640    .text.xTaskCreateStatic  tasks_1.o
    0x080034b8   0x080034b8   0x00000026   Code   RO          722    .text.xTaskGetSchedulerState  tasks_1.o
    0x080034de   0x080034de   0x00000002   PAD
    0x080034e0   0x080034e0   0x0000000c   Code   RO          682    .text.xTaskGetTickCount  tasks_1.o
    0x080034ec   0x080034ec   0x00000196   Code   RO          680    .text.xTaskIncrementTick  tasks_1.o
    0x08003682   0x08003682   0x00000002   PAD
    0x08003684   0x08003684   0x00000070   Code   RO          726    .text.xTaskPriorityDisinherit  tasks_1.o
    0x080036f4   0x080036f4   0x000000a6   Code   RO          724    .text.xTaskPriorityInherit  tasks_1.o
    0x0800379a   0x0800379a   0x00000002   PAD
    0x0800379c   0x0800379c   0x000000d8   Code   RO          700    .text.xTaskRemoveFromEventList  tasks_1.o
    0x08003874   0x08003874   0x00000170   Code   RO          654    .text.xTaskResumeAll  tasks_1.o
    0x080039e4   0x080039e4   0x000000b8   Code   RO          778    .text.xTimerCreateTimerTask  timers.o
    0x08003a9c   0x08003a9c   0x0000002c   Data   RO            5    .rodata.str1.1      main.o
    0x08003ac8   0x08003ac8   0x0000000d   Data   RO           42    .rodata.str1.1      cli.o
    0x08003ad5   0x08003ad5   0x0000001f   Data   RO          117    .rodata.str1.1      timer.o
    0x08003af4   0x08003af4   0x00000062   Data   RO          141    .rodata.str1.1      tasking.o
    0x08003b56   0x08003b56   0x000001d6   Data   RO          178    .rodata.str1.1      staticstructure.o
    0x08003d2c   0x08003d2c   0x00000004   Data   RO          749    .rodata.uxTopUsedPriority  tasks_1.o
    0x08003d30   0x08003d30   0x00000020   Data   RO         1063    Region$$Table       anon$$obj.o


    Execution Region ER_RW (Exec base: 0x20000000, Load base: 0x08003d50, Size: 0x00000014, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x08003d50   0x00000004   Data   RW          447    .data.SystemCoreClock  system_stm32f10x.o
    0x20000004   0x08003d54   0x00000001   Data   RW            7    .data.currentRow    main.o
    0x20000005   0x08003d55   0x00000003   PAD
    0x20000008   0x08003d58   0x00000004   Data   RW            4    .data.floorNumber   main.o
    0x2000000c   0x08003d5c   0x00000004   Data   RW            6    .data.statusMessage  main.o
    0x20000010   0x08003d60   0x00000004   Data   RW          534    .data.uxCriticalNesting  port_1.o


    Execution Region ER_ZI (Exec base: 0x20000018, Load base: 0x08003d64, Size: 0x00003298, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000018        -       0x00000060   Zero   RW          928    .bss                c_w.l(libspace.o)
    0x20000078        -       0x00000001   Zero   RW            9    .bss.buttonPressed  main.o
    0x20000079   0x08003d64   0x00000003   PAD
    0x2000007c        -       0x00000004   Zero   RW           12    .bss.characterFlag  main.o
    0x20000080        -       0x00000001   Zero   RW           13    .bss.characterReceived  main.o
    0x20000081   0x08003d64   0x00000003   PAD
    0x20000084        -       0x00000190   Zero   RW          203    .bss.clib_mutex_cb  clib_arm.o
    0x20000214        -       0x00000014   Zero   RW          202    .bss.clib_mutex_id  clib_arm.o
    0x20000228        -       0x00000080   Zero   RW          142    .bss.cmdBuffer      tasking.o
    0x200002a8        -       0x00000004   Zero   RW          143    .bss.cmdIndex       tasking.o
    0x200002ac        -       0x00000001   Zero   RW            8    .bss.currentColumn  main.o
    0x200002ad        -       0x00000050   Zero   RW          828    .bss.prvCheckForValidListAndQueue.ucStaticTimerQueueStorage  timers.o
    0x200002fd   0x08003d64   0x00000003   PAD
    0x20000300        -       0x00000050   Zero   RW          827    .bss.prvCheckForValidListAndQueue.xStaticTimerQueue  timers.o
    0x20000350        -       0x00000004   Zero   RW          824    .bss.prvSampleTimeNow.xLastTime  timers.o
    0x20000354        -       0x00000004   Zero   RW          748    .bss.pxCurrentTCB   tasks_1.o
    0x20000358        -       0x00000004   Zero   RW          822    .bss.pxCurrentTimerList  timers.o
    0x2000035c        -       0x00000004   Zero   RW          756    .bss.pxDelayedTaskList  tasks_1.o
    0x20000360        -       0x00000004   Zero   RW          557    .bss.pxEnd          heap_4.o
    0x20000364        -       0x00000004   Zero   RW          757    .bss.pxOverflowDelayedTaskList  tasks_1.o
    0x20000368        -       0x00000004   Zero   RW          823    .bss.pxOverflowTimerList  timers.o
    0x2000036c        -       0x00000460   Zero   RW          759    .bss.pxReadyTasksLists  tasks_1.o
    0x200007cc        -       0x00000004   Zero   RW           14    .bss.timeCounter    main.o
    0x200007d0        -       0x00002000   Zero   RW          563    .bss.ucHeap         heap_4.o
    0x200027d0        -       0x00000004   Zero   RW          753    .bss.uxCurrentNumberOfTasks  tasks_1.o
    0x200027d4        -       0x00000004   Zero   RW          752    .bss.uxDeletedTasksWaitingCleanUp  tasks_1.o
    0x200027d8        -       0x00000004   Zero   RW          761    .bss.uxSchedulerSuspended  tasks_1.o
    0x200027dc        -       0x00000004   Zero   RW          750    .bss.uxTaskNumber   tasks_1.o
    0x200027e0        -       0x00000004   Zero   RW          760    .bss.uxTopReadyPriority  tasks_1.o
    0x200027e4        -       0x00000200   Zero   RW          396    .bss.vApplicationGetIdleTaskMemory.Idle_Stack  cmsis_os2.o
    0x200029e4        -       0x0000005c   Zero   RW          395    .bss.vApplicationGetIdleTaskMemory.Idle_TCB  cmsis_os2.o
    0x20002a40        -       0x00000140   Zero   RW          398    .bss.vApplicationGetTimerTaskMemory.Timer_Stack  cmsis_os2.o
    0x20002b80        -       0x0000005c   Zero   RW          397    .bss.vApplicationGetTimerTaskMemory.Timer_TCB  cmsis_os2.o
    0x20002bdc        -       0x00000014   Zero   RW          825    .bss.xActiveTimerList1  timers.o
    0x20002bf0        -       0x00000014   Zero   RW          826    .bss.xActiveTimerList2  timers.o
    0x20002c04        -       0x00000004   Zero   RW           10    .bss.xCommandQueue  main.o
    0x20002c08        -       0x00000014   Zero   RW          768    .bss.xDelayedTaskList1  tasks_1.o
    0x20002c1c        -       0x00000014   Zero   RW          769    .bss.xDelayedTaskList2  tasks_1.o
    0x20002c30        -       0x00000004   Zero   RW           11    .bss.xDrawQueue     main.o
    0x20002c34        -       0x00000004   Zero   RW          558    .bss.xFreeBytesRemaining  heap_4.o
    0x20002c38        -       0x00000004   Zero   RW          764    .bss.xIdleTaskHandle  tasks_1.o
    0x20002c3c        -       0x00000004   Zero   RW          560    .bss.xMinimumEverFreeBytesRemaining  heap_4.o
    0x20002c40        -       0x00000004   Zero   RW          765    .bss.xNextTaskUnblockTime  tasks_1.o
    0x20002c44        -       0x00000004   Zero   RW          767    .bss.xNumOfOverflows  tasks_1.o
    0x20002c48        -       0x00000004   Zero   RW          561    .bss.xNumberOfSuccessfulAllocations  heap_4.o
    0x20002c4c        -       0x00000004   Zero   RW          562    .bss.xNumberOfSuccessfulFrees  heap_4.o
    0x20002c50        -       0x00000004   Zero   RW          766    .bss.xPendedTicks   tasks_1.o
    0x20002c54        -       0x00000014   Zero   RW          763    .bss.xPendingReadyList  tasks_1.o
    0x20002c68        -       0x00000004   Zero   RW          754    .bss.xSchedulerRunning  tasks_1.o
    0x20002c6c        -       0x00000008   Zero   RW          559    .bss.xStart         heap_4.o
    0x20002c74        -       0x00000014   Zero   RW          758    .bss.xSuspendedTaskList  tasks_1.o
    0x20002c88        -       0x00000014   Zero   RW          751    .bss.xTasksWaitingTermination  tasks_1.o
    0x20002c9c        -       0x00000004   Zero   RW          755    .bss.xTickCount     tasks_1.o
    0x20002ca0        -       0x00000004   Zero   RW          820    .bss.xTimerQueue    timers.o
    0x20002ca4        -       0x00000004   Zero   RW          821    .bss.xTimerTaskHandle  timers.o
    0x20002ca8        -       0x00000004   Zero   RW          762    .bss.xYieldPending  tasks_1.o
    0x20002cac   0x08003d64   0x00000004   PAD
    0x20002cb0        -       0x00000200   Zero   RW          434    HEAP                startup_stm32f10x_md.o
    0x20002eb0        -       0x00000400   Zero   RW          433    STACK               startup_stm32f10x_md.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       442          8         13          0          0       4626   cli.o
       214          0          0          0        420       4116   clib_arm.o
        84          0          0          0       1016      59042   cmsis_os2.o
       530          0          0          0       8220       5275   heap_4.o
       122          0          0          0          0       2362   list.o
       260         24         44          9         19       1362   main.o
       576         20          0          0          0       5219   myfunctions.o
       442         12          0          4          0       2937   port_1.o
      1754          0          0          0          0      21401   queue.o
        64         26        236          0       1536        860   startup_stm32f10x_md.o
      2242        128        470          0          0       7252   staticstructure.o
       272          0          0          4          0       2812   system_stm32f10x.o
      1320        336         98          0        132       3684   tasking.o
      3186          8          4          0       1280      36429   tasks_1.o
       358         64         31          0          0       4950   timer.o
       876         18          0          0        220      14290   timers.o
       248          0          0          0          0       4898   usart.o

    ----------------------------------------------------------------------
     13092        656        928         20      12856     181515   Object Totals
         0          0         32          0          0          0   (incl. Generated)
       102         12          0          3         13          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         8          0          0          0          0         68   __main.o
       184          0          0          0          0         84   __printf_ss.o
         0          0          0          0          0          0   __rtentry.o
        20          0          0          0          0          0   __rtentry2.o
         6          0          0          0          0          0   __rtentry4.o
        52          8          0          0          0          0   __scatter.o
        26          0          0          0          0          0   __scatter_copy.o
        28          0          0          0          0          0   __scatter_zi.o
        44          0          0          0          0        108   _printf_char.o
        48          6          0          0          0         96   _printf_char_common.o
         6          0          0          0          0          0   _printf_d.o
       120         16          0          0          0         92   _printf_dec.o
       178          0          0          0          0         88   _printf_intcommon.o
         0          0          0          0          0          0   _printf_percent.o
         4          0          0          0          0          0   _printf_percent_end.o
         6          0          0          0          0          0   _printf_s.o
        82          0          0          0          0         80   _printf_str.o
         6          0          0          0          0          0   _printf_u.o
        10          0          0          0          0         68   _sputc.o
        16          0          0          0          0         68   aeabi_memset4.o
        18          0          0          0          0         80   exit.o
         6          0          0          0          0        152   heapauxi.o
         0          0          0          0          0          0   indicate_semi.o
         2          0          0          0          0          0   libinit.o
         2          0          0          0          0          0   libinit2.o
         2          0          0          0          0          0   libshutdown.o
         2          0          0          0          0          0   libshutdown2.o
         8          4          0          0         96         68   libspace.o
        40          6          0          0          0         84   noretval__2sprintf.o
        68          0          0          0          0         68   rt_memclr.o
        78          0          0          0          0         80   rt_memclr_w.o
       138          0          0          0          0         68   rt_memcpy_v6.o
       100          0          0          0          0         80   rt_memcpy_w.o
         2          0          0          0          0          0   rtexit.o
        10          0          0          0          0          0   rtexit2.o
       128          0          0          0          0         68   strcmpv7m.o
        72          0          0          0          0         80   strcpy.o
        62          0          0          0          0         76   strlen.o
        12          4          0          0          0         68   sys_exit.o
        74          0          0          0          0         80   sys_stackheap_outer.o
         2          0          0          0          0         68   use_no_semi.o

    ----------------------------------------------------------------------
      1676         44          0          0         96       1872   Library Totals
         6          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

      1670         44          0          0         96       1872   c_w.l

    ----------------------------------------------------------------------
      1676         44          0          0         96       1872   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     14768        700        928         20      12952     182147   Grand Totals
     14768        700        928         20      12952     182147   ELF Image Totals
     14768        700        928         20          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                15696 (  15.33kB)
    Total RW  Size (RW Data + ZI Data)             12972 (  12.67kB)
    Total ROM Size (Code + RO Data + RW Data)      15716 (  15.35kB)

==============================================================================

